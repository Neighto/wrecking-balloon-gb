; ENEMY NUMBER
; Must be < 16 to fit in 4 bits
POINT_BALLOON EQU 0
BALLOON_CARRIER EQU 1
BIRD EQU 2
BOMB EQU 3
PROJECTILE EQU 4
BOSS_NEEDLE EQU 5
ANVIL EQU 6
EXPLOSION EQU 7

; ENEMY VARIANTS
; Must be < 16 to fit in 4 bits

; -- point balloon
BALLOON_EASY_VARIANT EQU 0
BALLOON_MEDIUM_VARIANT EQU 1
BALLOON_HARD_VARIANT EQU 2

; -- balloon carrier
CARRIER_NORMAL_VARIANT EQU 0
CARRIER_PROJECTILE_VARIANT EQU 1
CARRIER_FOLLOW_VARIANT EQU 2
CARRIER_BOMB_VARIANT EQU 3
CARRIER_ANVIL_VARIANT EQU 4

; -- bird
BIRD_EASY_VARIANT EQU 0
BIRD_HARD_VARIANT EQU 1

; -- bomb
BOMB_DIRECT_VARIANT EQU 0
BOMB_FOLLOW_VARIANT EQU 1

; -- projectile
PROJECTILE_NORMAL_VARIANT EQU 0

; -- boss needle
NEEDLE_UP_MOVE_LEFT_VARIANT EQU 0
NEEDLE_UP_MOVE_RIGHT_VARIANT EQU 1
NEEDLE_DOWN_MOVE_LEFT_VARIANT EQU 2
NEEDLE_DOWN_MOVE_RIGHT_VARIANT EQU 3

; -- anvil
ANVIL_NORMAL_VARIANT EQU 0
ANVIL_CACTUS_VARIANT EQU 1
ANVIL_WARNING_VARIANT EQU 2

; -- explosion
EXPLOSION_BOMB_VARIANT EQU 0
EXPLOSION_CONGRATULATIONS_VARIANT EQU 1

; ENEMY DATA INFO

NUMBER_OF_ENEMIES_HALF EQU 5
NUMBER_OF_ENEMIES EQU NUMBER_OF_ENEMIES_HALF * 2
ENEMY_STRUCT_SIZE EQU 9 ; Bytes in enemy struct vars
ENEMY_DATA_SIZE EQU ENEMY_STRUCT_SIZE * NUMBER_OF_ENEMIES
FALLING_ENEMIES_DATA_SIZE EQU 2

; ENEMY FLAG STATE

ENEMY_FLAG_ACTIVE_MASK EQU %00000001
ENEMY_FLAG_ACTIVE_BIT EQU 0

ENEMY_FLAG_ALIVE_MASK EQU %00000010
ENEMY_FLAG_ALIVE_BIT EQU 1

ENEMY_FLAG_DYING_MASK EQU %00000100
ENEMY_FLAG_DYING_BIT EQU 2

ENEMY_FLAG_DIRECTION_MASK EQU %00001000 ; right=0 left=1
ENEMY_FLAG_DIRECTION_BIT EQU 3 ; right=0 left=1

ENEMY_FLAG_HIT_ENEMY_MASK EQU %00010000
ENEMY_FLAG_HIT_ENEMY_BIT EQU 4

ENEMY_FLAG_PARAM1_MASK EQU %00100000
ENEMY_FLAG_PARAM1_BIT EQU 5

ENEMY_FLAG_PARAM2_MASK EQU %01000000
ENEMY_FLAG_PARAM2_BIT EQU 6

ENEMY_FLAG_PARAM3_MASK EQU %10000000
ENEMY_FLAG_PARAM3_BIT EQU 7