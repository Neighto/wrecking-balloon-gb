ROM0 bank #0:
  SECTION: $0000-$003a ($003b bytes) ["rom"]
           $0000 = START
           $0029 = GAMELOOP
  SECTION: $0040-$0040 ($0001 byte) ["VBlank IRQ"]
  SECTION: $0048-$0048 ($0001 byte) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 byte) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 byte) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$0060 ($0001 byte) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0061-$00e0 ($0080 bytes) ["Cactus_Tiles"]
           $0061 = CactusTiles
           $00e1 = CactusTilesEnd
  SECTION: $00e1-$00fc ($001c bytes) ["OAM DMA routine"]
           $00e1 = CopyDMARoutine
           $00e8 = CopyDMARoutine.copy
           $00ef = DMARoutine
           $00f3 = DMARoutine.wait
           $00f7 = OAMDMA
           $00f7 = DMARoutineEnd
  SECTION: $0100-$014f ($0050 bytes) ["Start"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$0406 ($0077 bytes) ["joypad"]
           $0390 = ReadInput
           $03c0 = JOY_RIGHT
           $03c8 = JOY_LEFT
           $03d0 = JOY_UP
           $03d8 = JOY_DOWN
           $03e0 = JOY_A
           $03e8 = JOY_B
           $03f0 = JOY_SELECT
           $03fa = JOY_START
           $0404 = JOY_FALSE
  SECTION: $0407-$0466 ($0060 bytes) ["Background_Tiles"]
           $0407 = BackgroundTiles
           $0467 = BackgroundTilesEnd
  SECTION: $0467-$0499 ($0033 bytes) ["Math Div 16 Code"]
           $0467 = DIVIDE
           $0473 = DIVIDE.nxtbit
           $0497 = DIVIDE.noadd
  SECTION: $049a-$04c1 ($0028 bytes) ["Graphics"]
           $049a = LoadGameData
  SECTION: $04c2-$04d7 ($0016 bytes) ["Scrolling"]
           $04c2 = VBlank_HScroll
           $04d5 = VBlank_HScroll.end
    SLACK: $3b4c bytes

ROMX bank #1:
  SECTION: $4000-$4145 ($0146 bytes) ["player"]
           $4000 = InitializePlayer
           $4048 = IncrementPosition
           $404e = DecrementPosition
           $4056 = MoveRight
           $406f = MoveLeft
           $4088 = MoveDown
           $40a1 = MoveUp
           $40ba = SpeedUp
           $40c0 = ResetSpeedUp
           $40c6 = PlayerUpdate
           $40df = PlayerUpdate.endRight
           $40ea = PlayerUpdate.endLeft
           $40f5 = PlayerUpdate.endUp
           $4100 = PlayerUpdate.endDown
           $410c = PlayerUpdate.endA
           $410f = PlayerUpdate.end
           $4110 = PlayerAnimate
           $4134 = PlayerAnimate.bobDown
           $4145 = PlayerAnimate.end
  SECTION: $4146-$417b ($0036 bytes) ["memory"]
           $4146 = MEMCPY.memcpy_loop
           $4146 = MEMCPY
           $414a = MEMCPY.memcpy_check_limit
           $4150 = CLEAR_OAM
           $4156 = CLEAR_OAM.clear_oam_loop
           $415f = CLEAR_RAM
           $4165 = CLEAR_RAM.clear_ram_loop
           $416e = CLEAR_SPRITES
           $4171 = CLEAR_SPRITES.clear_sprites
  SECTION: $417c-$41a6 ($002b bytes) ["lcd"]
           $417c = LCD_OFF
           $4181 = LCD_ON
           $4186 = WAIT_VBLANK
           $418d = CLEAR_MAP
           $4194 = CLEAR_MAP.clear_map_loop
    SLACK: $3e59 bytes

WRAM0 bank #0:
  SECTION: $c000-$c09f ($00a0 bytes) ["Shadow OAM"]
           $c000 = wShadowOAM
  SECTION: $c0a0-$c0a2 ($0003 bytes) ["Math Div 16 Ram"]
           $c0a0 = _MD16temp
           $c0a2 = _MD16count
  SECTION: $c0a3-$c0a4 ($0002 bytes) ["player_vars"]
           $c0a3 = player_x
           $c0a4 = player_y
  SECTION: $c100-$c106 ($0007 bytes) ["RAM Vars"]
           $c100 = scroll_timer
           $c101 = movement_timer
           $c102 = player_bob_timer
           $c103 = player_bobbed_up
           $c104 = joypad_down
           $c105 = joypad_pressed
           $c106 = player_speed
    SLACK: $0f54 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $04b4 bytes in 1 bank
    ROMX: $01a7 bytes in 1 bank
    WRAM0: $00ac bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
