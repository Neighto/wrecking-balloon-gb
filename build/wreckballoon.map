ROM0 bank #0:
  SECTION: $0000-$0038 ($0039 bytes) ["graphics"]
           $0000 = LoadGameData
           $002e = SetupPalettes
  SECTION: $0039-$003d ($0005 bytes) ["audio"]
           $0039 = TurnOffAudio
  SECTION: $0040-$0040 ($0001 byte) ["vblank IRQ"]
           $0040 = VBLANK_VECT
  SECTION: $0041-$00b7 ($0077 bytes) ["collision"]
           $0041 = CollisionCheck
           $005a = CollisionCheck.tryOtherY
           $006a = CollisionCheck.checkX
           $0079 = CollisionCheck.tryOtherX
           $0089 = CollisionCheck.collision
           $008c = CollisionCheck.end
           $008f = CollisionUpdate
           $00a3 = CollisionUpdate.endPointBalloon
           $00b7 = CollisionUpdate.endEnemy
  SECTION: $00b8-$00f8 ($0041 bytes) ["rom"]
           $00b8 = START
           $00de = GAMELOOP
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$044f ($00c0 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0450 = CactusTilesEnd
  SECTION: $0450-$04c2 ($0073 bytes) ["joypad"]
           $0450 = ReadInput
           $0480 = JOY_RIGHT
           $0488 = JOY_LEFT
           $0490 = JOY_UP
           $0498 = JOY_DOWN
           $04a0 = JOY_A
           $04a8 = JOY_B
           $04b0 = JOY_SELECT
           $04b8 = JOY_START
           $04c0 = JOY_FALSE
  SECTION: $04c3-$0522 ($0060 bytes) ["Background_Tiles"]
           $04c3 = BackgroundTiles
           $0523 = BackgroundTilesEnd
  SECTION: $0523-$053e ($001c bytes) ["OAM DMA routine"]
           $0523 = CopyDMARoutine
           $052a = CopyDMARoutine.copy
           $0531 = DMARoutine
           $0535 = DMARoutine.wait
           $0539 = DMARoutineEnd
           $0539 = OAMDMA
  SECTION: $053f-$0554 ($0016 bytes) ["scroll"]
           $053f = VBlankHScroll
           $0552 = VBlankHScroll.end
  SECTION: $0555-$055c ($0008 bytes) ["timer"]
           $0555 = UpdateGlobalTimer
    SLACK: $3aac bytes

ROMX bank #1:
  SECTION: $4000-$4262 ($0263 bytes) ["player"]
           $4000 = UpdateBalloonPosition
           $4019 = UpdateCactusPosition
           $4032 = UpdatePlayerPosition
           $4039 = InitializePlayer
           $408b = IncrementPosition
           $408e = DecrementPosition
           $4093 = MoveBalloonUp
           $409d = MoveBalloonRight
           $40a7 = MoveBalloonLeft
           $40b1 = MoveBalloonDown
           $40bb = MoveCactusUp
           $40c5 = MoveCactusRight
           $40cf = MoveCactusLeft
           $40d9 = MoveCactusDown
           $40e3 = BobCactusUp
           $40ec = BobCactusDown
           $40f5 = MoveCactusDriftLeft
           $410e = MoveCactusDriftLeft.end
           $410f = MoveCactusDriftRight
           $4127 = MoveCactusDriftRight.end
           $4128 = MoveCactusDriftCenterX
           $413e = MoveCactusDriftCenterX.moveRight
           $4140 = MoveCactusDriftCenterX.moveLeft
           $4141 = MoveCactusDriftCenterX.end
           $4142 = MoveCactusDriftUp
           $415b = MoveCactusDriftUp.end
           $415c = MoveCactusDriftDown
           $4174 = MoveCactusDriftDown.end
           $4175 = MoveCactusDriftCenterY
           $418e = MoveCactusDriftCenterY.moveUp
           $4190 = MoveCactusDriftCenterY.moveDown
           $4191 = MoveCactusDriftCenterY.end
           $4192 = MoveRight
           $419c = MoveLeft
           $41a6 = MoveDown
           $41b0 = MoveUp
           $41b7 = SpeedUp
           $41bd = ResetSpeedUp
           $41c3 = PlayerMovement
           $41d8 = PlayerMovement.endRight
           $41e3 = PlayerMovement.endLeft
           $41ee = PlayerMovement.endUp
           $41f9 = PlayerMovement.endDown
           $420c = PlayerMovement.endDriftToCenterX
           $421f = PlayerMovement.endDriftToCenterY
           $4227 = PlayerMovement.endA
           $4234 = PlayerMovement.endB
           $4237 = PlayerMovement.end
           $423b = PlayerAnimate
           $424d = PlayerAnimate.bobUp
           $4256 = PlayerAnimate.bobDown
           $425e = PlayerAnimate.end
           $425f = PlayerUpdate
  SECTION: $4263-$43b8 ($0156 bytes) ["point balloon"]
           $4263 = InitializePointBalloon
           $427f = InitializePointBalloon.nextSpawnPoint
           $429b = InitializePointBalloon.spawn0
           $429f = InitializePointBalloon.spawn1
           $42a3 = InitializePointBalloon.spawn2
           $42a7 = InitializePointBalloon.spawn3
           $42a9 = InitializePointBalloon.EndNextSpawnPoint
           $42cc = SpawnPointBalloon
           $42d4 = FloatPointBalloonUp
           $42e3 = PointBalloonUpdate
           $42f5 = PointBalloonUpdate.popped
           $4303 = PointBalloonUpdate.respawnSkip
           $430d = PointBalloonUpdate.end
           $430e = PopBalloonAnimation
           $4322 = PopBalloonAnimation.special
           $4335 = PopBalloonAnimation.frame0
           $4361 = PopBalloonAnimation.frame1
           $438d = PopBalloonAnimation.clear
           $43a6 = PopBalloonAnimation.end
           $43a7 = DeathOfPointBalloon
  SECTION: $43b9-$44dc ($0124 bytes) ["enemy"]
           $43b9 = InitializeEnemy
           $4418 = EnemyUpdate
           $4427 = EnemyUpdate.popped
           $4427 = EnemyUpdate.respawnSkip
           $4431 = EnemyUpdate.end
           $4432 = DeathOfEnemy
           $4444 = PopBalloonAnimation
           $4458 = PopBalloonAnimation.special
           $446b = PopBalloonAnimation.frame0
           $4497 = PopBalloonAnimation.frame1
           $44c3 = PopBalloonAnimation.clear
           $44dc = PopBalloonAnimation.end
  SECTION: $44dd-$4507 ($002b bytes) ["lcd"]
           $44dd = LCD_OFF
           $44e2 = LCD_ON
           $44e7 = WaitVBlank
           $44ee = ClearMap
           $44f5 = ClearMap.clear_map_loop
  SECTION: $4508-$452f ($0028 bytes) ["memory"]
           $4508 = MEMCPY.memcpy_loop
           $4508 = MEMCPY
           $450c = MEMCPY.memcpy_check_limit
           $4512 = ClearOAM
           $4518 = ClearOAM.clear_oam_loop
           $4521 = ClearRAM
           $4527 = ClearRAM.clear_ram_loop
  SECTION: $4530-$4537 ($0008 bytes) ["math"]
           $4530 = RANDOM
           $4531 = RANDOM.seed
           $4533 = RANDOM.loop
    SLACK: $3ac8 bytes

WRAM0 bank #0:
  SECTION: $c000-$c01c ($001d bytes) ["RAM vars"]
           $c000 = scroll_timer
           $c001 = movement_timer
           $c002 = collision_timer
           $c003 = balloon_pop_timer
           $c004 = enemy_pop_timer
           $c005 = player_bob_timer
           $c006 = player_drift_timer_x
           $c007 = player_drift_timer_y
           $c008 = point_balloon_respawn_timer
           $c009 = player_bobbed_up
           $c00a = joypad_down
           $c00b = joypad_pressed
           $c00c = player_speed
           $c00d = player_x
           $c00e = player_y
           $c00f = player_cactus_x
           $c010 = player_cactus_y
           $c011 = point_balloon_alive
           $c012 = point_balloon_popping
           $c013 = point_balloon_popping_frame
           $c014 = point_balloon_x
           $c015 = point_balloon_y
           $c016 = enemy_x
           $c017 = enemy_y
           $c018 = enemy_cactus_x
           $c019 = enemy_cactus_y
           $c01a = enemy_alive
           $c01b = enemy_popping
           $c01c = enemy_popping_frame
  SECTION: $c100-$c133 ($0034 bytes) ["OAM vars"]
           $c100 = player_cactus
           $c108 = player_balloon
           $c110 = point_balloon
           $c114 = balloon_pop
           $c124 = enemy_cactus
           $c12c = enemy_balloon
    SLACK: $0faf bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $0554 bytes in 1 bank
    ROMX: $0538 bytes in 1 bank
    WRAM0: $0051 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
