ROM0 bank #0:
  SECTION: $0000-$0037 ($0038 bytes) ["rom"]
           $0000 = START
           $0029 = GAMELOOP
  SECTION: $0040-$0040 ($0001 byte) ["VBlank IRQ"]
  SECTION: $0048-$0048 ($0001 byte) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 byte) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 byte) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$0060 ($0001 byte) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0061-$00d7 ($0077 bytes) ["joypad"]
           $0061 = ReadInput
           $0091 = JOY_RIGHT
           $0099 = JOY_LEFT
           $00a1 = JOY_UP
           $00a9 = JOY_DOWN
           $00b1 = JOY_A
           $00b9 = JOY_B
           $00c1 = JOY_SELECT
           $00cb = JOY_START
           $00d5 = JOY_FALSE
  SECTION: $00d8-$00ff ($0028 bytes) ["Graphics"]
           $00d8 = LoadGameData
  SECTION: $0100-$014f ($0050 bytes) ["Start"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$03ff ($0070 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0400 = CactusTilesEnd
  SECTION: $0400-$045f ($0060 bytes) ["Background_Tiles"]
           $0400 = BackgroundTiles
           $0460 = BackgroundTilesEnd
  SECTION: $0460-$0492 ($0033 bytes) ["Math Div 16 Code"]
           $0460 = DIVIDE
           $046c = DIVIDE.nxtbit
           $0490 = DIVIDE.noadd
  SECTION: $0493-$04ae ($001c bytes) ["OAM DMA routine"]
           $0493 = CopyDMARoutine
           $049a = CopyDMARoutine.copy
           $04a1 = DMARoutine
           $04a5 = DMARoutine.wait
           $04a9 = OAMDMA
           $04a9 = DMARoutineEnd
  SECTION: $04af-$04c4 ($0016 bytes) ["Scrolling"]
           $04af = VBlank_HScroll
           $04c2 = VBlank_HScroll.end
    SLACK: $3b5f bytes

ROMX bank #1:
  SECTION: $4000-$41a7 ($01a8 bytes) ["player"]
           $4000 = InitializePlayer
           $4080 = IncrementPosition
           $4086 = DecrementPosition
           $408e = MoveRight
           $40bf = MoveLeft
           $40f0 = MoveDown
           $4121 = MoveUp
           $4152 = SpeedUp
           $4158 = ResetSpeedUp
           $415e = PlayerUpdate
           $4177 = PlayerUpdate.endRight
           $4182 = PlayerUpdate.endLeft
           $418d = PlayerUpdate.endUp
           $4198 = PlayerUpdate.endDown
           $41a4 = PlayerUpdate.endA
           $41a7 = PlayerUpdate.end
  SECTION: $41a8-$41dd ($0036 bytes) ["memory"]
           $41a8 = MEMCPY.memcpy_loop
           $41a8 = MEMCPY
           $41ac = MEMCPY.memcpy_check_limit
           $41b2 = CLEAR_OAM
           $41b8 = CLEAR_OAM.clear_oam_loop
           $41c1 = CLEAR_RAM
           $41c7 = CLEAR_RAM.clear_ram_loop
           $41d0 = CLEAR_SPRITES
           $41d3 = CLEAR_SPRITES.clear_sprites
  SECTION: $41de-$4208 ($002b bytes) ["lcd"]
           $41de = LCD_OFF
           $41e3 = LCD_ON
           $41e8 = WAIT_VBLANK
           $41ef = CLEAR_MAP
           $41f6 = CLEAR_MAP.clear_map_loop
    SLACK: $3df7 bytes

WRAM0 bank #0:
  SECTION: $c000-$c09f ($00a0 bytes) ["Shadow OAM"]
           $c000 = wShadowOAM
  SECTION: $c0a0-$c0a2 ($0003 bytes) ["Math Div 16 Ram"]
           $c0a0 = _MD16temp
           $c0a2 = _MD16count
  SECTION: $c0a3-$c0a4 ($0002 bytes) ["player_vars"]
           $c0a3 = player_x
           $c0a4 = player_y
  SECTION: $c100-$c104 ($0005 bytes) ["RAM Vars"]
           $c100 = scroll_timer
           $c101 = movement_timer
           $c102 = joypad_down
           $c103 = joypad_pressed
           $c104 = player_speed
    SLACK: $0f56 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $04a1 bytes in 1 bank
    ROMX: $0209 bytes in 1 bank
    WRAM0: $00aa bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
