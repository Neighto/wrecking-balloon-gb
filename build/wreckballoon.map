ROM0 bank #0:
  SECTION: $0000-$0035 ($0036 bytes) ["graphics"]
           $0000 = LoadGameData
           $002b = SetupPalettes
  SECTION: $0036-$003a ($0005 bytes) ["otherfornow"]
           $0036 = TurnOffAudio
  SECTION: $0040-$0040 ($0001 byte) ["VBlank IRQ"]
  SECTION: $0048-$0048 ($0001 byte) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 byte) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 byte) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$0060 ($0001 byte) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0061-$00d7 ($0077 bytes) ["joypad"]
           $0061 = ReadInput
           $0091 = JOY_RIGHT
           $0099 = JOY_LEFT
           $00a1 = JOY_UP
           $00a9 = JOY_DOWN
           $00b1 = JOY_A
           $00b9 = JOY_B
           $00c1 = JOY_SELECT
           $00cb = JOY_START
           $00d5 = JOY_FALSE
  SECTION: $00d8-$00f3 ($001c bytes) ["OAM DMA routine"]
           $00d8 = CopyDMARoutine
           $00df = CopyDMARoutine.copy
           $00e6 = DMARoutine
           $00ea = DMARoutine.wait
           $00ee = DMARoutineEnd
           $00ee = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["Start"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$044f ($00c0 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0450 = CactusTilesEnd
  SECTION: $0450-$04af ($0060 bytes) ["Background_Tiles"]
           $0450 = BackgroundTiles
           $04b0 = BackgroundTilesEnd
  SECTION: $04b0-$04e3 ($0034 bytes) ["rom"]
           $04b0 = START
           $04cf = GAMELOOP
  SECTION: $04e4-$0516 ($0033 bytes) ["Math Div 16 Code"]
           $04e4 = DIVIDE
           $04f0 = DIVIDE.nxtbit
           $0514 = DIVIDE.noadd
  SECTION: $0517-$052c ($0016 bytes) ["scroll"]
           $0517 = VBlankHScroll
           $052a = VBlankHScroll.end
    SLACK: $3b00 bytes

ROMX bank #1:
  SECTION: $4000-$4185 ($0186 bytes) ["point balloon"]
           $4000 = InitializePointBalloon
           $403b = DecrementPosition
           $4042 = FloatPointBalloonUp
           $404f = PointBalloonUpdate
           $4061 = PointBalloonUpdate.popped
           $406b = PointBalloonUpdate.end
           $406c = PopBalloonAnimation
           $408d = PopBalloonAnimation.frame0
           $40b9 = PopBalloonAnimation.frame1
           $40e5 = PopBalloonAnimation.clear
           $410e = PopBalloonAnimation.end
           $410f = DeathOfPointBalloon
           $4128 = CollisionCheck
           $414b = CollisionCheck.tryOtherY
           $415e = CollisionCheck.checkX
           $416f = CollisionCheck.tryOtherX
           $4182 = CollisionCheck.doSomething
           $4185 = CollisionCheck.end
  SECTION: $4186-$42e0 ($015b bytes) ["player"]
           $4186 = InitializePlayer
           $41ce = IncrementPosition
           $41d4 = DecrementPosition
           $41dc = MoveBalloonUp
           $41e9 = MoveBalloonRight
           $41f6 = MoveBalloonLeft
           $4203 = MoveBalloonDown
           $4210 = MoveCactusUp
           $421d = MoveCactusRight
           $422a = MoveCactusLeft
           $4237 = MoveCactusDown
           $4244 = MoveRight
           $4244 = BobCactusDown
           $424b = MoveLeft
           $4252 = MoveDown
           $4259 = MoveUp
           $4260 = SpeedUp
           $4266 = ResetSpeedUp
           $426c = PlayerMovement
           $4285 = PlayerMovement.endRight
           $4290 = PlayerMovement.endLeft
           $429b = PlayerMovement.endUp
           $42a6 = PlayerMovement.endDown
           $42b2 = PlayerMovement.endA
           $42b5 = PlayerMovement.end
           $42b6 = PlayerAnimate
           $42c8 = PlayerAnimate.bobUp
           $42d1 = PlayerAnimate.bobDown
           $42d9 = PlayerAnimate.end
           $42da = PlayerUpdate
  SECTION: $42e1-$430b ($002b bytes) ["lcd"]
           $42e1 = LCD_OFF
           $42e6 = LCD_ON
           $42eb = WAIT_VBLANK
           $42f2 = ClearMap
           $42f9 = ClearMap.clear_map_loop
  SECTION: $430c-$4333 ($0028 bytes) ["memory"]
           $430c = MEMCPY.memcpy_loop
           $430c = MEMCPY
           $4310 = MEMCPY.memcpy_check_limit
           $4316 = ClearOAM
           $431c = ClearOAM.clear_oam_loop
           $4325 = ClearRAM
           $432b = ClearRAM.clear_ram_loop
    SLACK: $3ccc bytes

WRAM0 bank #0:
  SECTION: $c000-$c00f ($0010 bytes) ["RAM vars"]
           $c000 = scroll_timer
           $c001 = movement_timer
           $c002 = collision_timer
           $c003 = balloon_pop_timer
           $c004 = player_bob_timer
           $c005 = player_bobbed_up
           $c006 = joypad_down
           $c007 = joypad_pressed
           $c008 = player_speed
           $c009 = player_x
           $c00a = player_y
           $c00b = point_balloon_alive
           $c00c = point_balloon_popping
           $c00d = point_balloon_popping_frame
           $c00e = point_balloon_x
           $c00f = point_balloon_y
  SECTION: $c010-$c012 ($0003 bytes) ["Math Div 16 Ram"]
           $c010 = _MD16temp
           $c012 = _MD16count
  SECTION: $c100-$c123 ($0024 bytes) ["OAM vars"]
           $c100 = player_balloon
           $c108 = player_cactus
           $c110 = point_balloon
           $c114 = balloon_pop
    SLACK: $0fc9 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $0500 bytes in 1 bank
    ROMX: $0334 bytes in 1 bank
    WRAM0: $0037 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
