ROM0 bank #0:
  SECTION: $0000-$0038 ($0039 bytes) ["graphics"]
           $0000 = LoadGameData
           $002e = SetupPalettes
  SECTION: $0039-$003d ($0005 bytes) ["audio"]
           $0039 = TurnOffAudio
  SECTION: $0040-$0040 ($0001 byte) ["vblank IRQ"]
           $0040 = VBLANK_VECT
  SECTION: $0041-$00b7 ($0077 bytes) ["collision"]
           $0041 = CollisionCheck
           $005a = CollisionCheck.tryOtherY
           $006a = CollisionCheck.checkX
           $0079 = CollisionCheck.tryOtherX
           $0089 = CollisionCheck.collision
           $008c = CollisionCheck.end
           $008f = CollisionUpdate
           $00a3 = CollisionUpdate.endPointBalloon
           $00b7 = CollisionUpdate.endEnemy
  SECTION: $00b8-$00f8 ($0041 bytes) ["rom"]
           $00b8 = START
           $00de = GAMELOOP
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$044f ($00c0 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0450 = CactusTilesEnd
  SECTION: $0450-$04c2 ($0073 bytes) ["joypad"]
           $0450 = ReadInput
           $0480 = JOY_RIGHT
           $0488 = JOY_LEFT
           $0490 = JOY_UP
           $0498 = JOY_DOWN
           $04a0 = JOY_A
           $04a8 = JOY_B
           $04b0 = JOY_SELECT
           $04b8 = JOY_START
           $04c0 = JOY_FALSE
  SECTION: $04c3-$0522 ($0060 bytes) ["Background_Tiles"]
           $04c3 = BackgroundTiles
           $0523 = BackgroundTilesEnd
  SECTION: $0523-$053e ($001c bytes) ["OAM DMA routine"]
           $0523 = CopyDMARoutine
           $052a = CopyDMARoutine.copy
           $0531 = DMARoutine
           $0535 = DMARoutine.wait
           $0539 = DMARoutineEnd
           $0539 = OAMDMA
  SECTION: $053f-$0554 ($0016 bytes) ["scroll"]
           $053f = VBlankHScroll
           $0552 = VBlankHScroll.end
  SECTION: $0555-$055c ($0008 bytes) ["timer"]
           $0555 = UpdateGlobalTimer
  SECTION: $055d-$0564 ($0008 bytes) ["tools"]
           $055d = IncrementPosition
           $0560 = DecrementPosition
    SLACK: $3aa4 bytes

ROMX bank #1:
  SECTION: $4000-$425a ($025b bytes) ["player"]
           $4000 = UpdateBalloonPosition
           $4019 = UpdateCactusPosition
           $4032 = UpdatePlayerPosition
           $4039 = InitializePlayer
           $408b = MoveBalloonUp
           $4095 = MoveBalloonRight
           $409f = MoveBalloonLeft
           $40a9 = MoveBalloonDown
           $40b3 = MoveCactusUp
           $40bd = MoveCactusRight
           $40c7 = MoveCactusLeft
           $40d1 = MoveCactusDown
           $40db = BobCactusUp
           $40e4 = BobCactusDown
           $40ed = MoveCactusDriftLeft
           $4106 = MoveCactusDriftLeft.end
           $4107 = MoveCactusDriftRight
           $411f = MoveCactusDriftRight.end
           $4120 = MoveCactusDriftCenterX
           $4136 = MoveCactusDriftCenterX.moveRight
           $4138 = MoveCactusDriftCenterX.moveLeft
           $4139 = MoveCactusDriftCenterX.end
           $413a = MoveCactusDriftUp
           $4153 = MoveCactusDriftUp.end
           $4154 = MoveCactusDriftDown
           $416c = MoveCactusDriftDown.end
           $416d = MoveCactusDriftCenterY
           $4186 = MoveCactusDriftCenterY.moveUp
           $4188 = MoveCactusDriftCenterY.moveDown
           $4189 = MoveCactusDriftCenterY.end
           $418a = MoveRight
           $4194 = MoveLeft
           $419e = MoveDown
           $41a8 = MoveUp
           $41af = SpeedUp
           $41b5 = ResetSpeedUp
           $41bb = PlayerMovement
           $41d0 = PlayerMovement.endRight
           $41db = PlayerMovement.endLeft
           $41e6 = PlayerMovement.endUp
           $41f1 = PlayerMovement.endDown
           $4204 = PlayerMovement.endDriftToCenterX
           $4217 = PlayerMovement.endDriftToCenterY
           $421f = PlayerMovement.endA
           $422c = PlayerMovement.endB
           $422f = PlayerMovement.end
           $4233 = PlayerAnimate
           $4245 = PlayerAnimate.bobUp
           $424e = PlayerAnimate.bobDown
           $4256 = PlayerAnimate.end
           $4257 = PlayerUpdate
  SECTION: $425b-$43eb ($0191 bytes) ["enemy"]
           $425b = UpdateBalloonPosition
           $4274 = UpdateCactusPosition
           $428d = UpdateEnemyPosition
           $4294 = InitializeEnemy
           $42f7 = MoveBalloonRight
           $4300 = MoveCactusRight
           $4309 = MoveBalloonDown
           $4312 = MoveCactusDown
           $431b = MoveRight
           $4322 = MoveDown
           $4329 = MoveEnemy
           $4336 = MoveEnemy.end
           $4337 = PopBalloonAnimation
           $435c = PopBalloonAnimation.frame0
           $4372 = PopBalloonAnimation.frame1
           $4388 = PopBalloonAnimation.clear
           $43a0 = PopBalloonAnimation.end
           $43a1 = CactusFalling
           $43b0 = CactusFalling.end
           $43b6 = EnemyUpdate
           $43c8 = EnemyUpdate.popped
           $43c8 = EnemyUpdate.respawnSkip
           $43d2 = EnemyUpdate.notPopping
           $43dc = EnemyUpdate.end
           $43dd = DeathOfEnemy
  SECTION: $43ec-$450b ($0120 bytes) ["point balloon"]
           $43ec = InitializePointBalloon
           $4408 = InitializePointBalloon.nextSpawnPoint
           $4424 = InitializePointBalloon.spawn0
           $4428 = InitializePointBalloon.spawn1
           $442c = InitializePointBalloon.spawn2
           $4430 = InitializePointBalloon.spawn3
           $4432 = InitializePointBalloon.EndNextSpawnPoint
           $4455 = SpawnPointBalloon
           $445d = FloatPointBalloonUp
           $446c = PopBalloonAnimation
           $4491 = PopBalloonAnimation.frame0
           $44a7 = PopBalloonAnimation.frame1
           $44bd = PopBalloonAnimation.clear
           $44d5 = PopBalloonAnimation.end
           $44d6 = PointBalloonUpdate
           $44e8 = PointBalloonUpdate.popped
           $44f6 = PointBalloonUpdate.respawnSkip
           $4500 = PointBalloonUpdate.end
           $4501 = DeathOfPointBalloon
  SECTION: $450c-$4536 ($002b bytes) ["lcd"]
           $450c = LCD_OFF
           $4511 = LCD_ON
           $4516 = WaitVBlank
           $451d = ClearMap
           $4524 = ClearMap.clear_map_loop
  SECTION: $4537-$455e ($0028 bytes) ["memory"]
           $4537 = MEMCPY.memcpy_loop
           $4537 = MEMCPY
           $453b = MEMCPY.memcpy_check_limit
           $4541 = ClearOAM
           $4547 = ClearOAM.clear_oam_loop
           $4550 = ClearRAM
           $4556 = ClearRAM.clear_ram_loop
  SECTION: $455f-$4566 ($0008 bytes) ["math"]
           $455f = RANDOM
           $4560 = RANDOM.seed
           $4562 = RANDOM.loop
    SLACK: $3a99 bytes

WRAM0 bank #0:
  SECTION: $c000-$c01d ($001e bytes) ["RAM vars"]
           $c000 = scroll_timer
           $c001 = movement_timer
           $c002 = collision_timer
           $c003 = balloon_pop_timer
           $c004 = enemy_pop_timer
           $c005 = player_bob_timer
           $c006 = player_drift_timer_x
           $c007 = player_drift_timer_y
           $c008 = point_balloon_respawn_timer
           $c009 = player_bobbed_up
           $c00a = joypad_down
           $c00b = joypad_pressed
           $c00c = player_speed
           $c00d = player_x
           $c00e = player_y
           $c00f = player_cactus_x
           $c010 = player_cactus_y
           $c011 = point_balloon_alive
           $c012 = point_balloon_popping
           $c013 = point_balloon_popping_frame
           $c014 = point_balloon_x
           $c015 = point_balloon_y
           $c016 = enemy_x
           $c017 = enemy_y
           $c018 = enemy_cactus_x
           $c019 = enemy_cactus_y
           $c01a = enemy_alive
           $c01b = enemy_popping
           $c01c = enemy_popping_frame
           $c01d = enemy_falling
  SECTION: $c100-$c127 ($0028 bytes) ["OAM vars"]
           $c100 = player_cactus
           $c108 = player_balloon
           $c110 = point_balloon
           $c118 = enemy_cactus
           $c120 = enemy_balloon
    SLACK: $0fba bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $055c bytes in 1 bank
    ROMX: $0567 bytes in 1 bank
    WRAM0: $0046 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
