ROM0 bank #0:
  SECTION: $0000-$0036 ($0037 bytes) ["rom"]
           $0000 = START
           $0029 = GameLoop
  SECTION: $0040-$0040 ($0001 byte) ["VBlank IRQ"]
  SECTION: $0048-$0048 ($0001 byte) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 byte) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 byte) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$0060 ($0001 byte) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0061-$00d0 ($0070 bytes) ["Cactus_Tiles"]
           $0061 = CactusTiles
           $00d1 = CactusTilesEnd
  SECTION: $00d1-$00f8 ($0028 bytes) ["Graphics"]
           $00d1 = LoadGameData
  SECTION: $0100-$0151 ($0052 bytes) ["Start"]
  SECTION: $0152-$0391 ($0240 bytes) ["Background_Map"]
           $0152 = BackgroundMap
           $0392 = BackgroundMapEnd
  SECTION: $0392-$03f1 ($0060 bytes) ["Background_Tiles"]
           $0392 = BackgroundTiles
           $03f2 = BackgroundTilesEnd
  SECTION: $03f2-$0424 ($0033 bytes) ["Math Div 16 Code"]
           $03f2 = DIVIDE
           $03fe = DIVIDE.nxtbit
           $0422 = DIVIDE.noadd
  SECTION: $0425-$043a ($0016 bytes) ["Scrolling"]
           $0425 = VBlank_HScroll
           $0438 = VBlank_HScroll.end
  SECTION: $043b-$0450 ($0016 bytes) ["OAM DMA routine"]
           $043b = CopyDMARoutine
           $0442 = CopyDMARoutine.copy
           $0449 = DMARoutine
           $044d = DMARoutine.wait
           $0451 = DMARoutineEnd
    SLACK: $3bdb bytes

ROMX bank #1:
  SECTION: $4000-$407a ($007b bytes) ["player"]
           $4000 = player_sprite_init
  SECTION: $407b-$40b6 ($003c bytes) ["joypad"]
           $407b = read_joypad
           $40a2 = clear_joypad
  SECTION: $40b7-$40ec ($0036 bytes) ["memory"]
           $40b7 = memcpy.memcpy_loop
           $40b7 = memcpy
           $40bb = memcpy.memcpy_check_limit
           $40c1 = CLEAR_OAM
           $40c7 = CLEAR_OAM.clear_oam_loop
           $40d0 = CLEAR_RAM
           $40d6 = CLEAR_RAM.clear_ram_loop
           $40df = CLEAR_SPRITES
           $40e2 = CLEAR_SPRITES.clear_sprites
  SECTION: $40ed-$4117 ($002b bytes) ["lcd"]
           $40ed = LCD_OFF
           $40f2 = LCD_ON
           $40f7 = WAIT_VBLANK
           $40fe = CLEAR_MAP
           $4105 = CLEAR_MAP.clear_map_loop
    SLACK: $3ee8 bytes

WRAM0 bank #0:
  SECTION: $c000-$c09f ($00a0 bytes) ["Shadow OAM"]
           $c000 = wShadowOAM
  SECTION: $c0a0-$c0a3 ($0004 bytes) ["joypad_vars"]
           $c0a0 = IO_P14
           $c0a1 = IO_P15
           $c0a2 = IO_P14_OLD
           $c0a3 = IO_P15_OLD
  SECTION: $c0a4-$c0a6 ($0003 bytes) ["Math Div 16 Ram"]
           $c0a4 = _MD16temp
           $c0a6 = _MD16count
  SECTION: $c0a7-$c0a8 ($0002 bytes) ["player_vars"]
           $c0a7 = player_x
           $c0a8 = player_y
  SECTION: $c100-$c147 ($0048 bytes) ["RAM Vars"]
           $c100 = joypad_down
           $c101 = joypad_pressed
           $c102 = bullets_alive
           $c103 = player_ground
           $c104 = player_idle
           $c105 = player_fset
           $c106 = player_fcount
           $c107 = player_gcount
           $c108 = player_fstart
           $c109 = player_fend
           $c10a = player_y_temp
           $c10b = player_x_temp
           $c10c = player_yvel
           $c10d = player_frame
           $c10e = player_tile
           $c10f = player_flags
           $c110 = player_hp
           $c111 = arb_counter
           $c112 = scroll_timer
           $c113 = my_sprites
           $c147 = GAME_MAP_DATA
    SLACK: $0f0f bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $0425 bytes in 1 bank
    ROMX: $0118 bytes in 1 bank
    WRAM0: $00f1 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
