ROM0 bank #0:
  SECTION: $0000-$0035 ($0036 bytes) ["graphics"]
           $0000 = LoadGameData
           $002b = SetupPalettes
  SECTION: $0036-$003a ($0005 bytes) ["otherfornow"]
           $0036 = TurnOffAudio
  SECTION: $0040-$0040 ($0001 byte) ["VBlank IRQ"]
  SECTION: $0048-$0048 ($0001 byte) ["LCD IRQ Vector"]
           $0048 = LCD_VECT
  SECTION: $0050-$0050 ($0001 byte) ["Timer IRQ Vector"]
           $0050 = TIMER_VECT
  SECTION: $0058-$0058 ($0001 byte) ["Serial IRQ Vector"]
           $0058 = SERIAL_VECT
  SECTION: $0060-$0060 ($0001 byte) ["Joypad IRQ Vector"]
           $0060 = JOYPAD_VECT
  SECTION: $0061-$00d3 ($0073 bytes) ["joypad"]
           $0061 = ReadInput
           $0091 = JOY_RIGHT
           $0099 = JOY_LEFT
           $00a1 = JOY_UP
           $00a9 = JOY_DOWN
           $00b1 = JOY_A
           $00b9 = JOY_B
           $00c1 = JOY_SELECT
           $00c9 = JOY_START
           $00d1 = JOY_FALSE
  SECTION: $00d4-$00ef ($001c bytes) ["OAM DMA routine"]
           $00d4 = CopyDMARoutine
           $00db = CopyDMARoutine.copy
           $00e2 = DMARoutine
           $00e6 = DMARoutine.wait
           $00ea = DMARoutineEnd
           $00ea = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["Start"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$044f ($00c0 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0450 = CactusTilesEnd
  SECTION: $0450-$04af ($0060 bytes) ["Background_Tiles"]
           $0450 = BackgroundTiles
           $04b0 = BackgroundTilesEnd
  SECTION: $04b0-$04e3 ($0034 bytes) ["rom"]
           $04b0 = START
           $04cf = GAMELOOP
  SECTION: $04e4-$04f9 ($0016 bytes) ["scroll"]
           $04e4 = VBlankHScroll
           $04f7 = VBlankHScroll.end
    SLACK: $3b37 bytes

ROMX bank #1:
  SECTION: $4000-$41b5 ($01b6 bytes) ["point balloon"]
           $4000 = InitializePointBalloon
           $401d = InitializePointBalloon.nextSpawnPoint
           $4039 = InitializePointBalloon.spawn0
           $403d = InitializePointBalloon.spawn1
           $4041 = InitializePointBalloon.spawn2
           $4045 = InitializePointBalloon.spawn3
           $4047 = InitializePointBalloon.EndNextSpawnPoint
           $406a = SpawnPointBalloon
           $4072 = FloatPointBalloonUp
           $4081 = PointBalloonUpdate
           $4093 = PointBalloonUpdate.popped
           $40a1 = PointBalloonUpdate.respawnSkip
           $40ab = PointBalloonUpdate.end
           $40ac = PopBalloonAnimation
           $40c0 = PopBalloonAnimation.special
           $40d3 = PopBalloonAnimation.frame0
           $40ff = PopBalloonAnimation.frame1
           $412b = PopBalloonAnimation.clear
           $4144 = PopBalloonAnimation.end
           $4145 = DeathOfPointBalloon
           $4158 = CollisionCheck
           $417b = CollisionCheck.tryOtherY
           $418e = CollisionCheck.checkX
           $419f = CollisionCheck.tryOtherX
           $41b2 = CollisionCheck.doSomething
           $41b5 = CollisionCheck.end
  SECTION: $41b6-$4318 ($0163 bytes) ["player"]
           $41b6 = InitializePlayer
           $41fe = IncrementPosition
           $4204 = DecrementPosition
           $420c = MoveBalloonUp
           $4219 = MoveBalloonRight
           $4226 = MoveBalloonLeft
           $4233 = MoveBalloonDown
           $4240 = MoveCactusUp
           $424d = MoveCactusRight
           $425a = MoveCactusLeft
           $4267 = MoveCactusDown
           $4274 = MoveRight
           $427b = MoveLeft
           $4282 = MoveDown
           $4289 = MoveUp
           $4290 = SpeedUp
           $4296 = ResetSpeedUp
           $429c = PlayerMovement
           $42b5 = PlayerMovement.endRight
           $42c0 = PlayerMovement.endLeft
           $42cb = PlayerMovement.endUp
           $42d6 = PlayerMovement.endDown
           $42de = PlayerMovement.endA
           $42ea = PlayerMovement.endB
           $42ed = PlayerMovement.end
           $42ee = PlayerAnimate
           $4300 = PlayerAnimate.bobUp
           $4309 = PlayerAnimate.bobDown
           $4311 = PlayerAnimate.end
           $4312 = PlayerUpdate
  SECTION: $4319-$4343 ($002b bytes) ["lcd"]
           $4319 = LCD_OFF
           $431e = LCD_ON
           $4323 = WaitVBlank
           $432a = ClearMap
           $4331 = ClearMap.clear_map_loop
  SECTION: $4344-$436b ($0028 bytes) ["memory"]
           $4344 = MEMCPY.memcpy_loop
           $4344 = MEMCPY
           $4348 = MEMCPY.memcpy_check_limit
           $434e = ClearOAM
           $4354 = ClearOAM.clear_oam_loop
           $435d = ClearRAM
           $4363 = ClearRAM.clear_ram_loop
  SECTION: $436c-$4373 ($0008 bytes) ["math"]
           $436c = RANDOM
           $436d = RANDOM.seed
           $436f = RANDOM.loop
    SLACK: $3c8c bytes

WRAM0 bank #0:
  SECTION: $c000-$c010 ($0011 bytes) ["RAM vars"]
           $c000 = scroll_timer
           $c001 = movement_timer
           $c002 = collision_timer
           $c003 = balloon_pop_timer
           $c004 = player_bob_timer
           $c005 = point_balloon_respawn_timer
           $c006 = player_bobbed_up
           $c007 = joypad_down
           $c008 = joypad_pressed
           $c009 = player_speed
           $c00a = player_x
           $c00b = player_y
           $c00c = point_balloon_alive
           $c00d = point_balloon_popping
           $c00e = point_balloon_popping_frame
           $c00f = point_balloon_x
           $c010 = point_balloon_y
  SECTION: $c100-$c123 ($0024 bytes) ["OAM vars"]
           $c100 = player_balloon
           $c108 = player_cactus
           $c110 = point_balloon
           $c114 = balloon_pop
    SLACK: $0fcb bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $04c9 bytes in 1 bank
    ROMX: $0374 bytes in 1 bank
    WRAM0: $0035 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
