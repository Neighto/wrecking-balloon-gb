ROM0 bank #0:
  SECTION: $0000-$003d ($003e bytes) ["rom"]
           $0000 = START
           $0026 = GAMELOOP
  SECTION: $0040-$0040 ($0001 byte) ["vblank IRQ"]
           $0040 = VBLANK_VECT
  SECTION: $0041-$00b3 ($0073 bytes) ["joypad"]
           $0041 = ReadInput
           $0071 = JOY_RIGHT
           $0079 = JOY_LEFT
           $0081 = JOY_UP
           $0089 = JOY_DOWN
           $0091 = JOY_A
           $0099 = JOY_B
           $00a1 = JOY_SELECT
           $00a9 = JOY_START
           $00b1 = JOY_FALSE
  SECTION: $00b4-$00e9 ($0036 bytes) ["graphics"]
           $00b4 = LoadGameData
           $00df = SetupPalettes
  SECTION: $00ea-$00ff ($0016 bytes) ["scroll"]
           $00ea = VBlankHScroll
           $00fd = VBlankHScroll.end
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$038f ($0240 bytes) ["Background_Map"]
           $0150 = BackgroundMap
           $0390 = BackgroundMapEnd
  SECTION: $0390-$044f ($00c0 bytes) ["Cactus_Tiles"]
           $0390 = CactusTiles
           $0450 = CactusTilesEnd
  SECTION: $0450-$04af ($0060 bytes) ["Background_Tiles"]
           $0450 = BackgroundTiles
           $04b0 = BackgroundTilesEnd
  SECTION: $04b0-$04cb ($001c bytes) ["OAM DMA routine"]
           $04b0 = CopyDMARoutine
           $04b7 = CopyDMARoutine.copy
           $04be = DMARoutine
           $04c2 = DMARoutine.wait
           $04c6 = DMARoutineEnd
           $04c6 = OAMDMA
  SECTION: $04cc-$04d3 ($0008 bytes) ["timer"]
           $04cc = UpdateGlobalTimer
  SECTION: $04d4-$04d8 ($0005 bytes) ["audio"]
           $04d4 = TurnOffAudio
    SLACK: $3b29 bytes

ROMX bank #1:
  SECTION: $4000-$41b3 ($01b4 bytes) ["point balloon"]
           $4000 = InitializePointBalloon
           $401c = InitializePointBalloon.nextSpawnPoint
           $4038 = InitializePointBalloon.spawn0
           $403c = InitializePointBalloon.spawn1
           $4040 = InitializePointBalloon.spawn2
           $4044 = InitializePointBalloon.spawn3
           $4046 = InitializePointBalloon.EndNextSpawnPoint
           $4069 = SpawnPointBalloon
           $4071 = FloatPointBalloonUp
           $4080 = PointBalloonUpdate
           $4092 = PointBalloonUpdate.popped
           $40a0 = PointBalloonUpdate.respawnSkip
           $40aa = PointBalloonUpdate.end
           $40ab = PopBalloonAnimation
           $40bf = PopBalloonAnimation.special
           $40d2 = PopBalloonAnimation.frame0
           $40fe = PopBalloonAnimation.frame1
           $412a = PopBalloonAnimation.clear
           $4143 = PopBalloonAnimation.end
           $4144 = DeathOfPointBalloon
           $4156 = CollisionCheck
           $4179 = CollisionCheck.tryOtherY
           $418c = CollisionCheck.checkX
           $419d = CollisionCheck.tryOtherX
           $41b0 = CollisionCheck.doSomething
           $41b3 = CollisionCheck.end
  SECTION: $41b4-$4328 ($0175 bytes) ["player"]
           $41b4 = UpdateBalloonPosition
           $41cd = UpdateCactusPosition
           $41e6 = UpdatePlayerPosition
           $41ed = InitializePlayer
           $423f = IncrementPosition
           $4245 = DecrementPosition
           $424d = MoveBalloonUp
           $4254 = MoveBalloonRight
           $425b = MoveBalloonLeft
           $4262 = MoveBalloonDown
           $4269 = MoveCactusUp
           $4270 = MoveCactusRight
           $4277 = MoveCactusLeft
           $427e = MoveCactusDown
           $4285 = MoveRight
           $428c = MoveLeft
           $4293 = MoveDown
           $429a = MoveUp
           $42a1 = SpeedUp
           $42a7 = ResetSpeedUp
           $42ad = PlayerMovement
           $42c2 = PlayerMovement.endRight
           $42cd = PlayerMovement.endLeft
           $42d8 = PlayerMovement.endUp
           $42e3 = PlayerMovement.endDown
           $42eb = PlayerMovement.endA
           $42f7 = PlayerMovement.endB
           $42fa = PlayerMovement.end
           $42fe = PlayerAnimate
           $4310 = PlayerAnimate.bobUp
           $4319 = PlayerAnimate.bobDown
           $4321 = PlayerAnimate.end
           $4322 = PlayerUpdate
  SECTION: $4329-$4353 ($002b bytes) ["lcd"]
           $4329 = LCD_OFF
           $432e = LCD_ON
           $4333 = WaitVBlank
           $433a = ClearMap
           $4341 = ClearMap.clear_map_loop
  SECTION: $4354-$437b ($0028 bytes) ["memory"]
           $4354 = MEMCPY.memcpy_loop
           $4354 = MEMCPY
           $4358 = MEMCPY.memcpy_check_limit
           $435e = ClearOAM
           $4364 = ClearOAM.clear_oam_loop
           $436d = ClearRAM
           $4373 = ClearRAM.clear_ram_loop
  SECTION: $437c-$4383 ($0008 bytes) ["math"]
           $437c = RANDOM
           $437d = RANDOM.seed
           $437f = RANDOM.loop
    SLACK: $3c7c bytes

WRAM0 bank #0:
  SECTION: $c000-$c012 ($0013 bytes) ["RAM vars"]
           $c000 = scroll_timer
           $c001 = movement_timer
           $c002 = collision_timer
           $c003 = balloon_pop_timer
           $c004 = player_bob_timer
           $c005 = point_balloon_respawn_timer
           $c006 = player_bobbed_up
           $c007 = joypad_down
           $c008 = joypad_pressed
           $c009 = player_speed
           $c00a = player_x
           $c00b = player_y
           $c00c = player_cactus_x
           $c00d = player_cactus_y
           $c00e = point_balloon_alive
           $c00f = point_balloon_popping
           $c010 = point_balloon_popping_frame
           $c011 = point_balloon_x
           $c012 = point_balloon_y
  SECTION: $c100-$c123 ($0024 bytes) ["OAM vars"]
           $c100 = player_balloon
           $c108 = player_cactus
           $c110 = point_balloon
           $c114 = balloon_pop
    SLACK: $0fc9 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $04d7 bytes in 1 bank
    ROMX: $0384 bytes in 1 bank
    WRAM0: $0037 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
