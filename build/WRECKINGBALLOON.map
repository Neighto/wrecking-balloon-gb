ROM0 bank #0:
  SECTION: $0000-$001b ($001c bytes) ["OAM DMA routine"]
           $0000 = CopyDMARoutine
           $0007 = CopyDMARoutine.copy
           $000e = DMARoutine
           $0012 = DMARoutine.wait
           $0016 = DMARoutineEnd
           $0016 = OAMDMA
  SECTION: $001c-$0030 ($0015 bytes) ["scroll"]
           $001c = HorizontalScroll
           $0029 = HorizontalScroll.end
           $002b = ResetScroll
  SECTION: $0040-$0043 ($0004 bytes) ["vblank IRQ"]
           $0040 = VBLANK_VECT
  SECTION: $0048-$004b ($0004 bytes) ["LCD IRQ"]
           $0048 = LCD_VECT
  SECTION: $004c-$00be ($0073 bytes) ["joypad"]
           $004c = ReadInput
           $007c = JOY_RIGHT
           $0084 = JOY_LEFT
           $008c = JOY_UP
           $0094 = JOY_DOWN
           $009c = JOY_A
           $00a4 = JOY_B
           $00ac = JOY_SELECT
           $00b4 = JOY_START
           $00bc = JOY_FALSE
  SECTION: $00bf-$00ce ($0010 bytes) ["tools"]
           $00bf = IncrementPosition
           $00c2 = DecrementPosition
           $00c7 = ResetInRange
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$08f0 ($07a1 bytes) ["Sound Driver"]
           $0150 = _hUGE_init_banked
           $0154 = _hUGE_init
           $0156 = continue_init
           $015f = _hUGE_mute_channel_banked
           $0163 = _hUGE_mute_channel
           $0165 = continue_mute
           $0170 = hUGE_mute_channel
           $0176 = hUGE_mute_channel.enable_loop
           $017d = hUGE_mute_channel.enable_cut
           $018a = _hUGE_set_position_banked
           $018e = _hUGE_set_position
           $0190 = continue_set_position
           $0197 = hUGE_init
           $019e = hUGE_init.fill_loop
           $01c2 = hUGE_init.copy_song_descriptor_loop
           $01cc = _refresh_patterns
           $01e6 = _refresh_patterns.load_pattern
           $01f6 = _load_note_data
           $0208 = _lookup_note
           $0212 = _convert_note
           $0220 = _convert_ch4_note
           $0237 = _update_channel
           $0241 = _update_channel1
           $024f = _update_channel2
           $025d = _update_channel3
           $026b = _update_channel4
           $027b = _playnote1
           $0296 = _playnote2
           $02b1 = _playnote3
           $02d2 = _playnote4
           $02e6 = _doeffect
           $02fb = _doeffect.jump
           $032b = setup_channel_pointer
           $0339 = fx_set_master_volume
           $033e = fx_call_routine
           $0360 = fx_call_routine.call_hl
           $0361 = fx_set_pan
           $0366 = fx_set_duty
           $036b = fx_set_duty.chan2
           $0375 = fx_set_duty.chan1
           $037f = fx_vol_slide
           $0386 = fx_vol_slide.loop
           $038b = fx_vol_slide.cont
           $03bd = fx_vol_slide.cont1
           $03c4 = fx_vol_slide.cont2
           $03d8 = _envelope_registers
           $03e0 = fx_note_delay
           $03f9 = fx_note_delay.play_note
           $0417 = _play_note_routines
           $0423 = fx_set_speed
           $0429 = hUGE_set_position
           $0429 = fx_pos_jump
           $0433 = fx_pattern_break
           $0438 = fx_note_cut
           $0440 = fx_note_cut.loop
           $0445 = fx_note_cut.cont
           $044a = note_cut
           $0461 = fx_set_volume
           $0462 = set_channel_volume
           $046d = set_chn_3_vol
           $047f = set_chn_3_vol.three
           $0483 = set_chn_3_vol.two
           $0487 = set_chn_3_vol.one
           $048b = set_chn_3_vol.zero
           $048c = set_chn_3_vol.done
           $048f = set_chn_2_vol
           $049f = set_chn_1_vol
           $04af = set_chn_4_vol
           $04bb = fx_vibrato
           $04ce = fx_vibrato.restore
           $04d3 = fx_vibrato.go_up
           $04de = fx_vibrato.finish_vibrato
           $04e4 = fx_arpeggio
           $04f0 = fx_arpeggio.greater_than_two
           $04f2 = fx_arpeggio.test_greater_than_two
           $0501 = fx_arpeggio.arp_options
           $0507 = fx_arpeggio.reset_arp
           $050a = fx_arpeggio.set_arp2
           $050f = fx_arpeggio.set_arp1
           $0510 = fx_arpeggio.finish_arp
           $0513 = fx_arpeggio.finish_skip_add
           $051c = fx_porta_up
           $052b = fx_porta_up.finish
           $0532 = fx_porta_down
           $0544 = fx_toneporta
           $0556 = fx_toneporta.return_skip
           $0560 = fx_toneporta.do_toneporta
           $0575 = fx_toneporta.high_byte_same
           $057b = fx_toneporta.add
           $058d = fx_toneporta.subtract
           $05a3 = fx_toneporta.set_exact
           $05a5 = fx_toneporta.done
           $05b8 = _setup_instrument_pointer_ch4
           $05c3 = _setup_instrument_pointer
           $05ca = _setup_instrument_pointer.finish
           $05d3 = _hUGE_dosound_banked
           $05d3 = _hUGE_dosound
           $0612 = _hUGE_dosound.write_mask1
           $0615 = _hUGE_dosound.do_setvol1
           $0628 = _hUGE_dosound.after_note1
           $065d = _hUGE_dosound.write_mask2
           $0660 = _hUGE_dosound.do_setvol2
           $0673 = _hUGE_dosound.after_note2
           $06fa = _hUGE_dosound.no_wave_copy
           $06fb = _hUGE_dosound.write_mask3
           $06fe = _hUGE_dosound.do_setvol3
           $0709 = _hUGE_dosound.after_note3
           $075a = _hUGE_dosound.write_mask4
           $075d = _hUGE_dosound.do_setvol4
           $0768 = _hUGE_dosound.after_note4
           $076b = _hUGE_dosound.process_effects
           $0787 = _hUGE_dosound.after_effect1
           $07a3 = _hUGE_dosound.after_effect2
           $07bf = _hUGE_dosound.after_effect3
           $080a = _hUGE_dosound.done_macro
           $0813 = process_tick
           $0813 = _hUGE_dosound.after_effect4
           $0825 = _newrow
           $083d = _newrow.no_break
           $0848 = _neworder
           $0855 = _update_current_order
           $085c = _noreset
           $0861 = note_table
  SECTION: $08f1-$0cf0 ($0400 bytes) ["menu map"]
           $08f1 = MenuMap
           $0cf1 = MenuMapEnd
  SECTION: $0cf1-$0e50 ($0160 bytes) ["graphics"]
           $0cf1 = LoadGameData
           $0d46 = ReplaceTilemapHorizontal
           $0d4c = ReplaceTilemapHorizontal.loop
           $0d4d = LoadMenuData
           $0d72 = SetAllPalettes
           $0d7e = SetupPalettes
           $0d86 = SetupParkPalettes
           $0d93 = FadeOutPalettes
           $0d9b = FadeOutPalettes.fadeOut
           $0daf = FadeOutPalettes.fade1
           $0db3 = FadeOutPalettes.fade2
           $0db7 = FadeOutPalettes.fade3
           $0dbb = FadeOutPalettes.fade4
           $0dbd = FadeOutPalettes.end
           $0dc8 = HasFadedOut
           $0dce = HasFadedOut.false
           $0dd0 = HasFadedOut.true
           $0dd3 = RefreshScore
           $0e11 = RefreshLives
           $0e1c = ClearAllTiles
           $0e38 = ClearMap
           $0e3f = ClearMap.clear_map_loop
  SECTION: $0e51-$0f6f ($011f bytes) ["collision"]
           $0e51 = CollisionCheck
           $0e5e = CollisionCheck.tryOtherY
           $0e66 = CollisionCheck.skip8x8Adjustment
           $0e72 = CollisionCheck.checkX
           $0e7f = CollisionCheck.tryOtherX
           $0e8c = CollisionCheck.collision
           $0e90 = CollisionCheck.end
           $0e94 = CollisionUpdate
           $0ebc = CollisionUpdate.endPointBalloon
           $0ed6 = CollisionUpdate.checkEnemyHitPlayer
           $0ee6 = CollisionUpdate.endEnemy
           $0f00 = CollisionUpdate.checkEnemy2HitPlayer
           $0f10 = CollisionUpdate.endEnemy2
           $0f17 = CollisionUpdate.checkBirdHitPlayer
           $0f28 = CollisionUpdate.endBird
           $0f29 = CollisionUpdate.collisionWithPlayer
           $0f33 = CollisionUpdate.end
           $0f33 = CollisionUpdate.endEnemyHitPlayer
           $0f34 = OffScreenXEnemies
           $0f45 = OffScreenXEnemies.end
           $0f47 = OffScreenYEnemies
           $0f58 = OffScreenYEnemies.end
           $0f5a = OffScreenX
           $0f62 = OffScreenX.end
           $0f64 = OffScreenY
           $0f6e = OffScreenY.end
  SECTION: $0f70-$1054 ($00e5 bytes) ["rom"]
           $0f70 = Start
           $0fa9 = MenuLoop
           $0fbb = StartClassic
           $0ffd = ParkLoop
           $1012 = PregameLoop
           $102d = GameLoop
           $1052 = GameLoop.end
  SECTION: $1055-$10ae ($005a bytes) ["interrupts"]
           $1055 = VBlank_Interrupt
           $105d = LCD_Interrupt_Park
           $1068 = LCD_Interrupt_Park.clouds
           $1075 = LCD_Interrupt_Park.ground
           $107d = LCD_Interrupt_Classic
           $1087 = LCD_Interrupt_Classic.showSprites
           $1091 = LCD_Interrupt_Classic.hideSpritesOnWindow
           $109b = LCD_Interrupt
           $10a4 = LCD_Interrupt.park
           $10a9 = LCD_Interrupt.classic
           $10ac = LCD_Interrupt.end
    SLACK: $2f95 bytes

ROMX bank #1:
  SECTION: $4000-$475f ($0760 bytes) ["menu title tiles"]
           $4000 = MenuTitleTiles
           $4760 = MenuTitleTilesEnd
  SECTION: $4760-$4c7d ($051e bytes) ["Song Data"]
           $4760 = menuTheme
           $4775 = order_cnt
           $4776 = order1
           $4778 = order2
           $477a = order3
           $477c = order4
           $477e = P1
           $483e = P2
           $48fe = P3
           $49be = P6
           $4a7e = duty_instruments
           $4a7e = itSquareinst1
           $4a82 = itSquareinst2
           $4a86 = itSquareinst3
           $4a8a = itSquareinst4
           $4a8e = itSquareinst5
           $4a92 = itSquareinst6
           $4a96 = itSquareinst7
           $4a9a = itSquareinst8
           $4a9e = itSquareinst9
           $4aa2 = itSquareinst10
           $4aa6 = itSquareinst11
           $4aaa = itSquareinst12
           $4aae = itSquareinst13
           $4ab2 = itSquareinst14
           $4ab6 = itSquareinst15
           $4aba = wave_instruments
           $4aba = itWaveinst1
           $4abe = itWaveinst2
           $4ac2 = itWaveinst3
           $4ac6 = itWaveinst4
           $4aca = itWaveinst5
           $4ace = itWaveinst6
           $4ad2 = itWaveinst7
           $4ad6 = itWaveinst8
           $4ada = itWaveinst9
           $4ade = itWaveinst10
           $4ae2 = itWaveinst11
           $4ae6 = itWaveinst12
           $4aea = itWaveinst13
           $4aee = itWaveinst14
           $4af2 = itWaveinst15
           $4af6 = noise_instruments
           $4af6 = itNoiseinst1
           $4afe = itNoiseinst2
           $4b06 = itNoiseinst3
           $4b0e = itNoiseinst4
           $4b16 = itNoiseinst5
           $4b1e = itNoiseinst6
           $4b26 = itNoiseinst7
           $4b2e = itNoiseinst8
           $4b36 = itNoiseinst9
           $4b3e = itNoiseinst10
           $4b46 = itNoiseinst11
           $4b4e = itNoiseinst12
           $4b56 = itNoiseinst13
           $4b5e = itNoiseinst14
           $4b66 = itNoiseinst15
           $4b6e = routines
           $4b6e = __end_hUGE_Routine_0
           $4b6e = __hUGE_Routine_0
           $4b6f = __end_hUGE_Routine_1
           $4b6f = __hUGE_Routine_1
           $4b70 = __end_hUGE_Routine_2
           $4b70 = __hUGE_Routine_2
           $4b71 = __end_hUGE_Routine_3
           $4b71 = __hUGE_Routine_3
           $4b72 = __end_hUGE_Routine_4
           $4b72 = __hUGE_Routine_4
           $4b73 = __end_hUGE_Routine_5
           $4b73 = __hUGE_Routine_5
           $4b74 = __end_hUGE_Routine_6
           $4b74 = __hUGE_Routine_6
           $4b75 = __end_hUGE_Routine_7
           $4b75 = __hUGE_Routine_7
           $4b76 = __hUGE_Routine_8
           $4b76 = __end_hUGE_Routine_8
           $4b77 = __hUGE_Routine_9
           $4b77 = __end_hUGE_Routine_9
           $4b78 = __hUGE_Routine_10
           $4b78 = __end_hUGE_Routine_10
           $4b79 = __hUGE_Routine_11
           $4b79 = __end_hUGE_Routine_11
           $4b7a = __hUGE_Routine_12
           $4b7a = __end_hUGE_Routine_12
           $4b7b = __hUGE_Routine_13
           $4b7b = __end_hUGE_Routine_13
           $4b7c = __end_hUGE_Routine_14
           $4b7c = __hUGE_Routine_14
           $4b7d = __end_hUGE_Routine_15
           $4b7d = __hUGE_Routine_15
           $4b7e = waves
           $4b7e = wave0
           $4b8e = wave1
           $4b9e = wave2
           $4bae = wave3
           $4bbe = wave4
           $4bce = wave5
           $4bde = wave6
           $4bee = wave7
           $4bfe = wave8
           $4c0e = wave9
           $4c1e = wave10
           $4c2e = wave11
           $4c3e = wave12
           $4c4e = wave13
           $4c5e = wave14
           $4c6e = wave15
  SECTION: $4c7e-$507d ($0400 bytes) ["background map"]
           $4c7e = BackgroundMap
           $507e = BackgroundMapEnd
  SECTION: $507e-$543b ($03be bytes) ["player"]
           $507e = UpdateBalloonPosition
           $5097 = UpdateCactusPosition
           $50b0 = UpdatePlayerPosition
           $50b7 = InitializePlayer
           $512d = SpawnPlayer
           $513d = MoveBalloonUp
           $5147 = MoveBalloonRight
           $5151 = MoveBalloonLeft
           $515b = MoveBalloonDown
           $5165 = MoveCactusUp
           $516f = MoveCactusRight
           $5179 = MoveCactusLeft
           $5183 = MoveCactusDown
           $518d = MoveCactusDriftLeft
           $51a2 = MoveCactusDriftLeft.end
           $51a3 = MoveCactusDriftRight
           $51b7 = MoveCactusDriftRight.end
           $51b8 = MoveCactusDriftCenterX
           $51ca = MoveCactusDriftCenterX.moveRight
           $51cc = MoveCactusDriftCenterX.moveLeft
           $51cd = MoveCactusDriftCenterX.end
           $51ce = MoveCactusDriftUp
           $51e3 = MoveCactusDriftUp.end
           $51e4 = MoveCactusDriftCenterY
           $51f9 = MoveCactusDriftCenterY.moveUp
           $51fb = MoveCactusDriftCenterY.moveDown
           $51fc = MoveCactusDriftCenterY.end
           $51fd = MoveRight
           $5207 = MoveLeft
           $5211 = MoveDown
           $521b = MoveUp
           $5222 = SpeedUp
           $5228 = ResetSpeedUp
           $522e = PlayerControls
           $5246 = PlayerControls.endRight
           $525c = PlayerControls.endLeft
           $5272 = PlayerControls.endUp
           $5288 = PlayerControls.endDown
           $5297 = PlayerControls.endDriftToCenterX
           $52a6 = PlayerControls.endDriftToCenterY
           $52b1 = PlayerControls.endStart
           $52b7 = PlayerControls.endA
           $52c2 = PlayerControls.endB
           $52c5 = PlayerControls.end
           $52cb = MovePlayer
           $52da = MovePlayerAutoMiddle
           $52e7 = MovePlayerAutoMiddle.moveRight
           $52eb = MovePlayerAutoMiddle.moveLeft
           $52ed = MovePlayerAutoMiddle.end
           $52f1 = MovePlayerAutoFlyUp
           $52f8 = FallCactusDown
           $530d = FallCactusDown.skipAcceleration
           $5315 = PopBalloonAnimation
           $5336 = PopBalloonAnimation.frame0
           $534c = PopBalloonAnimation.frame1
           $5362 = PopBalloonAnimation.clear
           $537a = PopBalloonAnimation.end
           $537b = CactusFalling
           $5395 = CactusFalling.offScreen
           $539a = CactusFalling.end
           $539b = NoMoreLives
           $53a2 = PlayerUpdate
           $53bd = PlayerUpdate.popped
           $53d2 = PlayerUpdate.respawn
           $53d5 = PlayerUpdate.respawnSkip
           $53df = PlayerUpdate.notPopping
           $53e9 = PlayerUpdate.end
           $53ea = DeathOfPlayer
           $5411 = InvincibleBlink
           $5427 = InvincibleBlink.blinkNormal
           $542e = InvincibleBlink.blinkFast
           $5432 = InvincibleBlink.blinkEnd
           $5437 = InvincibleBlink.defaultPalette
           $543b = InvincibleBlink.end
  SECTION: $543c-$57ab ($0370 bytes) ["background tiles"]
           $543c = BackgroundTiles
           $57ac = BackgroundTilesEnd
  SECTION: $57ac-$59e9 ($023e bytes) ["enemy 2"]
           $57ac = UpdateBalloonPosition
           $57c5 = UpdateCactusPosition
           $57de = UpdateEnemyPosition
           $57e5 = InitializeEnemy2
           $581f = InitializeEnemy2.nextSpawnPoint
           $583b = InitializeEnemy2.spawnA
           $5844 = InitializeEnemy2.spawnB
           $584d = InitializeEnemy2.spawnC
           $5856 = InitializeEnemy2.spawnD
           $585d = InitializeEnemy2.endNextSpawnPoint
           $585e = SpawnEnemy
           $58b7 = MoveBalloonLeft
           $58c0 = MoveCactusLeft
           $58c9 = MoveBalloonDown
           $58d2 = MoveCactusDown
           $58db = MoveLeft
           $58e2 = MoveDown
           $58e9 = MoveEnemy
           $58f0 = FallCactusDown
           $5905 = FallCactusDown.skipAcceleration
           $590d = PopBalloonAnimation
           $592e = PopBalloonAnimation.frame0
           $5944 = PopBalloonAnimation.frame1
           $595a = PopBalloonAnimation.clear
           $5972 = PopBalloonAnimation.end
           $5973 = CactusFalling
           $598d = CactusFalling.offScreen
           $5992 = CactusFalling.end
           $5993 = Enemy2Update
           $59a5 = Enemy2Update.popped
           $59b3 = Enemy2Update.respawnSkip
           $59bd = Enemy2Update.notPopping
           $59c7 = Enemy2Update.end
           $59c8 = DeathOfEnemy2
  SECTION: $59ea-$5c24 ($023b bytes) ["enemy"]
           $59ea = UpdateBalloonPosition
           $5a03 = UpdateCactusPosition
           $5a1c = UpdateEnemyPosition
           $5a23 = InitializeEnemy
           $5a5d = InitializeEnemy.nextSpawnPoint
           $5a79 = InitializeEnemy.spawnA
           $5a82 = InitializeEnemy.spawnB
           $5a8b = InitializeEnemy.spawnC
           $5a94 = InitializeEnemy.spawnD
           $5a9b = InitializeEnemy.endNextSpawnPoint
           $5a9c = SpawnEnemy
           $5af5 = MoveBalloonRight
           $5afe = MoveCactusRight
           $5b07 = MoveBalloonDown
           $5b10 = MoveCactusDown
           $5b19 = MoveRight
           $5b20 = MoveDown
           $5b27 = MoveEnemy
           $5b2e = FallCactusDown
           $5b43 = FallCactusDown.skipAcceleration
           $5b4b = PopBalloonAnimation
           $5b6c = PopBalloonAnimation.frame0
           $5b82 = PopBalloonAnimation.frame1
           $5b98 = PopBalloonAnimation.clear
           $5bb0 = PopBalloonAnimation.end
           $5bb1 = CactusFalling
           $5bcb = CactusFalling.offScreen
           $5bd0 = CactusFalling.end
           $5bd1 = EnemyUpdate
           $5be3 = EnemyUpdate.popped
           $5bf1 = EnemyUpdate.respawnSkip
           $5bfb = EnemyUpdate.notPopping
           $5c05 = EnemyUpdate.end
           $5c06 = DeathOfEnemy
  SECTION: $5c25-$5df4 ($01d0 bytes) ["bird"]
           $5c25 = UpdateBirdPosition
           $5c4f = SetSpawnPoint
           $5c69 = SetSpawnPoint.spawnA
           $5c6d = SetSpawnPoint.spawnB
           $5c71 = SetSpawnPoint.spawnC
           $5c75 = SetSpawnPoint.spawnD
           $5c77 = SetSpawnPoint.end
           $5c7a = InitializeBird
           $5c90 = SpawnBirdRight
           $5ce0 = SpawnBirdLeft
           $5d30 = SpawnBird
           $5d42 = BirdAnimate
           $5d4b = BirdAnimate.frame0
           $5d64 = BirdAnimate.frame0FacingLeft
           $5d67 = BirdAnimate.frame0FacingEnd
           $5d70 = BirdAnimate.frame1
           $5d89 = BirdAnimate.frame1FacingLeft
           $5d8c = BirdAnimate.frame1FacingEnd
           $5d9b = BirdAnimate.end
           $5d9e = BirdUpdate
           $5db6 = BirdUpdate.moveLeft
           $5dc0 = BirdUpdate.moveRight
           $5dc8 = BirdUpdate.moveDown
           $5dd7 = BirdUpdate.moveEnd
           $5ddd = BirdUpdate.checkOffscreen
           $5de8 = BirdUpdate.died
           $5dee = BirdUpdate.isDead
           $5df1 = BirdUpdate.end
  SECTION: $5df5-$5fb4 ($01c0 bytes) ["cactus tiles"]
           $5df5 = CactusTiles
           $5fb5 = CactusTilesEnd
  SECTION: $5fb5-$6134 ($0180 bytes) ["point balloon"]
           $5fb5 = UpdateBalloonPosition
           $5fce = InitializePointBalloon
           $5fec = InitializePointBalloon.nextSpawnPoint
           $6008 = InitializePointBalloon.spawnA
           $600c = InitializePointBalloon.spawnB
           $6010 = InitializePointBalloon.spawnC
           $6014 = InitializePointBalloon.spawnD
           $6016 = InitializePointBalloon.endNextSpawnPoint
           $6017 = SpawnPointBalloon
           $6024 = SpawnPointBalloon.balloonLeft
           $603d = SpawnPointBalloon.balloonRight
           $6058 = SpawnPointBalloon.end
           $605a = FloatPointBalloonUp
           $6064 = PopBalloonAnimation
           $6085 = PopBalloonAnimation.frame0
           $609b = PopBalloonAnimation.frame1
           $60b1 = PopBalloonAnimation.clear
           $60c9 = PopBalloonAnimation.end
           $60ca = PointBalloonUpdate
           $60dc = PointBalloonUpdate.popped
           $60ee = PointBalloonUpdate.respawnSkip
           $60f8 = PointBalloonUpdate.end
           $60f9 = MenuBalloonUpdate
           $611a = MenuBalloonUpdate.respawn
           $6121 = MenuBalloonUpdate.end
           $6122 = DeathOfPointBalloon
  SECTION: $6135-$629b ($0167 bytes) ["classic"]
           $6135 = HandleParkLoop
           $6151 = HandleParkLoop.flyUpNormal
           $6158 = HandleParkLoop.flyUpFast
           $615c = HandleParkLoop.canWeScroll
           $6161 = HandleParkLoop.end
           $6162 = TryToUnpause
           $6176 = TryToUnpause.end
           $6177 = StartedClassic
           $617f = SpawnHandWave
           $618e = HandWaveAnimation
           $6195 = HandWaveAnimation.frame0
           $61a8 = HandWaveAnimation.frame1
           $61ba = HandWaveAnimation.end
           $61bb = SpawnCountdown
           $61ce = CountdownAnimation
           $61f6 = CountdownAnimation.frame0
           $6206 = CountdownAnimation.frame1
           $6216 = CountdownAnimation.frame2
           $6226 = CountdownAnimation.frame3
           $6239 = CountdownAnimation.frame4
           $6249 = CountdownAnimation.frame5
           $6259 = CountdownAnimation.remove
           $626a = CountdownAnimation.end
           $626b = IncrementScrollOffset
           $6279 = IncrementScrollOffset.end
           $627a = SetClassicMapStartPoint
           $627f = ClassicGameManager
           $6292 = ClassicGameManager.levelThree
           $6295 = ClassicGameManager.levelTwo
           $6298 = ClassicGameManager.levelOne
           $629b = ClassicGameManager.end
  SECTION: $629c-$63ab ($0110 bytes) ["window tiles"]
           $629c = WindowTiles
           $63ac = WindowTilesEnd
  SECTION: $63ac-$648b ($00e0 bytes) ["countdown tiles"]
           $63ac = CountdownTiles
           $648c = CountdownTilesEnd
  SECTION: $648c-$6523 ($0098 bytes) ["sound"]
           $648c = AUDIO_OFF
           $6490 = AUDIO_ON
           $6495 = PopSound
           $64a8 = FallingSound
           $64bd = StopFallingSound
           $64c2 = CollectSound
           $64d7 = WrongAnswerSound
           $64ee = Percussion
           $64fb = Percussion2
           $6508 = Bass
           $6519 = ClearSound
  SECTION: $6524-$658d ($006a bytes) ["menu"]
           $6524 = SpawnMenuCursor
           $6533 = MoveCursor
           $6543 = MoveCursor.classicMode
           $6549 = MoveCursor.storyMode
           $654f = SelectMode
           $6556 = SelectMode.classicMode
           $655f = SelectMode.storyMode
           $6560 = MenuInput
           $656a = MenuInput.selectMode
           $656a = MenuInput.moveSelected
           $6573 = MenuInput.end
           $6574 = UpdateMenu
           $657f = UpdateMenu.fadeOut
           $658a = UpdateMenu.hasFadedOut
  SECTION: $658e-$65dd ($0050 bytes) ["menu tiles"]
           $658e = MenuTiles
           $65de = MenuTilesEnd
  SECTION: $65de-$661d ($0040 bytes) ["classic park tiles"]
           $65de = ClassicParkTiles
           $661e = ClassicParkTilesEnd
  SECTION: $661e-$6653 ($0036 bytes) ["math"]
           $661e = MODULO
           $6620 = MODULO.loop
           $6625 = RANDOM
           $662e = DIVISION
           $6634 = DIVISION.loop
           $6639 = DIVISION.end
           $663c = ToBCD
           $6652 = ToBCD.end
  SECTION: $6654-$6683 ($0030 bytes) ["score"]
           $6654 = InitializeScore
           $665c = IncreaseDifficulty
           $6663 = IncreaseDifficulty.scoreMid
           $6663 = IncreaseDifficulty.scoreLow
           $6663 = IncreaseDifficulty.scoreHigh
           $6664 = AddPoints
           $6677 = AddPoints.carry
           $6681 = AddPoints.end
  SECTION: $6684-$66b2 ($002f bytes) ["lcd"]
           $6684 = LCD_OFF
           $6689 = LCD_ON
           $668e = LCD_ON_BG_ONLY
           $6693 = WaitVBlank
           $6698 = WaitVBlank.loop
           $66a1 = SetupWindow
           $66aa = SetParkLYC
           $66ae = SetClassicLYC
  SECTION: $66b3-$66d4 ($0022 bytes) ["general initialization"]
           $66b3 = InitializeGameVars
  SECTION: $66d5-$66f2 ($001e bytes) ["memory"]
           $66d5 = MEMCPY.memcpy_loop
           $66d5 = MEMCPY
           $66d9 = MEMCPY.memcpy_check_limit
           $66df = ClearOAM
           $66e9 = ClearRAM
  SECTION: $66f3-$6706 ($0014 bytes) ["window map"]
           $66f3 = WindowMap
           $6707 = WindowMapEnd
  SECTION: $6707-$670e ($0008 bytes) ["timer"]
           $6707 = UpdateGlobalTimer
    SLACK: $18f1 bytes

WRAM0 bank #0:
  SECTION: $c000-$c046 ($0047 bytes) ["RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = difficulty_level
           $c009 = selected_mode
           $c00a = hand_waving_frame
           $c00b = countdown_frame
           $c00c = cloud_scroll_offset
           $c00d = classic_mode_stage
           $c00e = fade_frame
           $c00f = player_x
           $c010 = player_y
           $c011 = player_cactus_x
           $c012 = player_cactus_y
           $c013 = player_alive
           $c014 = player_popping
           $c015 = player_popping_frame
           $c016 = player_falling
           $c017 = player_fall_speed
           $c018 = player_falling_timer
           $c019 = player_pop_timer
           $c01a = player_delay_falling_timer
           $c01b = player_respawn_timer
           $c01c = player_speed
           $c01d = player_lives
           $c01e = player_invincible
           $c01f = player_cant_move
           $c020 = point_balloon_x
           $c021 = point_balloon_y
           $c022 = point_balloon_alive
           $c023 = point_balloon_popping
           $c024 = point_balloon_popping_frame
           $c025 = point_balloon_pop_timer
           $c026 = point_balloon_respawn_timer
           $c027 = enemy_balloon_x
           $c028 = enemy_balloon_y
           $c029 = enemy_cactus_x
           $c02a = enemy_cactus_y
           $c02b = enemy_alive
           $c02c = enemy_popping
           $c02d = enemy_popping_frame
           $c02e = enemy_falling
           $c02f = enemy_fall_speed
           $c030 = enemy_falling_timer
           $c031 = enemy_pop_timer
           $c032 = enemy_delay_falling_timer
           $c033 = enemy_respawn_timer
           $c034 = enemy2_balloon_x
           $c035 = enemy2_balloon_y
           $c036 = enemy2_cactus_x
           $c037 = enemy2_cactus_y
           $c038 = enemy2_alive
           $c039 = enemy2_popping
           $c03a = enemy2_popping_frame
           $c03b = enemy2_falling
           $c03c = enemy2_fall_speed
           $c03d = enemy2_falling_timer
           $c03e = enemy2_pop_timer
           $c03f = enemy2_delay_falling_timer
           $c040 = enemy2_respawn_timer
           $c041 = bird_x
           $c042 = bird_y
           $c043 = bird_flapping_frame
           $c044 = bird_respawn_timer
           $c045 = bird_alive
           $c046 = bird_spawn_right
  SECTION: $c047-$c08c ($0046 bytes) ["Playback variables"]
           $c047 = _start_vars
           $c047 = order_cnt
           $c048 = order1
           $c048 = _start_song_descriptor_pointers
           $c04a = order2
           $c04c = order3
           $c04e = order4
           $c050 = duty_instruments
           $c052 = wave_instruments
           $c054 = noise_instruments
           $c056 = routines
           $c058 = waves
           $c05a = mute_channels
           $c05a = _end_song_descriptor_pointers
           $c05b = pattern1
           $c05d = pattern2
           $c05f = pattern3
           $c061 = pattern4
           $c063 = ticks_per_row
           $c064 = current_order
           $c065 = next_order
           $c066 = row_break
           $c067 = temp_note_value
           $c069 = row
           $c06a = tick
           $c06b = counter
           $c06c = current_wave
           $c06c = _hUGE_current_wave
           $c06d = channel_period1
           $c06d = channels
           $c06d = channel1
           $c06f = toneporta_target1
           $c071 = channel_note1
           $c072 = vibrato_tremolo_phase1
           $c073 = envelope1
           $c074 = highmask1
           $c075 = channel_period2
           $c075 = channel2
           $c077 = toneporta_target2
           $c079 = channel_note2
           $c07a = vibrato_tremolo_phase2
           $c07b = envelope2
           $c07c = highmask2
           $c07d = channel_period3
           $c07d = channel3
           $c07f = toneporta_target3
           $c081 = channel_note3
           $c082 = vibrato_tremolo_phase3
           $c083 = envelope3
           $c084 = highmask3
           $c085 = channel_period4
           $c085 = channel4
           $c087 = toneporta_target4
           $c089 = channel_note4
           $c08a = vibrato_tremolo_phase4
           $c08b = envelope4
           $c08c = highmask4
           $c08d = _end_vars
  SECTION: $c100-$c143 ($0044 bytes) ["OAM vars"]
           $c100 = wPlayerCactus
           $c108 = wPlayerBalloon
           $c110 = wPointBalloon
           $c118 = wEnemyCactus
           $c120 = wEnemyBalloon
           $c128 = wEnemy2Cactus
           $c130 = wEnemy2Balloon
           $c138 = wBird
    SLACK: $0f2f bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $106b bytes in 1 bank
    ROMX: $270f bytes in 1 bank
    WRAM0: $00d1 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
