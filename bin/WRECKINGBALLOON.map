ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c8 ($007e bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = CollisionFallingEnemy
           $008d = OffScreenXEnemies
           $009e = OffScreenXEnemies.end
           $00a0 = OffScreenYEnemies
           $00b1 = OffScreenYEnemies.end
           $00b3 = OffScreenX
           $00bb = OffScreenX.end
           $00bd = OffScreenY
           $00c7 = OffScreenY.end
  SECTION: $00c9-$00ec ($0024 bytes) ["scroll"]
           $00c9 = HorizontalScroll
           $00d6 = HorizontalScroll.end
           $00d8 = VerticalScroll
           $00e5 = VerticalScroll.end
           $00e7 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a4f ($0900 bytes) ["tilemaps"]
           $0150 = ParkMap
           $0390 = ParkMapEnd
           $0390 = BackgroundMap
           $0590 = World2Map
           $0590 = BackgroundMapEnd
           $07d0 = MenuMap
           $07d0 = World2MapEnd
           $0a10 = WindowMap
           $0a10 = MenuMapEnd
           $0a50 = WindowMapEnd
  SECTION: $0a50-$11f0 ($07a1 bytes) ["Sound Driver"]
           $0a50 = _hUGE_init_banked
           $0a54 = _hUGE_init
           $0a56 = continue_init
           $0a5f = _hUGE_mute_channel_banked
           $0a63 = _hUGE_mute_channel
           $0a65 = continue_mute
           $0a70 = hUGE_mute_channel
           $0a76 = hUGE_mute_channel.enable_loop
           $0a7d = hUGE_mute_channel.enable_cut
           $0a8a = _hUGE_set_position_banked
           $0a8e = _hUGE_set_position
           $0a90 = continue_set_position
           $0a97 = hUGE_init
           $0a9e = hUGE_init.fill_loop
           $0ac2 = hUGE_init.copy_song_descriptor_loop
           $0acc = _refresh_patterns
           $0ae6 = _refresh_patterns.load_pattern
           $0af6 = _load_note_data
           $0b08 = _lookup_note
           $0b12 = _convert_note
           $0b20 = _convert_ch4_note
           $0b37 = _update_channel
           $0b41 = _update_channel1
           $0b4f = _update_channel2
           $0b5d = _update_channel3
           $0b6b = _update_channel4
           $0b7b = _playnote1
           $0b96 = _playnote2
           $0bb1 = _playnote3
           $0bd2 = _playnote4
           $0be6 = _doeffect
           $0bfb = _doeffect.jump
           $0c2b = setup_channel_pointer
           $0c39 = fx_set_master_volume
           $0c3e = fx_call_routine
           $0c60 = fx_call_routine.call_hl
           $0c61 = fx_set_pan
           $0c66 = fx_set_duty
           $0c6b = fx_set_duty.chan2
           $0c75 = fx_set_duty.chan1
           $0c7f = fx_vol_slide
           $0c86 = fx_vol_slide.loop
           $0c8b = fx_vol_slide.cont
           $0cbd = fx_vol_slide.cont1
           $0cc4 = fx_vol_slide.cont2
           $0cd8 = _envelope_registers
           $0ce0 = fx_note_delay
           $0cf9 = fx_note_delay.play_note
           $0d17 = _play_note_routines
           $0d23 = fx_set_speed
           $0d29 = hUGE_set_position
           $0d29 = fx_pos_jump
           $0d33 = fx_pattern_break
           $0d38 = fx_note_cut
           $0d40 = fx_note_cut.loop
           $0d45 = fx_note_cut.cont
           $0d4a = note_cut
           $0d61 = fx_set_volume
           $0d62 = set_channel_volume
           $0d6d = set_chn_3_vol
           $0d7f = set_chn_3_vol.three
           $0d83 = set_chn_3_vol.two
           $0d87 = set_chn_3_vol.one
           $0d8b = set_chn_3_vol.zero
           $0d8c = set_chn_3_vol.done
           $0d8f = set_chn_2_vol
           $0d9f = set_chn_1_vol
           $0daf = set_chn_4_vol
           $0dbb = fx_vibrato
           $0dce = fx_vibrato.restore
           $0dd3 = fx_vibrato.go_up
           $0dde = fx_vibrato.finish_vibrato
           $0de4 = fx_arpeggio
           $0df0 = fx_arpeggio.greater_than_two
           $0df2 = fx_arpeggio.test_greater_than_two
           $0e01 = fx_arpeggio.arp_options
           $0e07 = fx_arpeggio.reset_arp
           $0e0a = fx_arpeggio.set_arp2
           $0e0f = fx_arpeggio.set_arp1
           $0e10 = fx_arpeggio.finish_arp
           $0e13 = fx_arpeggio.finish_skip_add
           $0e1c = fx_porta_up
           $0e2b = fx_porta_up.finish
           $0e32 = fx_porta_down
           $0e44 = fx_toneporta
           $0e56 = fx_toneporta.return_skip
           $0e60 = fx_toneporta.do_toneporta
           $0e75 = fx_toneporta.high_byte_same
           $0e7b = fx_toneporta.add
           $0e8d = fx_toneporta.subtract
           $0ea3 = fx_toneporta.set_exact
           $0ea5 = fx_toneporta.done
           $0eb8 = _setup_instrument_pointer_ch4
           $0ec3 = _setup_instrument_pointer
           $0eca = _setup_instrument_pointer.finish
           $0ed3 = _hUGE_dosound_banked
           $0ed3 = _hUGE_dosound
           $0f12 = _hUGE_dosound.write_mask1
           $0f15 = _hUGE_dosound.do_setvol1
           $0f28 = _hUGE_dosound.after_note1
           $0f5d = _hUGE_dosound.write_mask2
           $0f60 = _hUGE_dosound.do_setvol2
           $0f73 = _hUGE_dosound.after_note2
           $0ffa = _hUGE_dosound.no_wave_copy
           $0ffb = _hUGE_dosound.write_mask3
           $0ffe = _hUGE_dosound.do_setvol3
           $1009 = _hUGE_dosound.after_note3
           $105a = _hUGE_dosound.write_mask4
           $105d = _hUGE_dosound.do_setvol4
           $1068 = _hUGE_dosound.after_note4
           $106b = _hUGE_dosound.process_effects
           $1087 = _hUGE_dosound.after_effect1
           $10a3 = _hUGE_dosound.after_effect2
           $10bf = _hUGE_dosound.after_effect3
           $110a = _hUGE_dosound.done_macro
           $1113 = process_tick
           $1113 = _hUGE_dosound.after_effect4
           $1125 = _newrow
           $113d = _newrow.no_break
           $1148 = _neworder
           $1155 = _update_current_order
           $115c = _noreset
           $1161 = note_table
  SECTION: $11f1-$1672 ($0482 bytes) ["player"]
           $11f1 = InitializePlayer
           $1244 = UpdateBalloonPosition
           $1244 = UpdateBalloonPosition.balloonLeft
           $1251 = UpdateBalloonPosition.balloonRight
           $125c = UpdateCactusPosition
           $125c = UpdateCactusPosition.cactusLeft
           $1269 = UpdateCactusPosition.cactusRight
           $1274 = SpawnPlayer
           $1274 = SpawnPlayer.cactusLeft
           $1284 = SpawnPlayer.cactusRight
           $1294 = SpawnPlayer.balloonLeft
           $12a4 = SpawnPlayer.balloonRight
           $12b5 = ClearPlayerCactus
           $12c2 = ClearPlayerBalloon
           $12cf = RespawnPlayer
           $12e2 = MoveRight
           $12f2 = MoveRight.canCactusDriftLeft
           $1304 = MoveRight.cactusDriftLeft
           $1306 = MoveLeft
           $131a = MoveLeft.canCactusDriftRight
           $132b = MoveLeft.cactusDriftRight
           $132d = MoveDown
           $133d = MoveDown.canCactusDriftUp
           $134f = MoveDown.cactusDriftUp
           $1351 = ChargeBoost
           $1357 = ChargeBoost.isCharging
           $135e = ChargeBoost.resetBoost
           $1364 = ChargeAttack
           $136a = ChargeAttack.isCharging
           $136f = SpawnBullet
           $1389 = SpawnBullet.spawnFromLeft
           $1391 = SpawnBullet.leftOAM
           $139f = SpawnBullet.spawnFromRight
           $13a7 = SpawnBullet.rightOAM
           $13b5 = ClearBullet
           $13c1 = BulletUpdate
           $13c7 = BulletUpdate.isAlive
           $13d2 = BulletUpdate.offScreen
           $13d6 = BulletUpdate.onScreen
           $13dc = BulletUpdate.move
           $13e6 = BulletUpdate.moveLeft
           $13ea = BulletUpdate.moveRight
           $13ec = BulletUpdate.endMove
           $13f4 = PlayerControls
           $13f4 = PlayerControls.right
           $1407 = PlayerControls.moveRight
           $140f = PlayerControls.endRight
           $140f = PlayerControls.left
           $1422 = PlayerControls.moveLeft
           $1429 = PlayerControls.endLeft
           $1429 = PlayerControls.up
           $143c = PlayerControls.moveUp
           $1450 = PlayerControls.endUp
           $1450 = PlayerControls.down
           $1466 = PlayerControls.endDown
           $1466 = PlayerControls.canCactusDriftCenterX
           $1484 = PlayerControls.driftCenterXRight
           $1487 = PlayerControls.driftCenterXLeft
           $1488 = PlayerControls.endDriftToCenterX
           $1488 = PlayerControls.canCactusDriftCenterY
           $14a9 = PlayerControls.driftCenterYUp
           $14ac = PlayerControls.driftCenterYDown
           $14ad = PlayerControls.endDriftToCenterY
           $14ad = PlayerControls.start
           $14b8 = PlayerControls.endStart
           $14b8 = PlayerControls.AButton
           $14c5 = PlayerControls.activateAttack
           $14cd = PlayerControls.endA
           $14cd = PlayerControls.BButton
           $14da = PlayerControls.activateBoost
           $14e4 = PlayerControls.endB
           $14e5 = MovePlayer
           $14fa = MovePlayerAutoFlyUp
           $1513 = FallCactusDown
           $1528 = FallCactusDown.skipAcceleration
           $1531 = PopBalloonAnimation
           $1542 = PopBalloonAnimation.canSwitchFrames
           $154e = PopBalloonAnimation.frame0
           $1560 = PopBalloonAnimation.frame1
           $1572 = PopBalloonAnimation.clear
           $1582 = PopBalloonAnimation.endFrame
           $158a = CactusFalling
           $15a4 = CactusFalling.offScreen
           $15ac = CactusFalling.end
           $15ad = NoMoreLives
           $15b7 = PlayerUpdate
           $15be = PlayerUpdate.isAlive
           $15da = PlayerUpdate.popped
           $15e5 = PlayerUpdate.popping
           $15ed = PlayerUpdate.falling
           $15f6 = PlayerUpdate.respawning
           $15fd = PlayerUpdate.noMoreLives
           $1601 = PlayerUpdate.respawn
           $1605 = DeathOfPlayer
           $1629 = InvincibleBlink
           $162f = InvincibleBlink.isStillInvincible
           $163e = InvincibleBlink.blinkNormal
           $1645 = InvincibleBlink.blinkFast
           $1649 = InvincibleBlink.blinkEnd
           $165e = InvincibleBlink.defaultPalette
  SECTION: $1673-$18e9 ($0277 bytes) ["graphics"]
           $1673 = AddBGTiles8800Method
           $167d = AddBGTiles8800Method.tilesFitBlock
           $1682 = AddBGTiles8800Method.tilesExceedBlock
           $169c = AddBGTiles8800Method.end
           $169f = LoadPlayerTiles
           $16ac = LoadWindow
           $16ac = LoadWindow.loadTiles
           $16b8 = LoadWindow.loadMap
           $16c7 = LoadEnemyTiles
           $16e0 = LoadWorld1
           $16fc = LoadParkData
           $1727 = LoadGameData
           $172b = LoadMenuOpeningData
           $1747 = LoadMenuData
           $1760 = RefreshScore
           $179a = RefreshLives
           $17a3 = RefreshBoostBar
           $17ad = RefreshBoostBar.isCharging
           $17b7 = RefreshBoostBar.isHalfReady
           $17be = RefreshBoostBar.isReady
           $17c4 = RefreshAttackBar
           $17ce = RefreshAttackBar.isCharging
           $17d8 = RefreshAttackBar.isHalfReady
           $17df = RefreshAttackBar.isReady
           $17e5 = RefreshWindow
           $17f8 = RefreshWindow.end
           $17f9 = ClearAllTiles
           $1802 = ClearAllTiles.loop_u4
           $1811 = ClearAllTiles.loop_u5
           $1820 = ClearAllTiles.loop_u6
           $182b = ClearMap
           $1834 = ClearMap.loop_u7
           $183f = ReplaceTilemapHorizontal
           $1868 = ReplaceTilemapHorizontal.handleZero
           $186a = ReplaceTilemapHorizontal.handleZeroEnd
           $1876 = ReplaceTilemapHorizontal.loop
           $1894 = ReplaceTilemapHorizontal.end
           $1899 = MoveToNextTilemap
           $18ac = MoveToNextTilemap.canUpdateTilemap
           $18bf = MoveToNextTilemap.clouds1
           $18d4 = MoveToNextTilemap.clouds2
           $18e7 = MoveToNextTilemap.end
  SECTION: $18ea-$19e5 ($00fc bytes) ["level data"]
           $18ea = Set1
           $18ed = Set2
           $18ed = Set1End
           $18f3 = Set3
           $18f3 = Set2End
           $18fc = Set4
           $18fc = Set3End
           $1902 = Set4End
           $1902 = Set5
           $190b = Set5End
           $190b = Set6
           $1911 = Set6End
           $1911 = Set7
           $1917 = Set8
           $1917 = Set7End
           $1923 = Level1
           $1923 = Set8End
           $1930 = Level2
           $1935 = InitializeNewLevel
           $193d = InitializeLevelVars
           $1946 = LevelDataHandler
           $1946 = LevelDataHandler.loop
           $196a = LevelDataHandler.pointBalloon
           $196f = LevelDataHandler.balloonCactus
           $1974 = LevelDataHandler.bird
           $1979 = LevelDataHandler.bomb
           $197e = LevelDataHandler.porcupine
           $1983 = LevelDataHandler.empty
           $1985 = LevelDataHandler.loopCheck
           $198b = LevelDataManager
           $19ab = LevelDataManager.spawn
           $19c1 = LevelDataManager.wait
           $19ce = LevelDataManager.waitEnd
           $19db = LevelDataManager.end
  SECTION: $19e6-$1adf ($00fa bytes) ["rom"]
           $19e6 = Start
           $1a20 = MenuLoopOpening
           $1a20 = StartMenu
           $1a38 = MenuLoop
           $1a38 = StartGame
           $1a71 = ParkLoop
           $1a80 = SetupNextLevel
           $1ac2 = GameCountdownLoop
           $1ad1 = GameLoop
  SECTION: $1ae0-$1bc6 ($00e7 bytes) ["interrupts"]
           $1ae0 = InitializeInterrupts
           $1af6 = VBlankInterrupt
           $1b06 = LCDInterrupt
           $1b10 = LCDInterruptEnd
           $1b14 = MenuLCDInterrupt
           $1b24 = MenuLCDInterrupt.reset
           $1b2d = MenuLCDInterrupt.far
           $1b3b = MenuLCDInterrupt.close
           $1b47 = MenuLCDInterrupt.end
           $1b4a = SetMenuInterrupts
           $1b58 = ParkLCDInterrupt
           $1b64 = ParkLCDInterrupt.clouds
           $1b72 = ParkLCDInterrupt.ground
           $1b77 = ParkLCDInterrupt.end
           $1b7a = SetParkInterrupts
           $1b7e = GameLCDInterrupt
           $1b8e = GameLCDInterrupt.reset
           $1b9c = GameLCDInterrupt.far
           $1baa = GameLCDInterrupt.close
           $1bb6 = GameLCDInterrupt.end
           $1bb9 = SetGameInterrupts
  SECTION: $1bc7-$1c3e ($0078 bytes) ["controller"]
           $1bc7 = InitializeController
           $1bcc = ReadInput
           $1bfc = JOY_RIGHT
           $1c04 = JOY_LEFT
           $1c0c = JOY_UP
           $1c14 = JOY_DOWN
           $1c1c = JOY_A
           $1c24 = JOY_B
           $1c2c = JOY_SELECT
           $1c34 = JOY_START
           $1c3c = JOY_FALSE
  SECTION: $1c3f-$1c5c ($001e bytes) ["OAM DMA routine"]
           $1c3f = CopyDMARoutine
           $1c46 = CopyDMARoutine.copy
           $1c4d = DMARoutine
           $1c51 = DMARoutine.wait
           $1c55 = DMARoutineEnd
           $1c55 = OAMDMA
    SLACK: $23d0 bytes

ROMX bank #1:
  SECTION: $4000-$57af ($17b0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = ParkTiles
           $4620 = ParkTilesEnd
           $4620 = BackgroundTiles
           $4b00 = BackgroundTilesEnd
           $4b00 = ClassicParkTiles
           $4b40 = CountdownTiles
           $4b40 = ClassicParkTilesEnd
           $4c40 = CountdownTilesEnd
           $4c40 = WindowTiles
           $4e10 = WindowTilesEnd
           $4e10 = MenuTiles
           $4e30 = MenuTilesEnd
           $4e30 = MenuTitleTiles
           $57b0 = MenuTitleTilesEnd
  SECTION: $57b0-$62ed ($0b3e bytes) ["Song Data2"]
           $57b0 = angryTheme
           $57c5 = order_cnt
           $57c6 = order1
           $57d0 = order2
           $57da = order3
           $57e4 = order4
           $57ee = P0
           $58ae = P1
           $596e = P2
           $5a2e = P3
           $5aee = P4
           $5bae = P5
           $5c6e = P6
           $5d2e = P7
           $5dee = P8
           $5eae = P9
           $5f6e = P10
           $602e = P11
           $60ee = duty_instruments
           $60ee = itSquareinst1
           $60f2 = itSquareinst2
           $60f6 = itSquareinst3
           $60fa = itSquareinst4
           $60fe = itSquareinst5
           $6102 = itSquareinst6
           $6106 = itSquareinst7
           $610a = itSquareinst8
           $610e = itSquareinst9
           $6112 = itSquareinst10
           $6116 = itSquareinst11
           $611a = itSquareinst12
           $611e = itSquareinst13
           $6122 = itSquareinst14
           $6126 = itSquareinst15
           $612a = wave_instruments
           $612a = itWaveinst1
           $612e = itWaveinst2
           $6132 = itWaveinst3
           $6136 = itWaveinst4
           $613a = itWaveinst5
           $613e = itWaveinst6
           $6142 = itWaveinst7
           $6146 = itWaveinst8
           $614a = itWaveinst9
           $614e = itWaveinst10
           $6152 = itWaveinst11
           $6156 = itWaveinst12
           $615a = itWaveinst13
           $615e = itWaveinst14
           $6162 = itWaveinst15
           $6166 = noise_instruments
           $6166 = itNoiseinst1
           $616e = itNoiseinst2
           $6176 = itNoiseinst3
           $617e = itNoiseinst4
           $6186 = itNoiseinst5
           $618e = itNoiseinst6
           $6196 = itNoiseinst7
           $619e = itNoiseinst8
           $61a6 = itNoiseinst9
           $61ae = itNoiseinst10
           $61b6 = itNoiseinst11
           $61be = itNoiseinst12
           $61c6 = itNoiseinst13
           $61ce = itNoiseinst14
           $61d6 = itNoiseinst15
           $61de = routines
           $61de = __end_hUGE_Routine_0
           $61de = __hUGE_Routine_0
           $61df = __end_hUGE_Routine_1
           $61df = __hUGE_Routine_1
           $61e0 = __end_hUGE_Routine_2
           $61e0 = __hUGE_Routine_2
           $61e1 = __end_hUGE_Routine_3
           $61e1 = __hUGE_Routine_3
           $61e2 = __end_hUGE_Routine_4
           $61e2 = __hUGE_Routine_4
           $61e3 = __end_hUGE_Routine_5
           $61e3 = __hUGE_Routine_5
           $61e4 = __end_hUGE_Routine_6
           $61e4 = __hUGE_Routine_6
           $61e5 = __end_hUGE_Routine_7
           $61e5 = __hUGE_Routine_7
           $61e6 = __hUGE_Routine_8
           $61e6 = __end_hUGE_Routine_8
           $61e7 = __hUGE_Routine_9
           $61e7 = __end_hUGE_Routine_9
           $61e8 = __hUGE_Routine_10
           $61e8 = __end_hUGE_Routine_10
           $61e9 = __hUGE_Routine_11
           $61e9 = __end_hUGE_Routine_11
           $61ea = __hUGE_Routine_12
           $61ea = __end_hUGE_Routine_12
           $61eb = __hUGE_Routine_13
           $61eb = __end_hUGE_Routine_13
           $61ec = __end_hUGE_Routine_14
           $61ec = __hUGE_Routine_14
           $61ed = __end_hUGE_Routine_15
           $61ed = __hUGE_Routine_15
           $61ee = waves
           $61ee = wave0
           $61fe = wave1
           $620e = wave2
           $621e = wave3
           $622e = wave4
           $623e = wave5
           $624e = wave6
           $625e = wave7
           $626e = wave8
           $627e = wave9
           $628e = wave10
           $629e = wave11
           $62ae = wave12
           $62be = wave13
           $62ce = wave14
           $62de = wave15
  SECTION: $62ee-$680b ($051e bytes) ["Song Data"]
           $62ee = menuTheme
           $6303 = order_cnt
           $6304 = order1
           $6306 = order2
           $6308 = order3
           $630a = order4
           $630c = P1
           $63cc = P2
           $648c = P3
           $654c = P6
           $660c = duty_instruments
           $660c = itSquareinst1
           $6610 = itSquareinst2
           $6614 = itSquareinst3
           $6618 = itSquareinst4
           $661c = itSquareinst5
           $6620 = itSquareinst6
           $6624 = itSquareinst7
           $6628 = itSquareinst8
           $662c = itSquareinst9
           $6630 = itSquareinst10
           $6634 = itSquareinst11
           $6638 = itSquareinst12
           $663c = itSquareinst13
           $6640 = itSquareinst14
           $6644 = itSquareinst15
           $6648 = wave_instruments
           $6648 = itWaveinst1
           $664c = itWaveinst2
           $6650 = itWaveinst3
           $6654 = itWaveinst4
           $6658 = itWaveinst5
           $665c = itWaveinst6
           $6660 = itWaveinst7
           $6664 = itWaveinst8
           $6668 = itWaveinst9
           $666c = itWaveinst10
           $6670 = itWaveinst11
           $6674 = itWaveinst12
           $6678 = itWaveinst13
           $667c = itWaveinst14
           $6680 = itWaveinst15
           $6684 = noise_instruments
           $6684 = itNoiseinst1
           $668c = itNoiseinst2
           $6694 = itNoiseinst3
           $669c = itNoiseinst4
           $66a4 = itNoiseinst5
           $66ac = itNoiseinst6
           $66b4 = itNoiseinst7
           $66bc = itNoiseinst8
           $66c4 = itNoiseinst9
           $66cc = itNoiseinst10
           $66d4 = itNoiseinst11
           $66dc = itNoiseinst12
           $66e4 = itNoiseinst13
           $66ec = itNoiseinst14
           $66f4 = itNoiseinst15
           $66fc = routines
           $66fc = __end_hUGE_Routine_0
           $66fc = __hUGE_Routine_0
           $66fd = __end_hUGE_Routine_1
           $66fd = __hUGE_Routine_1
           $66fe = __end_hUGE_Routine_2
           $66fe = __hUGE_Routine_2
           $66ff = __end_hUGE_Routine_3
           $66ff = __hUGE_Routine_3
           $6700 = __end_hUGE_Routine_4
           $6700 = __hUGE_Routine_4
           $6701 = __end_hUGE_Routine_5
           $6701 = __hUGE_Routine_5
           $6702 = __end_hUGE_Routine_6
           $6702 = __hUGE_Routine_6
           $6703 = __end_hUGE_Routine_7
           $6703 = __hUGE_Routine_7
           $6704 = __hUGE_Routine_8
           $6704 = __end_hUGE_Routine_8
           $6705 = __hUGE_Routine_9
           $6705 = __end_hUGE_Routine_9
           $6706 = __hUGE_Routine_10
           $6706 = __end_hUGE_Routine_10
           $6707 = __hUGE_Routine_11
           $6707 = __end_hUGE_Routine_11
           $6708 = __hUGE_Routine_12
           $6708 = __end_hUGE_Routine_12
           $6709 = __hUGE_Routine_13
           $6709 = __end_hUGE_Routine_13
           $670a = __end_hUGE_Routine_14
           $670a = __hUGE_Routine_14
           $670b = __end_hUGE_Routine_15
           $670b = __hUGE_Routine_15
           $670c = waves
           $670c = wave0
           $671c = wave1
           $672c = wave2
           $673c = wave3
           $674c = wave4
           $675c = wave5
           $676c = wave6
           $677c = wave7
           $678c = wave8
           $679c = wave9
           $67ac = wave10
           $67bc = wave11
           $67cc = wave12
           $67dc = wave13
           $67ec = wave14
           $67fc = wave15
  SECTION: $680c-$6b9e ($0393 bytes) ["balloon cactus"]
           $680c = InitializeBalloonCactus
           $6815 = InitializeBalloonCactus.loop_u1
           $6820 = SetStruct
           $685d = SpawnBalloonCactus
           $6870 = SpawnBalloonCactus.availableSpace
           $6879 = SpawnBalloonCactus.availableOAMSpace
           $68a7 = SpawnBalloonCactus.isLeftside
           $68a7 = SpawnBalloonCactus.balloonLeft
           $68c0 = SpawnBalloonCactus.balloonRight
           $68d0 = SpawnBalloonCactus.cactusLeft
           $68de = SpawnBalloonCactus.cactusRight
           $68ee = SpawnBalloonCactus.setStruct
           $68f3 = SpawnBalloonCactus.end
           $68f8 = ClearCactus
           $690e = ClearBalloon
           $6924 = Clear
           $692e = PopBalloonAnimation
           $693f = PopBalloonAnimation.canSwitchFrames
           $694d = PopBalloonAnimation.frame0
           $6971 = PopBalloonAnimation.frame1
           $6995 = PopBalloonAnimation.clear
           $69b6 = PopBalloonAnimation.endFrame
           $69bd = PopBalloonAnimation.end
           $69be = CactusFalling
           $69d0 = CactusFalling.falling
           $69e6 = CactusFalling.skipAcceleration
           $69f2 = CactusFalling.offScreen
           $69f5 = CactusFalling.end
           $69f6 = UpdateBalloonPosition
           $69f6 = UpdateBalloonPosition.balloonLeft
           $6a0c = UpdateBalloonPosition.balloonRight
           $6a17 = UpdateCactusPosition
           $6a17 = UpdateCactusPosition.cactusLeft
           $6a2d = UpdateCactusPosition.cactusRight
           $6a38 = Move
           $6a53 = Move.isLeftside
           $6a61 = Move.updatePosition
           $6a68 = DeathOfBalloonCactus
           $6a99 = CollisionBalloonCactus
           $6a99 = CollisionBalloonCactus.checkHit
           $6ab2 = CollisionBalloonCactus.checkHitByBullet
           $6acd = CollisionBalloonCactus.checkHitPlayer
           $6aed = BalloonCactusUpdate
           $6af4 = BalloonCactusUpdate.loop
           $6b4b = BalloonCactusUpdate.isAlive
           $6b68 = BalloonCactusUpdate.offScreen
           $6b6d = BalloonCactusUpdate.popped
           $6b77 = BalloonCactusUpdate.notPopping
           $6b81 = BalloonCactusUpdate.checkLoop
           $6b90 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6b9f-$6f0c ($036e bytes) ["bird"]
           $6b9f = InitializeBird
           $6ba8 = InitializeBird.loop_u1
           $6bb3 = SetStruct
           $6bd4 = SpawnBird
           $6be7 = SpawnBird.availableSpace
           $6bf1 = SpawnBird.availableOAMSpace
           $6c0e = SpawnBird.isRightside
           $6c13 = SpawnBird.birdLeft
           $6c2c = SpawnBird.birdMiddle
           $6c3c = SpawnBird.birdRight
           $6c4e = SpawnBird.isLeftside
           $6c4e = SpawnBird.leftBirdLeft
           $6c67 = SpawnBird.leftBirdMiddle
           $6c77 = SpawnBird.leftBirdRight
           $6c87 = SpawnBird.setStruct
           $6c8c = SpawnBird.end
           $6c91 = BirdRightsideFlap
           $6c98 = BirdRightsideFlap.soaring
           $6cc0 = BirdRightsideFlap.flapping
           $6cf1 = BirdLeftsideFlap
           $6cf8 = BirdLeftsideFlap.soaring
           $6d20 = BirdLeftsideFlap.flapping
           $6d51 = Clear
           $6d6e = UpdateBirdPosition
           $6d6e = UpdateBirdPosition.birdLeft
           $6d84 = UpdateBirdPosition.birdMiddle
           $6d90 = UpdateBirdPosition.birdRight
           $6d9b = Move
           $6da2 = Move.isRightside
           $6db0 = Move.isLeftside
           $6dba = Move.moveDown
           $6dc8 = Move.moveEnd
           $6dcc = BirdFall
           $6dd8 = BirdFall.checkOffscreenY
           $6dea = BirdFall.end
           $6ded = DeathOfBird
           $6e05 = DeathOfBird.facingLeft
           $6e30 = DeathOfBird.facingRight
           $6e5b = CollisionBird
           $6e5b = CollisionBird.checkHitPlayer
           $6e7b = BirdUpdate
           $6e82 = BirdUpdate.loop
           $6ebc = BirdUpdate.isAlive
           $6ed9 = BirdUpdate.offScreen
           $6ede = BirdUpdate.isDead
           $6eef = BirdUpdate.checkLoop
  SECTION: $6f0d-$71c6 ($02ba bytes) ["bomb"]
           $6f0d = InitializeBomb
           $6f16 = InitializeBomb.loop_u1
           $6f21 = SetStruct
           $6f42 = SpawnBomb
           $6f54 = SpawnBomb.availableSpace
           $6f5d = SpawnBomb.availableOAMSpace
           $6f73 = SpawnBomb.balloonLeft
           $6f8d = SpawnBomb.balloonRight
           $6f9e = SpawnBomb.bombSpace
           $6fa9 = SpawnBomb.setStruct
           $6fae = SpawnBomb.end
           $6fb3 = Clear
           $6fd0 = Move
           $6fd8 = Move.balloonLeft
           $6fee = Move.balloonRight
           $6ffa = Move.bombSpace
           $7005 = DeathOfBomb
           $700f = CollisionBomb
           $700f = CollisionBomb.checkHit
           $702b = CollisionBomb.checkHitByBullet
           $7047 = ExplosionAnimation
           $7058 = ExplosionAnimation.canSwitchFrames
           $7070 = ExplosionAnimation.frame0
           $7095 = ExplosionAnimation.frame1
           $70d8 = ExplosionAnimation.frame2
           $7104 = ExplosionAnimation.frame3
           $7130 = ExplosionAnimation.clear
           $7134 = ExplosionAnimation.endFrame
           $713b = ExplosionAnimation.end
           $713c = BombUpdate
           $7143 = BombUpdate.loop
           $717d = BombUpdate.isAlive
           $719a = BombUpdate.offScreen
           $719f = BombUpdate.popped
           $71a9 = BombUpdate.checkLoop
  SECTION: $71c7-$7430 ($026a bytes) ["game"]
           $71c7 = InitializeGame
           $71cf = UpdatePark.fadeIn
           $71cf = UpdatePark
           $71d5 = UpdatePark.hasFadedIn
           $71ee = UpdatePark.fadeOut
           $71f6 = UpdatePark.skipFade
           $71f9 = UpdatePark.moveUp
           $7202 = UpdatePark.flyUpNormal
           $7208 = UpdatePark.flyUpFast
           $720c = TryToUnpause
           $7223 = TryToUnpause.end
           $7224 = SpawnHandWave
           $7248 = SpawnHandWave.end
           $7249 = HandWaveAnimation
           $7250 = HandWaveAnimation.frame0
           $726c = HandWaveAnimation.frame1
           $7287 = HandWaveAnimation.end
           $7288 = SpawnCountdown
           $72b3 = SpawnCountdown.end
           $72b4 = CountdownAnimation
           $72bb = CountdownAnimation.countdown
           $72c3 = CountdownAnimation.balloonPop
           $72c9 = CountdownAnimation.frames
           $72f0 = CountdownAnimation.frame0
           $7312 = CountdownAnimation.frame1
           $7334 = CountdownAnimation.frame2
           $7355 = CountdownAnimation.frame3
           $7376 = CountdownAnimation.frame4
           $7397 = CountdownAnimation.frame5
           $73b5 = CountdownAnimation.remove
           $73ca = CountdownAnimation.endFrame
           $73d2 = IncrementScrollOffset
           $73d2 = IncrementScrollOffset.close
           $73e0 = IncrementScrollOffset.far
           $73ee = IncrementScrollOffset.end
           $73ef = UpdateSprites
           $7405 = UpdateGameCountdown
           $7417 = UpdateGame
           $7430 = UpdateGame.end
  SECTION: $7431-$764d ($021d bytes) ["point balloon"]
           $7431 = InitializePointBalloon
           $743a = InitializePointBalloon.loop_u1
           $7445 = SetStruct
           $7466 = SpawnPointBalloon
           $7478 = SpawnPointBalloon.availableSpace
           $7481 = SpawnPointBalloon.availableOAMSpace
           $7497 = SpawnPointBalloon.balloonLeft
           $74b0 = SpawnPointBalloon.balloonRight
           $74c0 = SpawnPointBalloon.setStruct
           $74c5 = SpawnPointBalloon.end
           $74ca = PopBalloonAnimation
           $74db = PopBalloonAnimation.canSwitchFrames
           $74e7 = PopBalloonAnimation.frame0
           $750b = PopBalloonAnimation.frame1
           $752f = PopBalloonAnimation.clear
           $7533 = PopBalloonAnimation.endFrame
           $753b = Clear
           $7554 = Move
           $755b = Move.balloonLeft
           $7571 = Move.balloonRight
           $757c = DeathOfPointBalloon
           $758e = CollisionPointBalloon
           $758e = CollisionPointBalloon.checkHit
           $75a7 = CollisionPointBalloon.checkHitByBullet
           $75c3 = PointBalloonUpdate
           $75ca = PointBalloonUpdate.loop
           $7604 = PointBalloonUpdate.isAlive
           $7621 = PointBalloonUpdate.offScreen
           $7626 = PointBalloonUpdate.popped
           $7630 = PointBalloonUpdate.checkLoop
           $763f = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $764e-$77a3 ($0156 bytes) ["porcupine"]
           $764e = InitializePorcupine
           $7657 = InitializePorcupine.loop_u1
           $7662 = GetStruct
           $767a = SetStruct
           $7691 = SpawnPorcupine
           $76a4 = SpawnPorcupine.availableSpace
           $76ae = SpawnPorcupine.availableOAMSpace
           $76c4 = SpawnPorcupine.topLeft
           $76dd = SpawnPorcupine.topMiddle
           $76ed = SpawnPorcupine.topMiddle2
           $76fd = SpawnPorcupine.topRight
           $770d = SpawnPorcupine.bottomLeft
           $771d = SpawnPorcupine.bottomMiddle
           $772f = SpawnPorcupine.bottomMiddle2
           $7741 = SpawnPorcupine.bottomRight
           $7753 = SpawnPorcupine.setStruct
           $7758 = SpawnPorcupine.end
           $775d = PorcupineUpdate
           $7764 = PorcupineUpdate.loop
           $7781 = PorcupineUpdate.offScreen
           $7781 = PorcupineUpdate.isAlive
           $7783 = PorcupineUpdate.checkLoop
           $7783 = PorcupineUpdate.isDead
           $779f = PorcupineUpdate.end
  SECTION: $77a4-$789a ($00f7 bytes) ["menu"]
           $77a4 = InitializeMenu
           $77b0 = SpawnMenuCursor
           $77b9 = SpawnMenuCursor.availableSpace
           $77d4 = SpawnMenuCursor.end
           $77d5 = BlinkMenuCursor
           $77dd = BlinkMenuCursor.blink
           $77ee = BlinkMenuCursor.show
           $77f2 = BlinkMenuCursor.empty
           $77f6 = MoveCursor
           $77f7 = SelectMode
           $7800 = MenuInput
           $780a = MenuInput.moveSelected
           $7813 = MenuInput.selectMode
           $781c = MenuInput.end
           $781d = UpdateMenuOpening
           $7839 = UpdateMenuOpening.startSound
           $783e = UpdateMenuOpening.scrollUpTitle
           $784a = UpdateMenuOpening.endSound
           $784f = UpdateMenuOpening.scrollDownTitle
           $785b = UpdateMenuOpening.scrollUpTitle2
           $7867 = UpdateMenuOpening.fadeOut
           $786f = UpdateMenuOpening.next
           $7873 = UpdateMenuOpening.endFrame
           $787a = UpdateMenuOpening.end
           $787b = UpdateMenu
           $787b = UpdateMenu.fadeIn
           $7881 = UpdateMenu.hasFadedIn
           $7892 = UpdateMenu.fadeOut
  SECTION: $789b-$7954 ($00ba bytes) ["sound"]
           $789b = AUDIO_OFF
           $789f = AUDIO_ON
           $78a4 = PopSound
           $78b7 = ExplosionSound
           $78c4 = WaveSound
           $78d1 = FallingSound
           $78e6 = RisingSound
           $78fb = StopSweepSound
           $7900 = CollectSound
           $7915 = WrongAnswerSound
           $792c = PercussionSound
           $7939 = BassSound
           $794a = ClearSound
  SECTION: $7955-$79f1 ($009d bytes) ["palettes"]
           $7955 = InitializePalettes
           $7971 = FadeOutPalettes
           $7971 = FadeOutPalettes.fadeOut
           $798e = FadeOutPalettes.fade1
           $7992 = FadeOutPalettes.fade2
           $7996 = FadeOutPalettes.fade3
           $799a = FadeOutPalettes.fade4
           $799c = FadeOutPalettes.fadePalettes
           $79ab = FadeOutPalettes.end
           $79ad = FadeInPalettes
           $79b4 = FadeInPalettes.hasFadedIn
           $79b7 = FadeInPalettes.fadeIn
           $79d3 = FadeInPalettes.fade1
           $79d7 = FadeInPalettes.fade2
           $79db = FadeInPalettes.fade3
           $79df = FadeInPalettes.fade4
           $79e1 = FadeInPalettes.fadePalettes
           $79f0 = FadeInPalettes.end
  SECTION: $79f2-$7a8b ($009a bytes) ["memory"]
           $79f2 = MEMCPY.memcpy_loop
           $79f2 = MEMCPY
           $79f6 = MEMCPY.memcpy_check_limit
           $79fc = MEMCPY_WITH_OFFSET
           $79fd = MEMCPY_WITH_OFFSET.memcpy_loop
           $7a08 = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $7a0f = ClearOAM
           $7a16 = ClearOAM.loop_u1
           $7a1f = ClearRAM
           $7a26 = ClearRAM.loop_u2
           $7a2f = RequestOAMSpace
           $7a38 = RequestOAMSpace.loop
           $7a4f = RequestOAMSpace.availableSpace
           $7a54 = RequestOAMSpace.sufficientSpace
           $7a64 = RequestOAMSpace.isNotZero4
           $7a65 = RequestOAMSpace.isNotZero3
           $7a66 = RequestOAMSpace.isNotZero2
           $7a67 = RequestOAMSpace.isNotZero1
           $7a69 = RequestOAMSpace.notEnoughSprites
           $7a71 = RequestOAMSpace.end
           $7a74 = RequestRAMSpace
           $7a74 = RequestRAMSpace.loop
           $7a79 = RequestRAMSpace.availableSpace
           $7a7d = RequestRAMSpace.checkLoop
           $7a8a = RequestRAMSpace.noFreeSpace
           $7a8b = RequestRAMSpace.end
  SECTION: $7a8c-$7ad4 ($0049 bytes) ["math"]
           $7a8c = MODULO
           $7a8e = MODULO.loop
           $7a93 = RANDOM
           $7a9c = DIVISION
           $7aa2 = DIVISION.loop
           $7aa7 = DIVISION.end
           $7aaa = ToBCD
           $7ac1 = ToBCD.end
           $7ac4 = MULTIPLY
           $7ac7 = MULTIPLY.loop
           $7ad2 = MULTIPLY.end
  SECTION: $7ad5-$7b06 ($0032 bytes) ["lcd"]
           $7ad5 = LCD_OFF
           $7adc = LCD_ON
           $7ae3 = LCD_ON_NO_WINDOW
           $7aea = WaitVBlank
           $7af1 = WaitVBlank.loop
           $7afc = SetupWindow
  SECTION: $7b07-$7b2b ($0025 bytes) ["score"]
           $7b07 = InitializeScore
           $7b0f = AddPoints
           $7b1f = AddPoints.carry
           $7b29 = AddPoints.end
  SECTION: $7b2c-$7b46 ($001b bytes) ["general initialization"]
           $7b2c = InitializeGeneralVars
  SECTION: $7b47-$7b4e ($0008 bytes) ["timer"]
           $7b47 = UpdateGlobalTimer
    SLACK: $04b1 bytes

WRAM0 bank #0:
  SECTION: $c000-$c009 ($000a bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wParallaxClose
           $c003 = wParallaxFar
           $c004 = wUpdateTilemapAddress
           $c006 = wUpdateTilemapOffset
           $c007 = wUpdateTilemapIndex
           $c008 = wHasUpdatedNextTilemapAddress
           $c009 = wLastUpdatedSCX
  SECTION: $c00a-$c04f ($0046 bytes) ["Playback variables"]
           $c00a = _start_vars
           $c00a = order_cnt
           $c00b = order1
           $c00b = _start_song_descriptor_pointers
           $c00d = order2
           $c00f = order3
           $c011 = order4
           $c013 = duty_instruments
           $c015 = wave_instruments
           $c017 = noise_instruments
           $c019 = routines
           $c01b = waves
           $c01d = mute_channels
           $c01d = _end_song_descriptor_pointers
           $c01e = pattern1
           $c020 = pattern2
           $c022 = pattern3
           $c024 = pattern4
           $c026 = ticks_per_row
           $c027 = current_order
           $c028 = next_order
           $c029 = row_break
           $c02a = temp_note_value
           $c02c = row
           $c02d = tick
           $c02e = counter
           $c02f = current_wave
           $c02f = _hUGE_current_wave
           $c030 = channel_period1
           $c030 = channels
           $c030 = channel1
           $c032 = toneporta_target1
           $c034 = channel_note1
           $c035 = vibrato_tremolo_phase1
           $c036 = envelope1
           $c037 = highmask1
           $c038 = channel_period2
           $c038 = channel2
           $c03a = toneporta_target2
           $c03c = channel_note2
           $c03d = vibrato_tremolo_phase2
           $c03e = envelope2
           $c03f = highmask2
           $c040 = channel_period3
           $c040 = channel3
           $c042 = toneporta_target3
           $c044 = channel_note3
           $c045 = vibrato_tremolo_phase3
           $c046 = envelope3
           $c047 = highmask3
           $c048 = channel_period4
           $c048 = channel4
           $c04a = toneporta_target4
           $c04c = channel_note4
           $c04d = vibrato_tremolo_phase4
           $c04e = envelope4
           $c04f = highmask4
           $c050 = _end_vars
  SECTION: $c050-$c06f ($0020 bytes) ["point balloon vars"]
           $c050 = pointBalloon
  SECTION: $c070-$c08d ($001e bytes) ["balloon cactus vars"]
           $c070 = balloonCactus
  SECTION: $c08e-$c0a4 ($0017 bytes) ["player vars"]
           $c08e = wPlayerY
           $c08f = wPlayerX
           $c090 = wPlayerY2
           $c091 = wPlayerX2
           $c092 = wPlayerAlive
           $c093 = wPlayerPopping
           $c094 = wPlayerPoppingFrame
           $c095 = wPlayerPoppingTimer
           $c096 = wPlayerFalling
           $c097 = wPlayerFallSpeed
           $c098 = wPlayerFallingTimer
           $c099 = wPlayerDelayFallingTimer
           $c09a = wPlayerRespawnTimer
           $c09b = wPlayerSpeed
           $c09c = wPlayerLives
           $c09d = wPlayerRight
           $c09e = wPlayerBulletY
           $c09f = wPlayerBulletX
           $c0a0 = wPlayerBulletAlive
           $c0a1 = wPlayerBulletRight
           $c0a2 = wPlayerInvincible
           $c0a3 = wPlayerBoost
           $c0a4 = wPlayerAttack
  SECTION: $c0a5-$c0b4 ($0010 bytes) ["bird vars"]
           $c0a5 = bird
  SECTION: $c0b5-$c0c4 ($0010 bytes) ["enemy struct vars"]
           $c0b5 = wEnemyOffset
           $c0b6 = wEnemyY
           $c0b7 = wEnemyX
           $c0b8 = wEnemyActive
           $c0b9 = wEnemyOAM
           $c0ba = wEnemyAlive
           $c0bb = wEnemyPopping
           $c0bc = wEnemyPoppingFrame
           $c0bd = wEnemyPoppingTimer
           $c0be = wEnemyRightside
           $c0bf = wEnemyY2
           $c0c0 = wEnemyX2
           $c0c1 = wEnemyFalling
           $c0c2 = wEnemyFallingSpeed
           $c0c3 = wEnemyFallingTimer
           $c0c4 = wEnemyDelayFallingTimer
  SECTION: $c0c5-$c0d4 ($0010 bytes) ["bomb vars"]
           $c0c5 = bomb
  SECTION: $c0d5-$c0d9 ($0005 bytes) ["porcupine vars"]
           $c0d5 = porcupine
  SECTION: $c0da-$c0dd ($0004 bytes) ["palettes vars"]
           $c0da = wFadeInFrame
           $c0db = wFadeOutFrame
           $c0dc = wTriggerFadeIn
           $c0dd = wTriggerFadeOut
  SECTION: $c0de-$c0e0 ($0003 bytes) ["controller vars"]
           $c0de = wControllerDown
           $c0df = wControllerPressed
           $c0e0 = wPaused
  SECTION: $c0e1-$c0e3 ($0003 bytes) ["score vars"]
           $c0e1 = wScore
  SECTION: $c0e4-$c0e6 ($0003 bytes) ["interrupts vars"]
           $c0e4 = wVBlankFlag
           $c0e5 = wLCDInterrupt
  SECTION: $c0e7-$c0e9 ($0003 bytes) ["level vars"]
           $c0e7 = wLevel
           $c0e8 = wLevelPointer
           $c0e9 = wLevelPointerWaitCounter
  SECTION: $c0ea-$c0eb ($0002 bytes) ["menu vars"]
           $c0ea = wMenuFrame
           $c0eb = wSelectedMode
  SECTION: $c0ec-$c0ed ($0002 bytes) ["game vars"]
           $c0ec = wHandWavingFrame
           $c0ed = wCountdownFrame
  SECTION: $c0ee-$c0ee ($0001 byte) ["timer vars"]
           $c0ee = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e71 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1c30 bytes in 1 bank
    ROMX: $3b4f bytes in 1 bank
    WRAM0: $018f bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
