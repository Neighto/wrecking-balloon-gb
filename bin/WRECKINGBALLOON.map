ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c7 ($007d bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = OffScreenXEnemies
           $009d = OffScreenXEnemies.end
           $009f = OffScreenYEnemies
           $00b0 = OffScreenYEnemies.end
           $00b2 = OffScreenX
           $00ba = OffScreenX.end
           $00bc = OffScreenY
           $00c6 = OffScreenY.end
  SECTION: $00c8-$00eb ($0024 bytes) ["scroll"]
           $00c8 = HorizontalScroll
           $00d5 = HorizontalScroll.end
           $00d7 = VerticalScroll
           $00e4 = VerticalScroll.end
           $00e6 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0977 ($0828 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = Level1Map
           $04b8 = Level1MapEnd
           $04b8 = Level2Map
           $06f8 = MenuMap
           $06f8 = Level2MapEnd
           $0938 = WindowMap
           $0938 = MenuMapEnd
           $0978 = WindowMapEnd
  SECTION: $0978-$1118 ($07a1 bytes) ["Sound Driver"]
           $0978 = _hUGE_init_banked
           $097c = _hUGE_init
           $097e = continue_init
           $0987 = _hUGE_mute_channel_banked
           $098b = _hUGE_mute_channel
           $098d = continue_mute
           $0998 = hUGE_mute_channel
           $099e = hUGE_mute_channel.enable_loop
           $09a5 = hUGE_mute_channel.enable_cut
           $09b2 = _hUGE_set_position_banked
           $09b6 = _hUGE_set_position
           $09b8 = continue_set_position
           $09bf = hUGE_init
           $09c6 = hUGE_init.fill_loop
           $09ea = hUGE_init.copy_song_descriptor_loop
           $09f4 = _refresh_patterns
           $0a0e = _refresh_patterns.load_pattern
           $0a1e = _load_note_data
           $0a30 = _lookup_note
           $0a3a = _convert_note
           $0a48 = _convert_ch4_note
           $0a5f = _update_channel
           $0a69 = _update_channel1
           $0a77 = _update_channel2
           $0a85 = _update_channel3
           $0a93 = _update_channel4
           $0aa3 = _playnote1
           $0abe = _playnote2
           $0ad9 = _playnote3
           $0afa = _playnote4
           $0b0e = _doeffect
           $0b23 = _doeffect.jump
           $0b53 = setup_channel_pointer
           $0b61 = fx_set_master_volume
           $0b66 = fx_call_routine
           $0b88 = fx_call_routine.call_hl
           $0b89 = fx_set_pan
           $0b8e = fx_set_duty
           $0b93 = fx_set_duty.chan2
           $0b9d = fx_set_duty.chan1
           $0ba7 = fx_vol_slide
           $0bae = fx_vol_slide.loop
           $0bb3 = fx_vol_slide.cont
           $0be5 = fx_vol_slide.cont1
           $0bec = fx_vol_slide.cont2
           $0c00 = _envelope_registers
           $0c08 = fx_note_delay
           $0c21 = fx_note_delay.play_note
           $0c3f = _play_note_routines
           $0c4b = fx_set_speed
           $0c51 = hUGE_set_position
           $0c51 = fx_pos_jump
           $0c5b = fx_pattern_break
           $0c60 = fx_note_cut
           $0c68 = fx_note_cut.loop
           $0c6d = fx_note_cut.cont
           $0c72 = note_cut
           $0c89 = fx_set_volume
           $0c8a = set_channel_volume
           $0c95 = set_chn_3_vol
           $0ca7 = set_chn_3_vol.three
           $0cab = set_chn_3_vol.two
           $0caf = set_chn_3_vol.one
           $0cb3 = set_chn_3_vol.zero
           $0cb4 = set_chn_3_vol.done
           $0cb7 = set_chn_2_vol
           $0cc7 = set_chn_1_vol
           $0cd7 = set_chn_4_vol
           $0ce3 = fx_vibrato
           $0cf6 = fx_vibrato.restore
           $0cfb = fx_vibrato.go_up
           $0d06 = fx_vibrato.finish_vibrato
           $0d0c = fx_arpeggio
           $0d18 = fx_arpeggio.greater_than_two
           $0d1a = fx_arpeggio.test_greater_than_two
           $0d29 = fx_arpeggio.arp_options
           $0d2f = fx_arpeggio.reset_arp
           $0d32 = fx_arpeggio.set_arp2
           $0d37 = fx_arpeggio.set_arp1
           $0d38 = fx_arpeggio.finish_arp
           $0d3b = fx_arpeggio.finish_skip_add
           $0d44 = fx_porta_up
           $0d53 = fx_porta_up.finish
           $0d5a = fx_porta_down
           $0d6c = fx_toneporta
           $0d7e = fx_toneporta.return_skip
           $0d88 = fx_toneporta.do_toneporta
           $0d9d = fx_toneporta.high_byte_same
           $0da3 = fx_toneporta.add
           $0db5 = fx_toneporta.subtract
           $0dcb = fx_toneporta.set_exact
           $0dcd = fx_toneporta.done
           $0de0 = _setup_instrument_pointer_ch4
           $0deb = _setup_instrument_pointer
           $0df2 = _setup_instrument_pointer.finish
           $0dfb = _hUGE_dosound_banked
           $0dfb = _hUGE_dosound
           $0e3a = _hUGE_dosound.write_mask1
           $0e3d = _hUGE_dosound.do_setvol1
           $0e50 = _hUGE_dosound.after_note1
           $0e85 = _hUGE_dosound.write_mask2
           $0e88 = _hUGE_dosound.do_setvol2
           $0e9b = _hUGE_dosound.after_note2
           $0f22 = _hUGE_dosound.no_wave_copy
           $0f23 = _hUGE_dosound.write_mask3
           $0f26 = _hUGE_dosound.do_setvol3
           $0f31 = _hUGE_dosound.after_note3
           $0f82 = _hUGE_dosound.write_mask4
           $0f85 = _hUGE_dosound.do_setvol4
           $0f90 = _hUGE_dosound.after_note4
           $0f93 = _hUGE_dosound.process_effects
           $0faf = _hUGE_dosound.after_effect1
           $0fcb = _hUGE_dosound.after_effect2
           $0fe7 = _hUGE_dosound.after_effect3
           $1032 = _hUGE_dosound.done_macro
           $103b = process_tick
           $103b = _hUGE_dosound.after_effect4
           $104d = _newrow
           $1065 = _newrow.no_break
           $1070 = _neworder
           $107d = _update_current_order
           $1084 = _noreset
           $1089 = note_table
  SECTION: $1119-$159a ($0482 bytes) ["player"]
           $1119 = InitializePlayer
           $116c = UpdateBalloonPosition
           $116c = UpdateBalloonPosition.balloonLeft
           $1179 = UpdateBalloonPosition.balloonRight
           $1184 = UpdateCactusPosition
           $1184 = UpdateCactusPosition.cactusLeft
           $1191 = UpdateCactusPosition.cactusRight
           $119c = SpawnPlayer
           $119c = SpawnPlayer.cactusLeft
           $11ac = SpawnPlayer.cactusRight
           $11bc = SpawnPlayer.balloonLeft
           $11cc = SpawnPlayer.balloonRight
           $11dd = ClearPlayerCactus
           $11ea = ClearPlayerBalloon
           $11f7 = RespawnPlayer
           $120a = MoveRight
           $121a = MoveRight.canCactusDriftLeft
           $122c = MoveRight.cactusDriftLeft
           $122e = MoveLeft
           $1242 = MoveLeft.canCactusDriftRight
           $1253 = MoveLeft.cactusDriftRight
           $1255 = MoveDown
           $1265 = MoveDown.canCactusDriftUp
           $1277 = MoveDown.cactusDriftUp
           $1279 = ChargeBoost
           $127f = ChargeBoost.isCharging
           $1286 = ChargeBoost.resetBoost
           $128c = ChargeAttack
           $1292 = ChargeAttack.isCharging
           $1297 = SpawnBullet
           $12b1 = SpawnBullet.spawnFromLeft
           $12b9 = SpawnBullet.leftOAM
           $12c7 = SpawnBullet.spawnFromRight
           $12cf = SpawnBullet.rightOAM
           $12dd = ClearBullet
           $12e9 = BulletUpdate
           $12ef = BulletUpdate.isAlive
           $12fa = BulletUpdate.offScreen
           $12fe = BulletUpdate.onScreen
           $1304 = BulletUpdate.move
           $130e = BulletUpdate.moveLeft
           $1312 = BulletUpdate.moveRight
           $1314 = BulletUpdate.endMove
           $131c = PlayerControls
           $131c = PlayerControls.right
           $132f = PlayerControls.moveRight
           $1337 = PlayerControls.endRight
           $1337 = PlayerControls.left
           $134a = PlayerControls.moveLeft
           $1351 = PlayerControls.endLeft
           $1351 = PlayerControls.up
           $1364 = PlayerControls.moveUp
           $1378 = PlayerControls.endUp
           $1378 = PlayerControls.down
           $138e = PlayerControls.endDown
           $138e = PlayerControls.canCactusDriftCenterX
           $13ac = PlayerControls.driftCenterXRight
           $13af = PlayerControls.driftCenterXLeft
           $13b0 = PlayerControls.endDriftToCenterX
           $13b0 = PlayerControls.canCactusDriftCenterY
           $13d1 = PlayerControls.driftCenterYUp
           $13d4 = PlayerControls.driftCenterYDown
           $13d5 = PlayerControls.endDriftToCenterY
           $13d5 = PlayerControls.start
           $13e0 = PlayerControls.endStart
           $13e0 = PlayerControls.AButton
           $13ed = PlayerControls.activateAttack
           $13f5 = PlayerControls.endA
           $13f5 = PlayerControls.BButton
           $1402 = PlayerControls.activateBoost
           $140c = PlayerControls.endB
           $140d = MovePlayer
           $1422 = MovePlayerAutoFlyUp
           $143b = FallCactusDown
           $1450 = FallCactusDown.skipAcceleration
           $1459 = PopBalloonAnimation
           $146a = PopBalloonAnimation.canSwitchFrames
           $1476 = PopBalloonAnimation.frame0
           $1488 = PopBalloonAnimation.frame1
           $149a = PopBalloonAnimation.clear
           $14aa = PopBalloonAnimation.endFrame
           $14b2 = CactusFalling
           $14cc = CactusFalling.offScreen
           $14d4 = CactusFalling.end
           $14d5 = NoMoreLives
           $14df = PlayerUpdate
           $14e6 = PlayerUpdate.isAlive
           $1502 = PlayerUpdate.popped
           $150d = PlayerUpdate.popping
           $1515 = PlayerUpdate.falling
           $151e = PlayerUpdate.respawning
           $1525 = PlayerUpdate.noMoreLives
           $1529 = PlayerUpdate.respawn
           $152d = DeathOfPlayer
           $1551 = InvincibleBlink
           $1557 = InvincibleBlink.isStillInvincible
           $1566 = InvincibleBlink.blinkNormal
           $156d = InvincibleBlink.blinkFast
           $1571 = InvincibleBlink.blinkEnd
           $1586 = InvincibleBlink.defaultPalette
  SECTION: $159b-$183e ($02a4 bytes) ["graphics"]
           $159b = AddBGTiles8800Method
           $15a5 = AddBGTiles8800Method.tilesFitBlock
           $15aa = AddBGTiles8800Method.tilesExceedBlock
           $15c4 = AddBGTiles8800Method.end
           $15c7 = LoadPlayerTiles
           $15d4 = LoadWindow
           $15d4 = LoadWindow.loadTiles
           $15e0 = LoadWindow.loadMap
           $15ef = LoadEnemyTiles
           $1614 = LoadParkGraphics
           $163c = LoadGameGraphics
           $163c = LoadGameGraphics.level1
           $1658 = LoadGameGraphics.level2
           $1659 = LoadGameGraphics.level3
           $165a = LoadMenuOpeningGraphics
           $1670 = LoadMenuGraphics
           $1689 = RefreshScore
           $16c3 = RefreshLives
           $16cc = RefreshBoostBar
           $16d6 = RefreshBoostBar.isCharging
           $16e2 = RefreshBoostBar.isEmpty
           $16e8 = RefreshBoostBar.is25Percent
           $16ef = RefreshBoostBar.is50Percent
           $16f6 = RefreshBoostBar.is75Percent
           $16fd = RefreshBoostBar.isReady
           $1703 = RefreshAttackBar
           $170d = RefreshAttackBar.isCharging
           $1719 = RefreshAttackBar.isEmpty
           $171f = RefreshAttackBar.is25Percent
           $1726 = RefreshAttackBar.is50Percent
           $172d = RefreshAttackBar.is75Percent
           $1734 = RefreshAttackBar.isReady
           $173a = RefreshWindow
           $174d = RefreshWindow.end
           $174e = ClearAllTiles
           $1757 = ClearAllTiles.loop_u4
           $1766 = ClearAllTiles.loop_u5
           $1775 = ClearAllTiles.loop_u6
           $1780 = ClearMap
           $1789 = ClearMap.loop_u7
           $1794 = ReplaceTilemapHorizontal
           $17bd = ReplaceTilemapHorizontal.handleZero
           $17bf = ReplaceTilemapHorizontal.handleZeroEnd
           $17cb = ReplaceTilemapHorizontal.loop
           $17e9 = ReplaceTilemapHorizontal.end
           $17ee = MoveToNextTilemap
           $1801 = MoveToNextTilemap.canUpdateTilemap
           $1814 = MoveToNextTilemap.clouds1
           $1829 = MoveToNextTilemap.clouds2
           $183c = MoveToNextTilemap.end
  SECTION: $183f-$1991 ($0153 bytes) ["level data"]
           $183f = Level1
           $189c = Level2
           $18b3 = Level3
           $18ba = InitializeNewLevel
           $18d5 = InitializeNewLevel.level1
           $18da = InitializeNewLevel.level2
           $18df = InitializeNewLevel.level3
           $18e4 = InitializeNewLevel.level4
           $18e5 = InitializeNewLevel.setLevelDataAddress
           $18ed = InitializeLevelVars
           $18f6 = LevelDataHandler
           $1919 = LevelDataHandler.pointBalloon
           $191d = LevelDataHandler.balloonCactus
           $1921 = LevelDataHandler.bird
           $1925 = LevelDataHandler.bomb
           $1929 = LevelDataHandler.porcupine
           $192d = LevelDataManager
           $195a = LevelDataManager.spawn
           $1967 = LevelDataManager.wait
           $1974 = LevelDataManager.waitEnd
           $1981 = LevelDataManager.end
  SECTION: $1992-$1a8b ($00fa bytes) ["rom"]
           $1992 = Start
           $19cc = MenuLoopOpening
           $19cc = StartMenu
           $19e4 = MenuLoop
           $19e4 = StartGame
           $1a1d = ParkLoop
           $1a2c = SetupNextLevel
           $1a6e = GameCountdownLoop
           $1a7d = GameLoop
  SECTION: $1a8c-$1b72 ($00e7 bytes) ["interrupts"]
           $1a8c = InitializeInterrupts
           $1aa2 = VBlankInterrupt
           $1ab2 = LCDInterrupt
           $1abc = LCDInterruptEnd
           $1ac0 = MenuLCDInterrupt
           $1ad0 = MenuLCDInterrupt.reset
           $1ad9 = MenuLCDInterrupt.far
           $1ae7 = MenuLCDInterrupt.close
           $1af3 = MenuLCDInterrupt.end
           $1af6 = SetMenuInterrupts
           $1b04 = ParkLCDInterrupt
           $1b10 = ParkLCDInterrupt.clouds
           $1b1e = ParkLCDInterrupt.ground
           $1b23 = ParkLCDInterrupt.end
           $1b26 = SetParkInterrupts
           $1b2a = GameLCDInterrupt
           $1b3a = GameLCDInterrupt.reset
           $1b48 = GameLCDInterrupt.far
           $1b56 = GameLCDInterrupt.close
           $1b62 = GameLCDInterrupt.end
           $1b65 = SetGameInterrupts
  SECTION: $1b73-$1bea ($0078 bytes) ["controller"]
           $1b73 = InitializeController
           $1b78 = ReadInput
           $1ba8 = JOY_RIGHT
           $1bb0 = JOY_LEFT
           $1bb8 = JOY_UP
           $1bc0 = JOY_DOWN
           $1bc8 = JOY_A
           $1bd0 = JOY_B
           $1bd8 = JOY_SELECT
           $1be0 = JOY_START
           $1be8 = JOY_FALSE
  SECTION: $1beb-$1c08 ($001e bytes) ["OAM DMA routine"]
           $1beb = CopyDMARoutine
           $1bf2 = CopyDMARoutine.copy
           $1bf9 = DMARoutine
           $1bfd = DMARoutine.wait
           $1c01 = DMARoutineEnd
           $1c01 = OAMDMA
    SLACK: $2422 bytes

ROMX bank #1:
  SECTION: $4000-$599f ($19a0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = OpeningCutsceneTiles
           $4720 = OpeningCutsceneTilesEnd
           $4720 = OpeningCutsceneSpriteTiles
           $4760 = Level1Tiles
           $4760 = OpeningCutsceneSpriteTilesEnd
           $4c40 = Level2Tiles
           $4c40 = Level1TilesEnd
           $4d10 = Level2TilesEnd
           $4d10 = CountdownTiles
           $4e10 = CountdownTilesEnd
           $4e10 = WindowTiles
           $5000 = WindowTilesEnd
           $5000 = MenuTiles
           $5020 = MenuTilesEnd
           $5020 = MenuTitleTiles
           $59a0 = MenuTitleTilesEnd
  SECTION: $59a0-$64dd ($0b3e bytes) ["Song Data2"]
           $59a0 = angryTheme
           $59b5 = order_cnt
           $59b6 = order1
           $59c0 = order2
           $59ca = order3
           $59d4 = order4
           $59de = P0
           $5a9e = P1
           $5b5e = P2
           $5c1e = P3
           $5cde = P4
           $5d9e = P5
           $5e5e = P6
           $5f1e = P7
           $5fde = P8
           $609e = P9
           $615e = P10
           $621e = P11
           $62de = duty_instruments
           $62de = itSquareinst1
           $62e2 = itSquareinst2
           $62e6 = itSquareinst3
           $62ea = itSquareinst4
           $62ee = itSquareinst5
           $62f2 = itSquareinst6
           $62f6 = itSquareinst7
           $62fa = itSquareinst8
           $62fe = itSquareinst9
           $6302 = itSquareinst10
           $6306 = itSquareinst11
           $630a = itSquareinst12
           $630e = itSquareinst13
           $6312 = itSquareinst14
           $6316 = itSquareinst15
           $631a = wave_instruments
           $631a = itWaveinst1
           $631e = itWaveinst2
           $6322 = itWaveinst3
           $6326 = itWaveinst4
           $632a = itWaveinst5
           $632e = itWaveinst6
           $6332 = itWaveinst7
           $6336 = itWaveinst8
           $633a = itWaveinst9
           $633e = itWaveinst10
           $6342 = itWaveinst11
           $6346 = itWaveinst12
           $634a = itWaveinst13
           $634e = itWaveinst14
           $6352 = itWaveinst15
           $6356 = noise_instruments
           $6356 = itNoiseinst1
           $635e = itNoiseinst2
           $6366 = itNoiseinst3
           $636e = itNoiseinst4
           $6376 = itNoiseinst5
           $637e = itNoiseinst6
           $6386 = itNoiseinst7
           $638e = itNoiseinst8
           $6396 = itNoiseinst9
           $639e = itNoiseinst10
           $63a6 = itNoiseinst11
           $63ae = itNoiseinst12
           $63b6 = itNoiseinst13
           $63be = itNoiseinst14
           $63c6 = itNoiseinst15
           $63ce = routines
           $63ce = __end_hUGE_Routine_0
           $63ce = __hUGE_Routine_0
           $63cf = __end_hUGE_Routine_1
           $63cf = __hUGE_Routine_1
           $63d0 = __end_hUGE_Routine_2
           $63d0 = __hUGE_Routine_2
           $63d1 = __end_hUGE_Routine_3
           $63d1 = __hUGE_Routine_3
           $63d2 = __end_hUGE_Routine_4
           $63d2 = __hUGE_Routine_4
           $63d3 = __end_hUGE_Routine_5
           $63d3 = __hUGE_Routine_5
           $63d4 = __end_hUGE_Routine_6
           $63d4 = __hUGE_Routine_6
           $63d5 = __end_hUGE_Routine_7
           $63d5 = __hUGE_Routine_7
           $63d6 = __hUGE_Routine_8
           $63d6 = __end_hUGE_Routine_8
           $63d7 = __hUGE_Routine_9
           $63d7 = __end_hUGE_Routine_9
           $63d8 = __hUGE_Routine_10
           $63d8 = __end_hUGE_Routine_10
           $63d9 = __hUGE_Routine_11
           $63d9 = __end_hUGE_Routine_11
           $63da = __hUGE_Routine_12
           $63da = __end_hUGE_Routine_12
           $63db = __hUGE_Routine_13
           $63db = __end_hUGE_Routine_13
           $63dc = __end_hUGE_Routine_14
           $63dc = __hUGE_Routine_14
           $63dd = __end_hUGE_Routine_15
           $63dd = __hUGE_Routine_15
           $63de = waves
           $63de = wave0
           $63ee = wave1
           $63fe = wave2
           $640e = wave3
           $641e = wave4
           $642e = wave5
           $643e = wave6
           $644e = wave7
           $645e = wave8
           $646e = wave9
           $647e = wave10
           $648e = wave11
           $649e = wave12
           $64ae = wave13
           $64be = wave14
           $64ce = wave15
  SECTION: $64de-$69fb ($051e bytes) ["Song Data"]
           $64de = menuTheme
           $64f3 = order_cnt
           $64f4 = order1
           $64f6 = order2
           $64f8 = order3
           $64fa = order4
           $64fc = P1
           $65bc = P2
           $667c = P3
           $673c = P6
           $67fc = duty_instruments
           $67fc = itSquareinst1
           $6800 = itSquareinst2
           $6804 = itSquareinst3
           $6808 = itSquareinst4
           $680c = itSquareinst5
           $6810 = itSquareinst6
           $6814 = itSquareinst7
           $6818 = itSquareinst8
           $681c = itSquareinst9
           $6820 = itSquareinst10
           $6824 = itSquareinst11
           $6828 = itSquareinst12
           $682c = itSquareinst13
           $6830 = itSquareinst14
           $6834 = itSquareinst15
           $6838 = wave_instruments
           $6838 = itWaveinst1
           $683c = itWaveinst2
           $6840 = itWaveinst3
           $6844 = itWaveinst4
           $6848 = itWaveinst5
           $684c = itWaveinst6
           $6850 = itWaveinst7
           $6854 = itWaveinst8
           $6858 = itWaveinst9
           $685c = itWaveinst10
           $6860 = itWaveinst11
           $6864 = itWaveinst12
           $6868 = itWaveinst13
           $686c = itWaveinst14
           $6870 = itWaveinst15
           $6874 = noise_instruments
           $6874 = itNoiseinst1
           $687c = itNoiseinst2
           $6884 = itNoiseinst3
           $688c = itNoiseinst4
           $6894 = itNoiseinst5
           $689c = itNoiseinst6
           $68a4 = itNoiseinst7
           $68ac = itNoiseinst8
           $68b4 = itNoiseinst9
           $68bc = itNoiseinst10
           $68c4 = itNoiseinst11
           $68cc = itNoiseinst12
           $68d4 = itNoiseinst13
           $68dc = itNoiseinst14
           $68e4 = itNoiseinst15
           $68ec = routines
           $68ec = __end_hUGE_Routine_0
           $68ec = __hUGE_Routine_0
           $68ed = __end_hUGE_Routine_1
           $68ed = __hUGE_Routine_1
           $68ee = __end_hUGE_Routine_2
           $68ee = __hUGE_Routine_2
           $68ef = __end_hUGE_Routine_3
           $68ef = __hUGE_Routine_3
           $68f0 = __end_hUGE_Routine_4
           $68f0 = __hUGE_Routine_4
           $68f1 = __end_hUGE_Routine_5
           $68f1 = __hUGE_Routine_5
           $68f2 = __end_hUGE_Routine_6
           $68f2 = __hUGE_Routine_6
           $68f3 = __end_hUGE_Routine_7
           $68f3 = __hUGE_Routine_7
           $68f4 = __hUGE_Routine_8
           $68f4 = __end_hUGE_Routine_8
           $68f5 = __hUGE_Routine_9
           $68f5 = __end_hUGE_Routine_9
           $68f6 = __hUGE_Routine_10
           $68f6 = __end_hUGE_Routine_10
           $68f7 = __hUGE_Routine_11
           $68f7 = __end_hUGE_Routine_11
           $68f8 = __hUGE_Routine_12
           $68f8 = __end_hUGE_Routine_12
           $68f9 = __hUGE_Routine_13
           $68f9 = __end_hUGE_Routine_13
           $68fa = __end_hUGE_Routine_14
           $68fa = __hUGE_Routine_14
           $68fb = __end_hUGE_Routine_15
           $68fb = __hUGE_Routine_15
           $68fc = waves
           $68fc = wave0
           $690c = wave1
           $691c = wave2
           $692c = wave3
           $693c = wave4
           $694c = wave5
           $695c = wave6
           $696c = wave7
           $697c = wave8
           $698c = wave9
           $699c = wave10
           $69ac = wave11
           $69bc = wave12
           $69cc = wave13
           $69dc = wave14
           $69ec = wave15
  SECTION: $69fc-$6dfe ($0403 bytes) ["balloon cactus"]
           $69fc = InitializeBalloonCactus
           $6a05 = InitializeBalloonCactus.loop_u1
           $6a10 = SetStruct
           $6a4d = SpawnBalloonCactus
           $6a60 = SpawnBalloonCactus.availableSpace
           $6a69 = SpawnBalloonCactus.availableOAMSpace
           $6a97 = SpawnBalloonCactus.isLeftside
           $6a97 = SpawnBalloonCactus.balloonLeft
           $6ab0 = SpawnBalloonCactus.balloonRight
           $6ac0 = SpawnBalloonCactus.cactusLeft
           $6ace = SpawnBalloonCactus.cactusRight
           $6ade = SpawnBalloonCactus.setStruct
           $6ae3 = SpawnBalloonCactus.end
           $6ae8 = ClearCactus
           $6afe = ClearBalloon
           $6b14 = Clear
           $6b1e = PopBalloonAnimation
           $6b2f = PopBalloonAnimation.canSwitchFrames
           $6b3d = PopBalloonAnimation.frame0
           $6b61 = PopBalloonAnimation.frame1
           $6b85 = PopBalloonAnimation.clear
           $6ba6 = PopBalloonAnimation.endFrame
           $6bad = PopBalloonAnimation.end
           $6bae = CactusFallingCollision
           $6baf = CactusFallingCollision.checkBird
           $6bb6 = CactusFallingCollision.birdLoop
           $6bc7 = CactusFallingCollision.isAlive
           $6bf7 = CactusFallingCollision.hitBird
           $6c05 = CactusFallingCollision.checkBirdLoop
           $6c12 = CactusFallingCollision.end
           $6c14 = CactusFalling
           $6c26 = CactusFalling.falling
           $6c3f = CactusFalling.skipAcceleration
           $6c4b = CactusFalling.offScreen
           $6c4f = UpdateBalloonPosition
           $6c4f = UpdateBalloonPosition.balloonLeft
           $6c65 = UpdateBalloonPosition.balloonRight
           $6c70 = UpdateCactusPosition
           $6c70 = UpdateCactusPosition.cactusLeft
           $6c86 = UpdateCactusPosition.cactusRight
           $6c91 = Move
           $6cac = Move.isLeftside
           $6cba = Move.updatePosition
           $6cc1 = DeathOfBalloonCactus
           $6cf2 = CollisionBalloonCactus
           $6cf2 = CollisionBalloonCactus.checkHit
           $6d0d = CollisionBalloonCactus.checkHitByBullet
           $6d2d = CollisionBalloonCactus.checkHitPlayer
           $6d4d = BalloonCactusUpdate
           $6d54 = BalloonCactusUpdate.loop
           $6dab = BalloonCactusUpdate.isAlive
           $6dc8 = BalloonCactusUpdate.offScreen
           $6dcd = BalloonCactusUpdate.popped
           $6dd7 = BalloonCactusUpdate.notPopping
           $6de1 = BalloonCactusUpdate.checkLoop
           $6df0 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6dff-$717a ($037c bytes) ["bird"]
           $6dff = InitializeBird
           $6e08 = InitializeBird.loop_u1
           $6e13 = SetStruct
           $6e38 = SpawnBird
           $6e4b = SpawnBird.availableSpace
           $6e55 = SpawnBird.availableOAMSpace
           $6e72 = SpawnBird.isRightside
           $6e77 = SpawnBird.birdLeft
           $6e90 = SpawnBird.birdMiddle
           $6ea0 = SpawnBird.birdRight
           $6eb2 = SpawnBird.isLeftside
           $6eb2 = SpawnBird.leftBirdLeft
           $6ecb = SpawnBird.leftBirdMiddle
           $6edb = SpawnBird.leftBirdRight
           $6eeb = SpawnBird.setStruct
           $6ef0 = SpawnBird.end
           $6ef5 = BirdRightsideFlap
           $6efc = BirdRightsideFlap.soaring
           $6f24 = BirdRightsideFlap.flapping
           $6f55 = BirdLeftsideFlap
           $6f5c = BirdLeftsideFlap.soaring
           $6f84 = BirdLeftsideFlap.flapping
           $6fb5 = Clear
           $6fd2 = UpdateBirdPosition
           $6fd2 = UpdateBirdPosition.birdLeft
           $6fe8 = UpdateBirdPosition.birdMiddle
           $6ff4 = UpdateBirdPosition.birdRight
           $6fff = Move
           $7006 = Move.isRightside
           $7014 = Move.isLeftside
           $701e = Move.moveDown
           $702c = Move.moveEnd
           $7030 = BirdFall
           $703b = BirdFall.checkOffscreenY
           $704d = BirdFall.end
           $704f = DeathOfBird
           $7067 = DeathOfBird.facingLeft
           $7092 = DeathOfBird.facingRight
           $70bd = CollisionBird
           $70bd = CollisionBird.checkHitPlayer
           $70dd = BirdUpdate
           $70e4 = BirdUpdate.loop
           $7122 = BirdUpdate.isAlive
           $7147 = BirdUpdate.offScreen
           $714c = BirdUpdate.isDead
           $715d = BirdUpdate.checkLoop
  SECTION: $717b-$743b ($02c1 bytes) ["bomb"]
           $717b = InitializeBomb
           $7184 = InitializeBomb.loop_u1
           $718f = SetStruct
           $71b0 = SpawnBomb
           $71c2 = SpawnBomb.availableSpace
           $71cb = SpawnBomb.availableOAMSpace
           $71e1 = SpawnBomb.balloonLeft
           $71fb = SpawnBomb.balloonRight
           $720c = SpawnBomb.bombSpace
           $7217 = SpawnBomb.setStruct
           $721c = SpawnBomb.end
           $7221 = Clear
           $723e = Move
           $7246 = Move.balloonLeft
           $725c = Move.balloonRight
           $7268 = Move.bombSpace
           $7273 = DeathOfBomb
           $727d = CollisionBomb
           $727d = CollisionBomb.checkHit
           $729b = CollisionBomb.checkHitByBullet
           $72bb = CollisionBomb.end
           $72bc = ExplosionAnimation
           $72cd = ExplosionAnimation.canSwitchFrames
           $72e5 = ExplosionAnimation.frame0
           $730a = ExplosionAnimation.frame1
           $734d = ExplosionAnimation.frame2
           $7379 = ExplosionAnimation.frame3
           $73a5 = ExplosionAnimation.clear
           $73a9 = ExplosionAnimation.endFrame
           $73b0 = ExplosionAnimation.end
           $73b1 = BombUpdate
           $73b8 = BombUpdate.loop
           $73f2 = BombUpdate.isAlive
           $740f = BombUpdate.offScreen
           $7414 = BombUpdate.popped
           $741e = BombUpdate.checkLoop
  SECTION: $743c-$76b9 ($027e bytes) ["game"]
           $743c = InitializeGame
           $7444 = UpdatePark.fadeIn
           $7444 = UpdatePark
           $744a = UpdatePark.hasFadedIn
           $7463 = UpdatePark.fadeOut
           $746b = UpdatePark.skipFade
           $746e = UpdatePark.moveUp
           $7477 = UpdatePark.flyUpNormal
           $747d = UpdatePark.flyUpFast
           $7481 = TryToUnpause
           $7498 = TryToUnpause.end
           $7499 = SpawnHandWave
           $74bd = SpawnHandWave.end
           $74be = HandWaveAnimation
           $74c5 = HandWaveAnimation.frame0
           $74e1 = HandWaveAnimation.frame1
           $74fc = HandWaveAnimation.end
           $74fd = SpawnCountdown
           $7528 = SpawnCountdown.end
           $7529 = Countdown
           $7530 = Countdown.hasCountedDown
           $7533 = Countdown.countdown
           $7544 = Countdown.balloonPop
           $754c = Countdown.frames
           $7575 = Countdown.frame0
           $7597 = Countdown.frame1
           $75b9 = Countdown.frame2
           $75da = Countdown.frame3
           $75fb = Countdown.frame4
           $761c = Countdown.frame5
           $763a = Countdown.remove
           $764f = Countdown.endFrame
           $7656 = Countdown.end
           $7658 = IncrementScrollOffset
           $7658 = IncrementScrollOffset.close
           $7666 = IncrementScrollOffset.far
           $7674 = IncrementScrollOffset.end
           $7675 = UpdateSprites
           $768b = UpdateGameCountdown
           $76a0 = UpdateGame
           $76b9 = UpdateGame.end
  SECTION: $76ba-$78dd ($0224 bytes) ["point balloon"]
           $76ba = InitializePointBalloon
           $76c3 = InitializePointBalloon.loop_u1
           $76ce = SetStruct
           $76ef = SpawnPointBalloon
           $7701 = SpawnPointBalloon.availableSpace
           $770a = SpawnPointBalloon.availableOAMSpace
           $7720 = SpawnPointBalloon.balloonLeft
           $7739 = SpawnPointBalloon.balloonRight
           $7749 = SpawnPointBalloon.setStruct
           $774e = SpawnPointBalloon.end
           $7753 = PopBalloonAnimation
           $7764 = PopBalloonAnimation.canSwitchFrames
           $7770 = PopBalloonAnimation.frame0
           $7794 = PopBalloonAnimation.frame1
           $77b8 = PopBalloonAnimation.clear
           $77bc = PopBalloonAnimation.endFrame
           $77c4 = Clear
           $77dd = Move
           $77e4 = Move.balloonLeft
           $77fa = Move.balloonRight
           $7805 = DeathOfPointBalloon
           $7817 = CollisionPointBalloon
           $7817 = CollisionPointBalloon.checkHit
           $7832 = CollisionPointBalloon.checkHitByBullet
           $7852 = CollisionPointBalloon.end
           $7853 = PointBalloonUpdate
           $785a = PointBalloonUpdate.loop
           $7894 = PointBalloonUpdate.isAlive
           $78b1 = PointBalloonUpdate.offScreen
           $78b6 = PointBalloonUpdate.popped
           $78c0 = PointBalloonUpdate.checkLoop
           $78cf = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $78de-$7a26 ($0149 bytes) ["porcupine"]
           $78de = InitializePorcupine
           $78e7 = InitializePorcupine.loop_u1
           $78f2 = SetStruct
           $7907 = SpawnPorcupine
           $791a = SpawnPorcupine.availableSpace
           $7924 = SpawnPorcupine.availableOAMSpace
           $793a = SpawnPorcupine.topLeft
           $7953 = SpawnPorcupine.topMiddle
           $7963 = SpawnPorcupine.topMiddle2
           $7973 = SpawnPorcupine.topRight
           $7983 = SpawnPorcupine.bottomLeft
           $7993 = SpawnPorcupine.bottomMiddle
           $79a5 = SpawnPorcupine.bottomMiddle2
           $79b7 = SpawnPorcupine.bottomRight
           $79c9 = SpawnPorcupine.setStruct
           $79ce = SpawnPorcupine.end
           $79d3 = PorcupineUpdate
           $79da = PorcupineUpdate.loop
           $7a08 = PorcupineUpdate.offScreen
           $7a08 = PorcupineUpdate.isAlive
           $7a0a = PorcupineUpdate.isDead
           $7a0a = PorcupineUpdate.checkLoop
           $7a19 = PorcupineUpdate.checkLoopSkipSet
  SECTION: $7a27-$7b1e ($00f8 bytes) ["menu"]
           $7a27 = InitializeMenu
           $7a33 = SpawnMenuCursor
           $7a3c = SpawnMenuCursor.availableSpace
           $7a57 = SpawnMenuCursor.end
           $7a58 = BlinkMenuCursor
           $7a60 = BlinkMenuCursor.blink
           $7a71 = BlinkMenuCursor.show
           $7a75 = BlinkMenuCursor.empty
           $7a79 = MoveCursor
           $7a7a = SelectMode
           $7a83 = MenuInput
           $7a8d = MenuInput.moveSelected
           $7a96 = MenuInput.selectMode
           $7a9f = MenuInput.end
           $7aa0 = UpdateMenuOpening
           $7abc = UpdateMenuOpening.startSound
           $7ac1 = UpdateMenuOpening.scrollUpTitle
           $7acd = UpdateMenuOpening.endSound
           $7ad2 = UpdateMenuOpening.scrollDownTitle
           $7ade = UpdateMenuOpening.scrollUpTitle2
           $7aea = UpdateMenuOpening.fadeOut
           $7af0 = UpdateMenuOpening.next
           $7af4 = UpdateMenuOpening.endFrame
           $7afb = UpdateMenuOpening.end
           $7afc = UpdateMenu
           $7afc = UpdateMenu.fadeIn
           $7b02 = UpdateMenu.hasFadedIn
           $7b16 = UpdateMenu.fadeOut
  SECTION: $7b1f-$7bec ($00ce bytes) ["palettes"]
           $7b1f = ResetFading
           $7b2d = InitializePalettes
           $7b3f = FadeOutPalettes
           $7b46 = FadeOutPalettes.hasFadedIn
           $7b49 = FadeOutPalettes.fadeOut
           $7b69 = FadeOutPalettes.fade1
           $7b71 = FadeOutPalettes.fade2
           $7b79 = FadeOutPalettes.fade3
           $7b81 = FadeOutPalettes.fade4
           $7b87 = FadeOutPalettes.fadePalettes
           $7b8d = FadeOutPalettes.increaseFrame
           $7b94 = FadeOutPalettes.end
           $7b96 = FadeInPalettes
           $7b9d = FadeInPalettes.hasFadedIn
           $7ba0 = FadeInPalettes.fadeIn
           $7bc0 = FadeInPalettes.fade1
           $7bc8 = FadeInPalettes.fade2
           $7bd0 = FadeInPalettes.fade3
           $7bd8 = FadeInPalettes.fade4
           $7bde = FadeInPalettes.fadePalettes
           $7be4 = FadeInPalettes.increaseFrame
           $7beb = FadeInPalettes.end
  SECTION: $7bed-$7ca6 ($00ba bytes) ["sound"]
           $7bed = AUDIO_OFF
           $7bf1 = AUDIO_ON
           $7bf6 = PopSound
           $7c09 = ExplosionSound
           $7c16 = WaveSound
           $7c23 = FallingSound
           $7c38 = RisingSound
           $7c4d = StopSweepSound
           $7c52 = CollectSound
           $7c67 = WrongAnswerSound
           $7c7e = PercussionSound
           $7c8b = BassSound
           $7c9c = ClearSound
  SECTION: $7ca7-$7d5c ($00b6 bytes) ["memory"]
           $7ca7 = MEMCPY
           $7ca7 = MEMCPY.loop
           $7cab = MEMCPY.checkLoop
           $7cb0 = MEMCPY_WITH_OFFSET
           $7cb1 = MEMCPY_WITH_OFFSET.loop
           $7cbc = MEMCPY_WITH_OFFSET.checkLoop
           $7cc2 = MEMCPY_SINGLE_SCREEN
           $7cc6 = MEMCPY_SINGLE_SCREEN.loop
           $7cda = MEMCPY_SINGLE_SCREEN.checkLoop
           $7ce0 = ClearOAM
           $7ce7 = ClearOAM.loop_u2
           $7cf0 = ClearRAM
           $7cf7 = ClearRAM.loop_u3
           $7d00 = RequestOAMSpace
           $7d09 = RequestOAMSpace.loop
           $7d20 = RequestOAMSpace.availableSpace
           $7d25 = RequestOAMSpace.sufficientSpace
           $7d35 = RequestOAMSpace.isNotZero4
           $7d36 = RequestOAMSpace.isNotZero3
           $7d37 = RequestOAMSpace.isNotZero2
           $7d38 = RequestOAMSpace.isNotZero1
           $7d3a = RequestOAMSpace.notEnoughSprites
           $7d42 = RequestOAMSpace.end
           $7d45 = RequestRAMSpace
           $7d45 = RequestRAMSpace.loop
           $7d4a = RequestRAMSpace.availableSpace
           $7d4e = RequestRAMSpace.checkLoop
           $7d5b = RequestRAMSpace.noFreeSpace
           $7d5c = RequestRAMSpace.end
  SECTION: $7d5d-$7d96 ($003a bytes) ["math"]
           $7d5d = MODULO
           $7d5f = MODULO.loop
           $7d64 = DIVISION
           $7d6a = DIVISION.loop
           $7d6f = DIVISION.end
           $7d72 = ToBCD
           $7d88 = MULTIPLY
           $7d8a = MULTIPLY.loop
           $7d95 = MULTIPLY.end
  SECTION: $7d97-$7dc8 ($0032 bytes) ["lcd"]
           $7d97 = LCD_OFF
           $7d9e = LCD_ON
           $7da5 = LCD_ON_NO_WINDOW
           $7dac = WaitVBlank
           $7db3 = WaitVBlank.loop
           $7dbe = SetupWindow
  SECTION: $7dc9-$7ded ($0025 bytes) ["score"]
           $7dc9 = InitializeScore
           $7dd1 = AddPoints
           $7dda = AddPoints.isAlive
           $7de1 = AddPoints.carry
           $7deb = AddPoints.end
  SECTION: $7dee-$7e08 ($001b bytes) ["general initialization"]
           $7dee = InitializeGeneralVars
  SECTION: $7e09-$7e10 ($0008 bytes) ["timer"]
           $7e09 = UpdateGlobalTimer
    SLACK: $01ef bytes

WRAM0 bank #0:
  SECTION: $c000-$c009 ($000a bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wParallaxClose
           $c003 = wParallaxFar
           $c004 = wUpdateTilemapAddress
           $c006 = wUpdateTilemapOffset
           $c007 = wUpdateTilemapIndex
           $c008 = wHasUpdatedNextTilemapAddress
           $c009 = wLastUpdatedSCX
  SECTION: $c00a-$c04f ($0046 bytes) ["Playback variables"]
           $c00a = _start_vars
           $c00a = order_cnt
           $c00b = order1
           $c00b = _start_song_descriptor_pointers
           $c00d = order2
           $c00f = order3
           $c011 = order4
           $c013 = duty_instruments
           $c015 = wave_instruments
           $c017 = noise_instruments
           $c019 = routines
           $c01b = waves
           $c01d = mute_channels
           $c01d = _end_song_descriptor_pointers
           $c01e = pattern1
           $c020 = pattern2
           $c022 = pattern3
           $c024 = pattern4
           $c026 = ticks_per_row
           $c027 = current_order
           $c028 = next_order
           $c029 = row_break
           $c02a = temp_note_value
           $c02c = row
           $c02d = tick
           $c02e = counter
           $c02f = current_wave
           $c02f = _hUGE_current_wave
           $c030 = channel_period1
           $c030 = channels
           $c030 = channel1
           $c032 = toneporta_target1
           $c034 = channel_note1
           $c035 = vibrato_tremolo_phase1
           $c036 = envelope1
           $c037 = highmask1
           $c038 = channel_period2
           $c038 = channel2
           $c03a = toneporta_target2
           $c03c = channel_note2
           $c03d = vibrato_tremolo_phase2
           $c03e = envelope2
           $c03f = highmask2
           $c040 = channel_period3
           $c040 = channel3
           $c042 = toneporta_target3
           $c044 = channel_note3
           $c045 = vibrato_tremolo_phase3
           $c046 = envelope3
           $c047 = highmask3
           $c048 = channel_period4
           $c048 = channel4
           $c04a = toneporta_target4
           $c04c = channel_note4
           $c04d = vibrato_tremolo_phase4
           $c04e = envelope4
           $c04f = highmask4
           $c050 = _end_vars
  SECTION: $c050-$c06f ($0020 bytes) ["point balloon vars"]
           $c050 = pointBalloon
  SECTION: $c070-$c08d ($001e bytes) ["balloon cactus vars"]
           $c070 = balloonCactus
  SECTION: $c08e-$c0a4 ($0017 bytes) ["player vars"]
           $c08e = wPlayerY
           $c08f = wPlayerX
           $c090 = wPlayerY2
           $c091 = wPlayerX2
           $c092 = wPlayerAlive
           $c093 = wPlayerPopping
           $c094 = wPlayerPoppingFrame
           $c095 = wPlayerPoppingTimer
           $c096 = wPlayerFalling
           $c097 = wPlayerFallSpeed
           $c098 = wPlayerFallingTimer
           $c099 = wPlayerDelayFallingTimer
           $c09a = wPlayerRespawnTimer
           $c09b = wPlayerSpeed
           $c09c = wPlayerLives
           $c09d = wPlayerRight
           $c09e = wPlayerBulletY
           $c09f = wPlayerBulletX
           $c0a0 = wPlayerBulletAlive
           $c0a1 = wPlayerBulletRight
           $c0a2 = wPlayerInvincible
           $c0a3 = wPlayerBoost
           $c0a4 = wPlayerAttack
  SECTION: $c0a5-$c0b6 ($0012 bytes) ["bird vars"]
           $c0a5 = bird
  SECTION: $c0b7-$c0c8 ($0012 bytes) ["enemy struct vars"]
           $c0b7 = wEnemyOffset
           $c0b8 = wEnemyOffset2
           $c0b9 = wEnemyY
           $c0ba = wEnemyX
           $c0bb = wEnemyActive
           $c0bc = wEnemyOAM
           $c0bd = wEnemyAlive
           $c0be = wEnemyPopping
           $c0bf = wEnemyPoppingFrame
           $c0c0 = wEnemyPoppingTimer
           $c0c1 = wEnemyRightside
           $c0c2 = wEnemyY2
           $c0c3 = wEnemyX2
           $c0c4 = wEnemyFalling
           $c0c5 = wEnemyFallingSpeed
           $c0c6 = wEnemyFallingTimer
           $c0c7 = wEnemyDelayFallingTimer
           $c0c8 = wEnemyToDie
  SECTION: $c0c9-$c0d8 ($0010 bytes) ["bomb vars"]
           $c0c9 = bomb
  SECTION: $c0d9-$c0dd ($0005 bytes) ["porcupine vars"]
           $c0d9 = porcupine
  SECTION: $c0de-$c0e2 ($0005 bytes) ["level vars"]
           $c0de = wLevel
           $c0df = wLevelPointer
           $c0e0 = wLevelPointerWaitCounter
           $c0e1 = wLevelDataAddress
  SECTION: $c0e3-$c0e6 ($0004 bytes) ["palettes vars"]
           $c0e3 = wFadeInFrame
           $c0e4 = wFadeOutFrame
           $c0e5 = wTriggerFadeIn
           $c0e6 = wTriggerFadeOut
  SECTION: $c0e7-$c0e9 ($0003 bytes) ["controller vars"]
           $c0e7 = wControllerDown
           $c0e8 = wControllerPressed
           $c0e9 = wPaused
  SECTION: $c0ea-$c0ec ($0003 bytes) ["score vars"]
           $c0ea = wScore
  SECTION: $c0ed-$c0ef ($0003 bytes) ["interrupts vars"]
           $c0ed = wVBlankFlag
           $c0ee = wLCDInterrupt
  SECTION: $c0f0-$c0f1 ($0002 bytes) ["menu vars"]
           $c0f0 = wMenuFrame
           $c0f1 = wSelectedMode
  SECTION: $c0f2-$c0f3 ($0002 bytes) ["game vars"]
           $c0f2 = wHandWavingFrame
           $c0f3 = wCountdownFrame
  SECTION: $c0f4-$c0f4 ($0001 byte) ["timer vars"]
           $c0f4 = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e6b bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1bde bytes in 1 bank
    ROMX: $3e11 bytes in 1 bank
    WRAM0: $0195 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
