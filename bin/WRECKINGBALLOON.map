ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$09ef ($08a0 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level3Map
           $0820 = Level3MapEnd
           $0820 = Level2MapEnd
           $0988 = WindowMap
           $0988 = MenuMapEnd
           $09b0 = WindowMapEnd
           $09b0 = CloudsMap
           $09f0 = CloudsMapEnd
  SECTION: $09f0-$11af ($07c0 bytes) ["tilesets"]
           $09f0 = PlayerSpriteTiles
           $0af0 = EnemyTiles
           $0af0 = PlayerSpriteTilesEnd
           $0cb0 = Level1Tiles
           $0cb0 = EnemyTilesEnd
           $1130 = CloudsTiles
           $1130 = Level1TilesEnd
           $11b0 = CloudsTilesEnd
  SECTION: $11b0-$1950 ($07a1 bytes) ["Sound Driver"]
           $11b0 = _hUGE_init_banked
           $11b4 = _hUGE_init
           $11b6 = continue_init
           $11bf = _hUGE_mute_channel_banked
           $11c3 = _hUGE_mute_channel
           $11c5 = continue_mute
           $11d0 = hUGE_mute_channel
           $11d6 = hUGE_mute_channel.enable_loop
           $11dd = hUGE_mute_channel.enable_cut
           $11ea = _hUGE_set_position_banked
           $11ee = _hUGE_set_position
           $11f0 = continue_set_position
           $11f7 = hUGE_init
           $11fe = hUGE_init.fill_loop
           $1222 = hUGE_init.copy_song_descriptor_loop
           $122c = _refresh_patterns
           $1246 = _refresh_patterns.load_pattern
           $1256 = _load_note_data
           $1268 = _lookup_note
           $1272 = _convert_note
           $1280 = _convert_ch4_note
           $1297 = _update_channel
           $12a1 = _update_channel1
           $12af = _update_channel2
           $12bd = _update_channel3
           $12cb = _update_channel4
           $12db = _playnote1
           $12f6 = _playnote2
           $1311 = _playnote3
           $1332 = _playnote4
           $1346 = _doeffect
           $135b = _doeffect.jump
           $138b = setup_channel_pointer
           $1399 = fx_set_master_volume
           $139e = fx_call_routine
           $13c0 = fx_call_routine.call_hl
           $13c1 = fx_set_pan
           $13c6 = fx_set_duty
           $13cb = fx_set_duty.chan2
           $13d5 = fx_set_duty.chan1
           $13df = fx_vol_slide
           $13e6 = fx_vol_slide.loop
           $13eb = fx_vol_slide.cont
           $141d = fx_vol_slide.cont1
           $1424 = fx_vol_slide.cont2
           $1438 = _envelope_registers
           $1440 = fx_note_delay
           $1459 = fx_note_delay.play_note
           $1477 = _play_note_routines
           $1483 = fx_set_speed
           $1489 = hUGE_set_position
           $1489 = fx_pos_jump
           $1493 = fx_pattern_break
           $1498 = fx_note_cut
           $14a0 = fx_note_cut.loop
           $14a5 = fx_note_cut.cont
           $14aa = note_cut
           $14c1 = fx_set_volume
           $14c2 = set_channel_volume
           $14cd = set_chn_3_vol
           $14df = set_chn_3_vol.three
           $14e3 = set_chn_3_vol.two
           $14e7 = set_chn_3_vol.one
           $14eb = set_chn_3_vol.zero
           $14ec = set_chn_3_vol.done
           $14ef = set_chn_2_vol
           $14ff = set_chn_1_vol
           $150f = set_chn_4_vol
           $151b = fx_vibrato
           $152e = fx_vibrato.restore
           $1533 = fx_vibrato.go_up
           $153e = fx_vibrato.finish_vibrato
           $1544 = fx_arpeggio
           $1550 = fx_arpeggio.greater_than_two
           $1552 = fx_arpeggio.test_greater_than_two
           $1561 = fx_arpeggio.arp_options
           $1567 = fx_arpeggio.reset_arp
           $156a = fx_arpeggio.set_arp2
           $156f = fx_arpeggio.set_arp1
           $1570 = fx_arpeggio.finish_arp
           $1573 = fx_arpeggio.finish_skip_add
           $157c = fx_porta_up
           $158b = fx_porta_up.finish
           $1592 = fx_porta_down
           $15a4 = fx_toneporta
           $15b6 = fx_toneporta.return_skip
           $15c0 = fx_toneporta.do_toneporta
           $15d5 = fx_toneporta.high_byte_same
           $15db = fx_toneporta.add
           $15ed = fx_toneporta.subtract
           $1603 = fx_toneporta.set_exact
           $1605 = fx_toneporta.done
           $1618 = _setup_instrument_pointer_ch4
           $1623 = _setup_instrument_pointer
           $162a = _setup_instrument_pointer.finish
           $1633 = _hUGE_dosound_banked
           $1633 = _hUGE_dosound
           $1672 = _hUGE_dosound.write_mask1
           $1675 = _hUGE_dosound.do_setvol1
           $1688 = _hUGE_dosound.after_note1
           $16bd = _hUGE_dosound.write_mask2
           $16c0 = _hUGE_dosound.do_setvol2
           $16d3 = _hUGE_dosound.after_note2
           $175a = _hUGE_dosound.no_wave_copy
           $175b = _hUGE_dosound.write_mask3
           $175e = _hUGE_dosound.do_setvol3
           $1769 = _hUGE_dosound.after_note3
           $17ba = _hUGE_dosound.write_mask4
           $17bd = _hUGE_dosound.do_setvol4
           $17c8 = _hUGE_dosound.after_note4
           $17cb = _hUGE_dosound.process_effects
           $17e7 = _hUGE_dosound.after_effect1
           $1803 = _hUGE_dosound.after_effect2
           $181f = _hUGE_dosound.after_effect3
           $186a = _hUGE_dosound.done_macro
           $1873 = process_tick
           $1873 = _hUGE_dosound.after_effect4
           $1885 = _newrow
           $189d = _newrow.no_break
           $18a8 = _neworder
           $18b5 = _update_current_order
           $18bc = _noreset
           $18c1 = note_table
  SECTION: $1951-$1dd2 ($0482 bytes) ["player"]
           $1951 = InitializePlayer
           $19a4 = UpdateBalloonPosition
           $19a4 = UpdateBalloonPosition.balloonLeft
           $19b1 = UpdateBalloonPosition.balloonRight
           $19bc = UpdateCactusPosition
           $19bc = UpdateCactusPosition.cactusLeft
           $19c9 = UpdateCactusPosition.cactusRight
           $19d4 = SpawnPlayer
           $19d4 = SpawnPlayer.cactusLeft
           $19e4 = SpawnPlayer.cactusRight
           $19f4 = SpawnPlayer.balloonLeft
           $1a04 = SpawnPlayer.balloonRight
           $1a15 = ClearPlayerCactus
           $1a22 = ClearPlayerBalloon
           $1a2f = RespawnPlayer
           $1a42 = MoveRight
           $1a52 = MoveRight.canCactusDriftLeft
           $1a64 = MoveRight.cactusDriftLeft
           $1a66 = MoveLeft
           $1a7a = MoveLeft.canCactusDriftRight
           $1a8b = MoveLeft.cactusDriftRight
           $1a8d = MoveDown
           $1a9d = MoveDown.canCactusDriftUp
           $1aaf = MoveDown.cactusDriftUp
           $1ab1 = ChargeBoost
           $1ab7 = ChargeBoost.isCharging
           $1abe = ChargeBoost.resetBoost
           $1ac4 = ChargeAttack
           $1aca = ChargeAttack.isCharging
           $1acf = SpawnBullet
           $1ae9 = SpawnBullet.spawnFromLeft
           $1af1 = SpawnBullet.leftOAM
           $1aff = SpawnBullet.spawnFromRight
           $1b07 = SpawnBullet.rightOAM
           $1b15 = ClearBullet
           $1b21 = BulletUpdate
           $1b27 = BulletUpdate.isAlive
           $1b32 = BulletUpdate.offScreen
           $1b36 = BulletUpdate.onScreen
           $1b3c = BulletUpdate.move
           $1b46 = BulletUpdate.moveLeft
           $1b4a = BulletUpdate.moveRight
           $1b4c = BulletUpdate.endMove
           $1b54 = PlayerControls
           $1b54 = PlayerControls.right
           $1b67 = PlayerControls.moveRight
           $1b6f = PlayerControls.endRight
           $1b6f = PlayerControls.left
           $1b82 = PlayerControls.moveLeft
           $1b89 = PlayerControls.endLeft
           $1b89 = PlayerControls.up
           $1b9c = PlayerControls.moveUp
           $1bb0 = PlayerControls.endUp
           $1bb0 = PlayerControls.down
           $1bc6 = PlayerControls.endDown
           $1bc6 = PlayerControls.canCactusDriftCenterX
           $1be4 = PlayerControls.driftCenterXRight
           $1be7 = PlayerControls.driftCenterXLeft
           $1be8 = PlayerControls.endDriftToCenterX
           $1be8 = PlayerControls.canCactusDriftCenterY
           $1c09 = PlayerControls.driftCenterYUp
           $1c0c = PlayerControls.driftCenterYDown
           $1c0d = PlayerControls.endDriftToCenterY
           $1c0d = PlayerControls.start
           $1c18 = PlayerControls.endStart
           $1c18 = PlayerControls.AButton
           $1c25 = PlayerControls.activateAttack
           $1c2d = PlayerControls.endA
           $1c2d = PlayerControls.BButton
           $1c3a = PlayerControls.activateBoost
           $1c44 = PlayerControls.endB
           $1c45 = MovePlayer
           $1c5a = MovePlayerAutoFlyUp
           $1c73 = FallCactusDown
           $1c88 = FallCactusDown.skipAcceleration
           $1c91 = PopBalloonAnimation
           $1ca2 = PopBalloonAnimation.canSwitchFrames
           $1cae = PopBalloonAnimation.frame0
           $1cc0 = PopBalloonAnimation.frame1
           $1cd2 = PopBalloonAnimation.clear
           $1ce2 = PopBalloonAnimation.endFrame
           $1cea = CactusFalling
           $1d04 = CactusFalling.offScreen
           $1d0c = CactusFalling.end
           $1d0d = NoMoreLives
           $1d17 = PlayerUpdate
           $1d1e = PlayerUpdate.isAlive
           $1d3a = PlayerUpdate.popped
           $1d45 = PlayerUpdate.popping
           $1d4d = PlayerUpdate.falling
           $1d56 = PlayerUpdate.respawning
           $1d5d = PlayerUpdate.noMoreLives
           $1d61 = PlayerUpdate.respawn
           $1d65 = DeathOfPlayer
           $1d89 = InvincibleBlink
           $1d8f = InvincibleBlink.isStillInvincible
           $1d9e = InvincibleBlink.blinkNormal
           $1da5 = InvincibleBlink.blinkFast
           $1da9 = InvincibleBlink.blinkEnd
           $1dbe = InvincibleBlink.defaultPalette
  SECTION: $1dd3-$20a8 ($02d6 bytes) ["level data"]
           $1dd3 = Level1
           $1e30 = Level2
           $1ee7 = Level3
           $1fd8 = InitializeNewLevel
           $1ff0 = InitializeNewLevel.level1
           $1ff5 = InitializeNewLevel.level2
           $1ffa = InitializeNewLevel.level3
           $1fff = InitializeNewLevel.level4
           $2000 = InitializeNewLevel.setLevelDataAddress
           $2008 = InitializeLevelVars
           $2011 = LevelDataHandler
           $2019 = LevelDataHandler.notEmpty
           $2038 = LevelDataHandler.pointBalloon
           $203c = LevelDataHandler.balloonCactus
           $2040 = LevelDataHandler.bird
           $2044 = LevelDataHandler.bomb
           $2048 = LevelDataHandler.porcupine
           $204c = LevelDataManager
           $2070 = LevelDataManager.spawn
           $207d = LevelDataManager.wait
           $208a = LevelDataManager.waitEnd
           $2098 = LevelDataManager.end
  SECTION: $20a9-$22ac ($0204 bytes) ["game"]
           $20a9 = InitializeGame
           $20b1 = LoadLevel1Graphics
           $20d4 = LoadLevel2Graphics
           $20f6 = TryToUnpause
           $210d = TryToUnpause.end
           $210e = SpawnCountdown
           $2139 = SpawnCountdown.end
           $213a = Countdown
           $2141 = Countdown.hasCountedDown
           $2144 = Countdown.countdown
           $2155 = Countdown.balloonPop
           $215d = Countdown.frames
           $2186 = Countdown.frame0
           $21a8 = Countdown.frame1
           $21ca = Countdown.frame2
           $21eb = Countdown.frame3
           $220c = Countdown.frame4
           $222d = Countdown.frame5
           $224b = Countdown.remove
           $2260 = Countdown.endFrame
           $2267 = Countdown.end
           $2269 = UpdateSprites
           $227f = UpdateGameCountdown
           $2294 = UpdateGame
  SECTION: $22ad-$2401 ($0155 bytes) ["window"]
           $22ad = RefreshScore
           $22e4 = RefreshTotal
           $231b = RefreshLives
           $2324 = RefreshBoostBar
           $232e = RefreshBoostBar.isCharging
           $233a = RefreshBoostBar.isEmpty
           $2340 = RefreshBoostBar.is25Percent
           $2347 = RefreshBoostBar.is50Percent
           $234e = RefreshBoostBar.is75Percent
           $2355 = RefreshBoostBar.isReady
           $235b = RefreshAttackBar
           $2365 = RefreshAttackBar.isCharging
           $2371 = RefreshAttackBar.isEmpty
           $2377 = RefreshAttackBar.is25Percent
           $237e = RefreshAttackBar.is50Percent
           $2385 = RefreshAttackBar.is75Percent
           $238c = RefreshAttackBar.isReady
           $2392 = LoadWindow.loadTiles
           $2392 = LoadWindow
           $239e = LoadWindow.drawMap
           $23b8 = RefreshWindow
           $23ce = RefreshAddLives
           $23dd = RefreshAddLives.hasLivesToAdd
           $23ea = RefreshStageClear
  SECTION: $2402-$2555 ($0154 bytes) ["interrupts"]
           $2402 = InitializeInterrupts
           $2418 = VBlankInterrupt
           $2428 = LCDInterrupt
           $2432 = LCDInterruptEnd
           $2436 = MenuLCDInterrupt
           $2446 = MenuLCDInterrupt.reset
           $244f = MenuLCDInterrupt.far
           $245d = MenuLCDInterrupt.close
           $2469 = MenuLCDInterrupt.end
           $246c = SetMenuInterrupts
           $247a = ParkLCDInterrupt
           $2486 = ParkLCDInterrupt.clouds
           $2494 = ParkLCDInterrupt.ground
           $2499 = ParkLCDInterrupt.end
           $249c = SetParkInterrupts
           $24a0 = Level1LCDInterrupt
           $24b4 = Level1LCDInterrupt.reset
           $24c2 = Level1LCDInterrupt.far
           $24d0 = Level1LCDInterrupt.middle
           $24de = Level1LCDInterrupt.close
           $24ea = Level1LCDInterrupt.end
           $24ed = SetLevel1Interrupts
           $24fb = Level2LCDInterrupt
           $250f = Level2LCDInterrupt.reset
           $251d = Level2LCDInterrupt.far
           $252b = Level2LCDInterrupt.middle
           $2539 = Level2LCDInterrupt.close
           $2545 = Level2LCDInterrupt.end
           $2548 = SetLevel2Interrupts
  SECTION: $2556-$2696 ($0141 bytes) ["rom"]
           $2556 = Start
           $2593 = MenuLoopOpening
           $2593 = StartMenu
           $25ab = MenuLoop
           $25ab = StartGame
           $25e4 = OpeningCutsceneLoop
           $25e4 = SetupNextLevel
           $2605 = SetupNextLevel.level1
           $2605 = SetupNextLevel.level2
           $260d = SetupNextLevel.endLevelSetup
           $260d = SetupNextLevel.level6
           $260d = SetupNextLevel.level5
           $260d = SetupNextLevel.level4
           $260d = SetupNextLevel.level3
           $263d = GameCountdownLoop
           $264c = GameLoop
           $265b = StageClear
           $2688 = StageClearLoop
  SECTION: $2697-$2718 ($0082 bytes) ["collision"]
           $2697 = CollisionCheck
           $26a2 = CollisionCheck.tryOtherY
           $26ae = CollisionCheck.checkX
           $26bb = CollisionCheck.tryOtherX
           $26c8 = CollisionCheck.collision
           $26cb = CollisionCheck.noCollision
           $26cd = CollisionWithPlayer
           $26dd = OffScreenXEnemies
           $26ee = OffScreenXEnemies.end
           $26f0 = OffScreenYEnemies
           $2701 = OffScreenYEnemies.end
           $2703 = OffScreenX
           $270b = OffScreenX.end
           $270d = OffScreenY
           $2717 = OffScreenY.end
  SECTION: $2719-$2790 ($0078 bytes) ["controller"]
           $2719 = InitializeController
           $271e = ReadInput
           $274e = JOY_RIGHT
           $2756 = JOY_LEFT
           $275e = JOY_UP
           $2766 = JOY_DOWN
           $276e = JOY_A
           $2776 = JOY_B
           $277e = JOY_SELECT
           $2786 = JOY_START
           $278e = JOY_FALSE
  SECTION: $2791-$27ea ($005a bytes) ["scroll"]
           $2791 = InitializeParallaxScrolling
           $279c = IncrementScrollOffset
           $279c = IncrementScrollOffset.close
           $27aa = IncrementScrollOffset.middle
           $27b8 = IncrementScrollOffset.far
           $27c6 = IncrementScrollOffset.end
           $27c7 = HorizontalScroll
           $27d4 = HorizontalScroll.end
           $27d6 = VerticalScroll
           $27e3 = VerticalScroll.end
           $27e5 = ResetScroll
  SECTION: $27eb-$2808 ($001e bytes) ["OAM DMA routine"]
           $27eb = CopyDMARoutine
           $27f2 = CopyDMARoutine.copy
           $27f9 = DMARoutine
           $27fd = DMARoutine.wait
           $2801 = DMARoutineEnd
           $2801 = OAMDMA
    SLACK: $1813 bytes

ROMX bank #1:
  SECTION: $4000-$52df ($12e0 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4340 = OpeningCutsceneTilesEnd
           $4340 = OpeningCutsceneSpriteTiles
           $4380 = OpeningCutsceneSpriteTilesEnd
           $4380 = IntermissionTiles
           $4530 = IntermissionTilesEnd
           $4530 = Level2Tiles
           $4a00 = Level2TilesEnd
           $4a00 = CountdownTiles
           $4a00 = Level3TilesEnd
           $4a00 = Level3Tiles
           $4b00 = CountdownTilesEnd
           $4b00 = WindowTiles
           $4d00 = WindowTilesEnd
           $4d00 = MenuTiles
           $4d20 = MenuTilesEnd
           $4d20 = MenuTitleTiles
           $52e0 = MenuTitleTilesEnd
  SECTION: $52e0-$5e1d ($0b3e bytes) ["Song Data2"]
           $52e0 = angryTheme
           $52f5 = order_cnt
           $52f6 = order1
           $5300 = order2
           $530a = order3
           $5314 = order4
           $531e = P0
           $53de = P1
           $549e = P2
           $555e = P3
           $561e = P4
           $56de = P5
           $579e = P6
           $585e = P7
           $591e = P8
           $59de = P9
           $5a9e = P10
           $5b5e = P11
           $5c1e = duty_instruments
           $5c1e = itSquareinst1
           $5c22 = itSquareinst2
           $5c26 = itSquareinst3
           $5c2a = itSquareinst4
           $5c2e = itSquareinst5
           $5c32 = itSquareinst6
           $5c36 = itSquareinst7
           $5c3a = itSquareinst8
           $5c3e = itSquareinst9
           $5c42 = itSquareinst10
           $5c46 = itSquareinst11
           $5c4a = itSquareinst12
           $5c4e = itSquareinst13
           $5c52 = itSquareinst14
           $5c56 = itSquareinst15
           $5c5a = wave_instruments
           $5c5a = itWaveinst1
           $5c5e = itWaveinst2
           $5c62 = itWaveinst3
           $5c66 = itWaveinst4
           $5c6a = itWaveinst5
           $5c6e = itWaveinst6
           $5c72 = itWaveinst7
           $5c76 = itWaveinst8
           $5c7a = itWaveinst9
           $5c7e = itWaveinst10
           $5c82 = itWaveinst11
           $5c86 = itWaveinst12
           $5c8a = itWaveinst13
           $5c8e = itWaveinst14
           $5c92 = itWaveinst15
           $5c96 = noise_instruments
           $5c96 = itNoiseinst1
           $5c9e = itNoiseinst2
           $5ca6 = itNoiseinst3
           $5cae = itNoiseinst4
           $5cb6 = itNoiseinst5
           $5cbe = itNoiseinst6
           $5cc6 = itNoiseinst7
           $5cce = itNoiseinst8
           $5cd6 = itNoiseinst9
           $5cde = itNoiseinst10
           $5ce6 = itNoiseinst11
           $5cee = itNoiseinst12
           $5cf6 = itNoiseinst13
           $5cfe = itNoiseinst14
           $5d06 = itNoiseinst15
           $5d0e = routines
           $5d0e = __end_hUGE_Routine_0
           $5d0e = __hUGE_Routine_0
           $5d0f = __end_hUGE_Routine_1
           $5d0f = __hUGE_Routine_1
           $5d10 = __end_hUGE_Routine_2
           $5d10 = __hUGE_Routine_2
           $5d11 = __end_hUGE_Routine_3
           $5d11 = __hUGE_Routine_3
           $5d12 = __end_hUGE_Routine_4
           $5d12 = __hUGE_Routine_4
           $5d13 = __end_hUGE_Routine_5
           $5d13 = __hUGE_Routine_5
           $5d14 = __end_hUGE_Routine_6
           $5d14 = __hUGE_Routine_6
           $5d15 = __end_hUGE_Routine_7
           $5d15 = __hUGE_Routine_7
           $5d16 = __hUGE_Routine_8
           $5d16 = __end_hUGE_Routine_8
           $5d17 = __hUGE_Routine_9
           $5d17 = __end_hUGE_Routine_9
           $5d18 = __hUGE_Routine_10
           $5d18 = __end_hUGE_Routine_10
           $5d19 = __hUGE_Routine_11
           $5d19 = __end_hUGE_Routine_11
           $5d1a = __hUGE_Routine_12
           $5d1a = __end_hUGE_Routine_12
           $5d1b = __hUGE_Routine_13
           $5d1b = __end_hUGE_Routine_13
           $5d1c = __end_hUGE_Routine_14
           $5d1c = __hUGE_Routine_14
           $5d1d = __end_hUGE_Routine_15
           $5d1d = __hUGE_Routine_15
           $5d1e = waves
           $5d1e = wave0
           $5d2e = wave1
           $5d3e = wave2
           $5d4e = wave3
           $5d5e = wave4
           $5d6e = wave5
           $5d7e = wave6
           $5d8e = wave7
           $5d9e = wave8
           $5dae = wave9
           $5dbe = wave10
           $5dce = wave11
           $5dde = wave12
           $5dee = wave13
           $5dfe = wave14
           $5e0e = wave15
  SECTION: $5e1e-$633b ($051e bytes) ["Song Data"]
           $5e1e = menuTheme
           $5e33 = order_cnt
           $5e34 = order1
           $5e36 = order2
           $5e38 = order3
           $5e3a = order4
           $5e3c = P1
           $5efc = P2
           $5fbc = P3
           $607c = P6
           $613c = duty_instruments
           $613c = itSquareinst1
           $6140 = itSquareinst2
           $6144 = itSquareinst3
           $6148 = itSquareinst4
           $614c = itSquareinst5
           $6150 = itSquareinst6
           $6154 = itSquareinst7
           $6158 = itSquareinst8
           $615c = itSquareinst9
           $6160 = itSquareinst10
           $6164 = itSquareinst11
           $6168 = itSquareinst12
           $616c = itSquareinst13
           $6170 = itSquareinst14
           $6174 = itSquareinst15
           $6178 = wave_instruments
           $6178 = itWaveinst1
           $617c = itWaveinst2
           $6180 = itWaveinst3
           $6184 = itWaveinst4
           $6188 = itWaveinst5
           $618c = itWaveinst6
           $6190 = itWaveinst7
           $6194 = itWaveinst8
           $6198 = itWaveinst9
           $619c = itWaveinst10
           $61a0 = itWaveinst11
           $61a4 = itWaveinst12
           $61a8 = itWaveinst13
           $61ac = itWaveinst14
           $61b0 = itWaveinst15
           $61b4 = noise_instruments
           $61b4 = itNoiseinst1
           $61bc = itNoiseinst2
           $61c4 = itNoiseinst3
           $61cc = itNoiseinst4
           $61d4 = itNoiseinst5
           $61dc = itNoiseinst6
           $61e4 = itNoiseinst7
           $61ec = itNoiseinst8
           $61f4 = itNoiseinst9
           $61fc = itNoiseinst10
           $6204 = itNoiseinst11
           $620c = itNoiseinst12
           $6214 = itNoiseinst13
           $621c = itNoiseinst14
           $6224 = itNoiseinst15
           $622c = routines
           $622c = __end_hUGE_Routine_0
           $622c = __hUGE_Routine_0
           $622d = __end_hUGE_Routine_1
           $622d = __hUGE_Routine_1
           $622e = __end_hUGE_Routine_2
           $622e = __hUGE_Routine_2
           $622f = __end_hUGE_Routine_3
           $622f = __hUGE_Routine_3
           $6230 = __end_hUGE_Routine_4
           $6230 = __hUGE_Routine_4
           $6231 = __end_hUGE_Routine_5
           $6231 = __hUGE_Routine_5
           $6232 = __end_hUGE_Routine_6
           $6232 = __hUGE_Routine_6
           $6233 = __end_hUGE_Routine_7
           $6233 = __hUGE_Routine_7
           $6234 = __hUGE_Routine_8
           $6234 = __end_hUGE_Routine_8
           $6235 = __hUGE_Routine_9
           $6235 = __end_hUGE_Routine_9
           $6236 = __hUGE_Routine_10
           $6236 = __end_hUGE_Routine_10
           $6237 = __hUGE_Routine_11
           $6237 = __end_hUGE_Routine_11
           $6238 = __hUGE_Routine_12
           $6238 = __end_hUGE_Routine_12
           $6239 = __hUGE_Routine_13
           $6239 = __end_hUGE_Routine_13
           $623a = __end_hUGE_Routine_14
           $623a = __hUGE_Routine_14
           $623b = __end_hUGE_Routine_15
           $623b = __hUGE_Routine_15
           $623c = waves
           $623c = wave0
           $624c = wave1
           $625c = wave2
           $626c = wave3
           $627c = wave4
           $628c = wave5
           $629c = wave6
           $62ac = wave7
           $62bc = wave8
           $62cc = wave9
           $62dc = wave10
           $62ec = wave11
           $62fc = wave12
           $630c = wave13
           $631c = wave14
           $632c = wave15
  SECTION: $633c-$6738 ($03fd bytes) ["balloon cactus"]
           $633c = InitializeBalloonCactus
           $6345 = InitializeBalloonCactus.loop_u1
           $6350 = SetStruct
           $638d = SpawnBalloonCactus
           $63a0 = SpawnBalloonCactus.availableSpace
           $63a9 = SpawnBalloonCactus.availableOAMSpace
           $63d7 = SpawnBalloonCactus.isLeftside
           $63d7 = SpawnBalloonCactus.balloonLeft
           $63f0 = SpawnBalloonCactus.balloonRight
           $6400 = SpawnBalloonCactus.cactusLeft
           $640e = SpawnBalloonCactus.cactusRight
           $641e = SpawnBalloonCactus.setStruct
           $6423 = SpawnBalloonCactus.end
           $6428 = ClearCactus
           $643e = ClearBalloon
           $6454 = Clear
           $645e = PopBalloonAnimation
           $646f = PopBalloonAnimation.canSwitchFrames
           $647d = PopBalloonAnimation.frame0
           $64a1 = PopBalloonAnimation.frame1
           $64c5 = PopBalloonAnimation.clear
           $64e6 = PopBalloonAnimation.endFrame
           $64ed = PopBalloonAnimation.end
           $64ee = CactusFallingCollision
           $64ef = CactusFallingCollision.checkBird
           $64f6 = CactusFallingCollision.birdLoop
           $6507 = CactusFallingCollision.isAlive
           $6537 = CactusFallingCollision.hitBird
           $6545 = CactusFallingCollision.checkBirdLoop
           $6552 = CactusFallingCollision.end
           $6554 = CactusFalling
           $6566 = CactusFalling.falling
           $657f = CactusFalling.skipAcceleration
           $658b = CactusFalling.offScreen
           $658f = UpdateBalloonPosition
           $658f = UpdateBalloonPosition.balloonLeft
           $65a5 = UpdateBalloonPosition.balloonRight
           $65b0 = UpdateCactusPosition
           $65b0 = UpdateCactusPosition.cactusLeft
           $65c6 = UpdateCactusPosition.cactusRight
           $65d1 = Move
           $65ec = Move.isLeftside
           $65fa = Move.updatePosition
           $6601 = DeathOfBalloonCactus
           $6632 = CollisionBalloonCactus
           $6632 = CollisionBalloonCactus.checkHit
           $664d = CollisionBalloonCactus.checkHitByBullet
           $666d = CollisionBalloonCactus.checkHitPlayer
           $6687 = BalloonCactusUpdate
           $668e = BalloonCactusUpdate.loop
           $66e5 = BalloonCactusUpdate.isAlive
           $6702 = BalloonCactusUpdate.offScreen
           $6707 = BalloonCactusUpdate.popped
           $6711 = BalloonCactusUpdate.notPopping
           $671b = BalloonCactusUpdate.checkLoop
           $672a = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6739-$6aae ($0376 bytes) ["bird"]
           $6739 = InitializeBird
           $6742 = InitializeBird.loop_u1
           $674d = SetStruct
           $6772 = SpawnBird
           $6785 = SpawnBird.availableSpace
           $678f = SpawnBird.availableOAMSpace
           $67ac = SpawnBird.isRightside
           $67b1 = SpawnBird.birdLeft
           $67ca = SpawnBird.birdMiddle
           $67da = SpawnBird.birdRight
           $67ec = SpawnBird.isLeftside
           $67ec = SpawnBird.leftBirdLeft
           $6805 = SpawnBird.leftBirdMiddle
           $6815 = SpawnBird.leftBirdRight
           $6825 = SpawnBird.setStruct
           $682a = SpawnBird.end
           $682f = BirdRightsideFlap
           $6836 = BirdRightsideFlap.soaring
           $685e = BirdRightsideFlap.flapping
           $688f = BirdLeftsideFlap
           $6896 = BirdLeftsideFlap.soaring
           $68be = BirdLeftsideFlap.flapping
           $68ef = Clear
           $690c = UpdateBirdPosition
           $690c = UpdateBirdPosition.birdLeft
           $6922 = UpdateBirdPosition.birdMiddle
           $692e = UpdateBirdPosition.birdRight
           $6939 = Move
           $6940 = Move.isRightside
           $694e = Move.isLeftside
           $6958 = Move.moveDown
           $6966 = Move.moveEnd
           $696a = BirdFall
           $6975 = BirdFall.checkOffscreenY
           $6987 = BirdFall.end
           $6989 = DeathOfBird
           $69a1 = DeathOfBird.facingLeft
           $69cc = DeathOfBird.facingRight
           $69f7 = CollisionBird
           $69f7 = CollisionBird.checkHitPlayer
           $6a11 = BirdUpdate
           $6a18 = BirdUpdate.loop
           $6a56 = BirdUpdate.isAlive
           $6a7b = BirdUpdate.offScreen
           $6a80 = BirdUpdate.isDead
           $6a91 = BirdUpdate.checkLoop
  SECTION: $6aaf-$6d6f ($02c1 bytes) ["bomb"]
           $6aaf = InitializeBomb
           $6ab8 = InitializeBomb.loop_u1
           $6ac3 = SetStruct
           $6ae4 = SpawnBomb
           $6af6 = SpawnBomb.availableSpace
           $6aff = SpawnBomb.availableOAMSpace
           $6b15 = SpawnBomb.balloonLeft
           $6b2f = SpawnBomb.balloonRight
           $6b40 = SpawnBomb.bombSpace
           $6b4b = SpawnBomb.setStruct
           $6b50 = SpawnBomb.end
           $6b55 = Clear
           $6b72 = Move
           $6b7a = Move.balloonLeft
           $6b90 = Move.balloonRight
           $6b9c = Move.bombSpace
           $6ba7 = DeathOfBomb
           $6bb1 = CollisionBomb
           $6bb1 = CollisionBomb.checkHit
           $6bcf = CollisionBomb.checkHitByBullet
           $6bef = CollisionBomb.end
           $6bf0 = ExplosionAnimation
           $6c01 = ExplosionAnimation.canSwitchFrames
           $6c19 = ExplosionAnimation.frame0
           $6c3e = ExplosionAnimation.frame1
           $6c81 = ExplosionAnimation.frame2
           $6cad = ExplosionAnimation.frame3
           $6cd9 = ExplosionAnimation.clear
           $6cdd = ExplosionAnimation.endFrame
           $6ce4 = ExplosionAnimation.end
           $6ce5 = BombUpdate
           $6cec = BombUpdate.loop
           $6d26 = BombUpdate.isAlive
           $6d43 = BombUpdate.offScreen
           $6d48 = BombUpdate.popped
           $6d52 = BombUpdate.checkLoop
  SECTION: $6d70-$6f93 ($0224 bytes) ["point balloon"]
           $6d70 = InitializePointBalloon
           $6d79 = InitializePointBalloon.loop_u1
           $6d84 = SetStruct
           $6da5 = SpawnPointBalloon
           $6db7 = SpawnPointBalloon.availableSpace
           $6dc0 = SpawnPointBalloon.availableOAMSpace
           $6dd6 = SpawnPointBalloon.balloonLeft
           $6def = SpawnPointBalloon.balloonRight
           $6dff = SpawnPointBalloon.setStruct
           $6e04 = SpawnPointBalloon.end
           $6e09 = PopBalloonAnimation
           $6e1a = PopBalloonAnimation.canSwitchFrames
           $6e26 = PopBalloonAnimation.frame0
           $6e4a = PopBalloonAnimation.frame1
           $6e6e = PopBalloonAnimation.clear
           $6e72 = PopBalloonAnimation.endFrame
           $6e7a = Clear
           $6e93 = Move
           $6e9a = Move.balloonLeft
           $6eb0 = Move.balloonRight
           $6ebb = DeathOfPointBalloon
           $6ecd = CollisionPointBalloon
           $6ecd = CollisionPointBalloon.checkHit
           $6ee8 = CollisionPointBalloon.checkHitByBullet
           $6f08 = CollisionPointBalloon.end
           $6f09 = PointBalloonUpdate
           $6f10 = PointBalloonUpdate.loop
           $6f4a = PointBalloonUpdate.isAlive
           $6f67 = PointBalloonUpdate.offScreen
           $6f6c = PointBalloonUpdate.popped
           $6f76 = PointBalloonUpdate.checkLoop
           $6f85 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $6f94-$70dc ($0149 bytes) ["porcupine"]
           $6f94 = InitializePorcupine
           $6f9d = InitializePorcupine.loop_u1
           $6fa8 = SetStruct
           $6fbd = SpawnPorcupine
           $6fd0 = SpawnPorcupine.availableSpace
           $6fda = SpawnPorcupine.availableOAMSpace
           $6ff0 = SpawnPorcupine.topLeft
           $7009 = SpawnPorcupine.topMiddle
           $7019 = SpawnPorcupine.topMiddle2
           $7029 = SpawnPorcupine.topRight
           $7039 = SpawnPorcupine.bottomLeft
           $7049 = SpawnPorcupine.bottomMiddle
           $705b = SpawnPorcupine.bottomMiddle2
           $706d = SpawnPorcupine.bottomRight
           $707f = SpawnPorcupine.setStruct
           $7084 = SpawnPorcupine.end
           $7089 = PorcupineUpdate
           $7090 = PorcupineUpdate.loop
           $70be = PorcupineUpdate.offScreen
           $70be = PorcupineUpdate.isAlive
           $70c0 = PorcupineUpdate.isDead
           $70c0 = PorcupineUpdate.checkLoop
           $70cf = PorcupineUpdate.checkLoopSkipSet
  SECTION: $70dd-$721a ($013e bytes) ["menu"]
           $70dd = InitializeMenu
           $70e9 = LoadMenuOpeningGraphics
           $7101 = LoadMenuGraphics
           $7133 = SpawnMenuCursor
           $713c = SpawnMenuCursor.availableSpace
           $7157 = SpawnMenuCursor.end
           $7158 = BlinkMenuCursor
           $7160 = BlinkMenuCursor.blink
           $7171 = BlinkMenuCursor.show
           $7175 = BlinkMenuCursor.empty
           $7179 = SelectMode
           $7182 = MenuInput
           $718c = MenuInput.moveSelected
           $7192 = MenuInput.selectMode
           $719b = MenuInput.end
           $719c = UpdateMenuOpening
           $71b8 = UpdateMenuOpening.startSound
           $71bd = UpdateMenuOpening.scrollUpTitle
           $71c9 = UpdateMenuOpening.endSound
           $71ce = UpdateMenuOpening.scrollDownTitle
           $71da = UpdateMenuOpening.scrollUpTitle2
           $71e6 = UpdateMenuOpening.fadeOut
           $71ec = UpdateMenuOpening.next
           $71f0 = UpdateMenuOpening.endFrame
           $71f7 = UpdateMenuOpening.end
           $71f8 = UpdateMenu
           $71f8 = UpdateMenu.fadeIn
           $71fe = UpdateMenu.hasFadedIn
           $7212 = UpdateMenu.fadeOut
  SECTION: $721b-$72e9 ($00cf bytes) ["opening cutscene"]
           $721b = InitializeOpeningCutscene
           $7220 = LoadParkGraphics
           $724a = SpawnHandWave
           $726e = HandWaveAnimation
           $7275 = HandWaveAnimation.frame0
           $7291 = HandWaveAnimation.frame1
           $72ac = HandWaveAnimation.end
           $72ad = UpdatePark.fadeIn
           $72ad = UpdatePark
           $72b3 = UpdatePark.hasFadedIn
           $72cc = UpdatePark.fadeOut
           $72d4 = UpdatePark.skipFade
           $72d7 = UpdatePark.moveUp
           $72e0 = UpdatePark.flyUpNormal
           $72e6 = UpdatePark.flyUpFast
  SECTION: $72ea-$73b7 ($00ce bytes) ["palettes"]
           $72ea = ResetFading
           $72f8 = InitializePalettes
           $730a = FadeOutPalettes
           $7311 = FadeOutPalettes.hasFadedIn
           $7314 = FadeOutPalettes.fadeOut
           $7334 = FadeOutPalettes.fade1
           $733c = FadeOutPalettes.fade2
           $7344 = FadeOutPalettes.fade3
           $734c = FadeOutPalettes.fade4
           $7352 = FadeOutPalettes.fadePalettes
           $7358 = FadeOutPalettes.increaseFrame
           $735f = FadeOutPalettes.end
           $7361 = FadeInPalettes
           $7368 = FadeInPalettes.hasFadedIn
           $736b = FadeInPalettes.fadeIn
           $738b = FadeInPalettes.fade1
           $7393 = FadeInPalettes.fade2
           $739b = FadeInPalettes.fade3
           $73a3 = FadeInPalettes.fade4
           $73a9 = FadeInPalettes.fadePalettes
           $73af = FadeInPalettes.increaseFrame
           $73b6 = FadeInPalettes.end
  SECTION: $73b8-$7471 ($00ba bytes) ["sound"]
           $73b8 = AUDIO_OFF
           $73bc = AUDIO_ON
           $73c1 = PopSound
           $73d4 = ExplosionSound
           $73e1 = WaveSound
           $73ee = FallingSound
           $7403 = RisingSound
           $7418 = StopSweepSound
           $741d = CollectSound
           $7432 = WrongAnswerSound
           $7449 = PercussionSound
           $7456 = BassSound
           $7467 = ClearSound
  SECTION: $7472-$7525 ($00b4 bytes) ["memory"]
           $7472 = MEMCPY
           $7472 = MEMCPY.loop
           $7476 = MEMCPY.checkLoop
           $747b = MEMCPY_WITH_OFFSET
           $747c = MEMCPY_WITH_OFFSET.loop
           $7487 = MEMCPY_WITH_OFFSET.checkLoop
           $748d = MEMCPY_SINGLE_SCREEN
           $748f = MEMCPY_SINGLE_SCREEN.loop
           $74a3 = MEMCPY_SINGLE_SCREEN.checkLoop
           $74a9 = ClearOAM
           $74b0 = ClearOAM.loop_u2
           $74b9 = ClearRAM
           $74c0 = ClearRAM.loop_u3
           $74c9 = RequestOAMSpace
           $74d2 = RequestOAMSpace.loop
           $74e9 = RequestOAMSpace.availableSpace
           $74ee = RequestOAMSpace.sufficientSpace
           $74fe = RequestOAMSpace.isNotZero4
           $74ff = RequestOAMSpace.isNotZero3
           $7500 = RequestOAMSpace.isNotZero2
           $7501 = RequestOAMSpace.isNotZero1
           $7503 = RequestOAMSpace.notEnoughSprites
           $750b = RequestOAMSpace.end
           $750e = RequestRAMSpace
           $750e = RequestRAMSpace.loop
           $7513 = RequestRAMSpace.availableSpace
           $7517 = RequestRAMSpace.checkLoop
           $7524 = RequestRAMSpace.noFreeSpace
           $7525 = RequestRAMSpace.end
  SECTION: $7526-$75d0 ($00ab bytes) ["stage clear"]
           $7526 = InitializeStageClear
           $7533 = LoadStageClearGraphics
           $754e = UpdateStageClear
           $757e = UpdateStageClear.pause
           $758f = UpdateStageClear.copyFirstDigitToTotal
           $75a3 = UpdateStageClear.copyPointsToTotal
           $75b3 = UpdateStageClear.addGainedLives
           $75c9 = UpdateStageClear.endFrame
  SECTION: $75d1-$764c ($007c bytes) ["score"]
           $75d1 = InitializeScore
           $75d9 = InitializeTotal
           $75e1 = AddPoints
           $75e8 = AddPoints.carry
           $75f1 = DecrementPoints
           $75fa = DecrementPoints.carry
           $7601 = DecrementPoints.checkCapAtZero
           $760a = DecrementPoints.noCap
           $760f = IsScoreZero
           $761e = AddTotal
           $7621 = AddTotal.saveFourthDigit
           $7629 = AddTotal.toBCD
           $762d = AddTotal.carry
           $7631 = AddTotal.checkAddLife
           $763b = AddTotal.addLife
           $7646 = AddTotal.checkLoop
  SECTION: $764d-$7686 ($003a bytes) ["math"]
           $764d = MODULO
           $764f = MODULO.loop
           $7654 = DIVISION
           $765a = DIVISION.loop
           $765f = DIVISION.end
           $7662 = ToBCD
           $7678 = MULTIPLY
           $767a = MULTIPLY.loop
           $7685 = MULTIPLY.end
  SECTION: $7687-$76b8 ($0032 bytes) ["lcd"]
           $7687 = LCD_OFF
           $768e = LCD_ON
           $7695 = LCD_ON_NO_WINDOW
           $769c = WaitVBlank
           $76a3 = WaitVBlank.loop
           $76ae = SetupWindow
  SECTION: $76b9-$76cd ($0015 bytes) ["general initialization"]
           $76b9 = InitializeGeneralVars
  SECTION: $76ce-$76d5 ($0008 bytes) ["timer"]
           $76ce = UpdateGlobalTimer
    SLACK: $092a bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["level vars"]
           $c0f6 = wLevel
           $c0f7 = wLevelWaitCounter
           $c0f8 = wLevelDataAddress
  SECTION: $c0fa-$c0fc ($0003 bytes) ["stage clear vars"]
           $c0fa = wStageClearTimer
           $c0fb = wStageClearFrame
           $c0fc = wLivesToAdd
  SECTION: $c0fd-$c0ff ($0003 bytes) ["controller vars"]
           $c0fd = wControllerDown
           $c0fe = wControllerPressed
           $c0ff = wPaused
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["scroll vars"]
           $c1a0 = wParallaxClose
           $c1a1 = wParallaxMiddle
           $c1a2 = wParallaxFar
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["timer vars"]
           $c1a8 = wGlobalTimer
  SECTION: $c1a9-$c1a9 ($0001 byte) ["game vars"]
           $c1a9 = wCountdownFrame
  SECTION: $c1aa-$c1aa ($0001 byte) ["opening cutscene vars"]
           $c1aa = wHandWavingFrame
    SLACK: $0e55 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $27ed bytes in 1 bank
    ROMX: $36d6 bytes in 1 bank
    WRAM0: $01ab bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
