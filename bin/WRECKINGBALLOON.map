ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$09ef ($08a0 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level3Map
           $0820 = Level3MapEnd
           $0820 = Level2MapEnd
           $0988 = WindowMap
           $0988 = MenuMapEnd
           $09b0 = WindowMapEnd
           $09b0 = CloudsMap
           $09f0 = CloudsMapEnd
  SECTION: $09f0-$1190 ($07a1 bytes) ["Sound Driver"]
           $09f0 = _hUGE_init_banked
           $09f4 = _hUGE_init
           $09f6 = continue_init
           $09ff = _hUGE_mute_channel_banked
           $0a03 = _hUGE_mute_channel
           $0a05 = continue_mute
           $0a10 = hUGE_mute_channel
           $0a16 = hUGE_mute_channel.enable_loop
           $0a1d = hUGE_mute_channel.enable_cut
           $0a2a = _hUGE_set_position_banked
           $0a2e = _hUGE_set_position
           $0a30 = continue_set_position
           $0a37 = hUGE_init
           $0a3e = hUGE_init.fill_loop
           $0a62 = hUGE_init.copy_song_descriptor_loop
           $0a6c = _refresh_patterns
           $0a86 = _refresh_patterns.load_pattern
           $0a96 = _load_note_data
           $0aa8 = _lookup_note
           $0ab2 = _convert_note
           $0ac0 = _convert_ch4_note
           $0ad7 = _update_channel
           $0ae1 = _update_channel1
           $0aef = _update_channel2
           $0afd = _update_channel3
           $0b0b = _update_channel4
           $0b1b = _playnote1
           $0b36 = _playnote2
           $0b51 = _playnote3
           $0b72 = _playnote4
           $0b86 = _doeffect
           $0b9b = _doeffect.jump
           $0bcb = setup_channel_pointer
           $0bd9 = fx_set_master_volume
           $0bde = fx_call_routine
           $0c00 = fx_call_routine.call_hl
           $0c01 = fx_set_pan
           $0c06 = fx_set_duty
           $0c0b = fx_set_duty.chan2
           $0c15 = fx_set_duty.chan1
           $0c1f = fx_vol_slide
           $0c26 = fx_vol_slide.loop
           $0c2b = fx_vol_slide.cont
           $0c5d = fx_vol_slide.cont1
           $0c64 = fx_vol_slide.cont2
           $0c78 = _envelope_registers
           $0c80 = fx_note_delay
           $0c99 = fx_note_delay.play_note
           $0cb7 = _play_note_routines
           $0cc3 = fx_set_speed
           $0cc9 = hUGE_set_position
           $0cc9 = fx_pos_jump
           $0cd3 = fx_pattern_break
           $0cd8 = fx_note_cut
           $0ce0 = fx_note_cut.loop
           $0ce5 = fx_note_cut.cont
           $0cea = note_cut
           $0d01 = fx_set_volume
           $0d02 = set_channel_volume
           $0d0d = set_chn_3_vol
           $0d1f = set_chn_3_vol.three
           $0d23 = set_chn_3_vol.two
           $0d27 = set_chn_3_vol.one
           $0d2b = set_chn_3_vol.zero
           $0d2c = set_chn_3_vol.done
           $0d2f = set_chn_2_vol
           $0d3f = set_chn_1_vol
           $0d4f = set_chn_4_vol
           $0d5b = fx_vibrato
           $0d6e = fx_vibrato.restore
           $0d73 = fx_vibrato.go_up
           $0d7e = fx_vibrato.finish_vibrato
           $0d84 = fx_arpeggio
           $0d90 = fx_arpeggio.greater_than_two
           $0d92 = fx_arpeggio.test_greater_than_two
           $0da1 = fx_arpeggio.arp_options
           $0da7 = fx_arpeggio.reset_arp
           $0daa = fx_arpeggio.set_arp2
           $0daf = fx_arpeggio.set_arp1
           $0db0 = fx_arpeggio.finish_arp
           $0db3 = fx_arpeggio.finish_skip_add
           $0dbc = fx_porta_up
           $0dcb = fx_porta_up.finish
           $0dd2 = fx_porta_down
           $0de4 = fx_toneporta
           $0df6 = fx_toneporta.return_skip
           $0e00 = fx_toneporta.do_toneporta
           $0e15 = fx_toneporta.high_byte_same
           $0e1b = fx_toneporta.add
           $0e2d = fx_toneporta.subtract
           $0e43 = fx_toneporta.set_exact
           $0e45 = fx_toneporta.done
           $0e58 = _setup_instrument_pointer_ch4
           $0e63 = _setup_instrument_pointer
           $0e6a = _setup_instrument_pointer.finish
           $0e73 = _hUGE_dosound_banked
           $0e73 = _hUGE_dosound
           $0eb2 = _hUGE_dosound.write_mask1
           $0eb5 = _hUGE_dosound.do_setvol1
           $0ec8 = _hUGE_dosound.after_note1
           $0efd = _hUGE_dosound.write_mask2
           $0f00 = _hUGE_dosound.do_setvol2
           $0f13 = _hUGE_dosound.after_note2
           $0f9a = _hUGE_dosound.no_wave_copy
           $0f9b = _hUGE_dosound.write_mask3
           $0f9e = _hUGE_dosound.do_setvol3
           $0fa9 = _hUGE_dosound.after_note3
           $0ffa = _hUGE_dosound.write_mask4
           $0ffd = _hUGE_dosound.do_setvol4
           $1008 = _hUGE_dosound.after_note4
           $100b = _hUGE_dosound.process_effects
           $1027 = _hUGE_dosound.after_effect1
           $1043 = _hUGE_dosound.after_effect2
           $105f = _hUGE_dosound.after_effect3
           $10aa = _hUGE_dosound.done_macro
           $10b3 = process_tick
           $10b3 = _hUGE_dosound.after_effect4
           $10c5 = _newrow
           $10dd = _newrow.no_break
           $10e8 = _neworder
           $10f5 = _update_current_order
           $10fc = _noreset
           $1101 = note_table
  SECTION: $1191-$1910 ($0780 bytes) ["tilesets"]
           $1191 = PlayerSpriteTiles
           $1291 = EnemyTiles
           $1291 = PlayerSpriteTilesEnd
           $1451 = Level1Tiles
           $1451 = EnemyTilesEnd
           $1891 = CloudsTiles
           $1891 = Level1TilesEnd
           $1911 = CloudsTilesEnd
  SECTION: $1911-$1d92 ($0482 bytes) ["player"]
           $1911 = InitializePlayer
           $1964 = UpdateBalloonPosition
           $1964 = UpdateBalloonPosition.balloonLeft
           $1971 = UpdateBalloonPosition.balloonRight
           $197c = UpdateCactusPosition
           $197c = UpdateCactusPosition.cactusLeft
           $1989 = UpdateCactusPosition.cactusRight
           $1994 = SpawnPlayer
           $1994 = SpawnPlayer.cactusLeft
           $19a4 = SpawnPlayer.cactusRight
           $19b4 = SpawnPlayer.balloonLeft
           $19c4 = SpawnPlayer.balloonRight
           $19d5 = ClearPlayerCactus
           $19e2 = ClearPlayerBalloon
           $19ef = RespawnPlayer
           $1a02 = MoveRight
           $1a12 = MoveRight.canCactusDriftLeft
           $1a24 = MoveRight.cactusDriftLeft
           $1a26 = MoveLeft
           $1a3a = MoveLeft.canCactusDriftRight
           $1a4b = MoveLeft.cactusDriftRight
           $1a4d = MoveDown
           $1a5d = MoveDown.canCactusDriftUp
           $1a6f = MoveDown.cactusDriftUp
           $1a71 = ChargeBoost
           $1a77 = ChargeBoost.isCharging
           $1a7e = ChargeBoost.resetBoost
           $1a84 = ChargeAttack
           $1a8a = ChargeAttack.isCharging
           $1a8f = SpawnBullet
           $1aa9 = SpawnBullet.spawnFromLeft
           $1ab1 = SpawnBullet.leftOAM
           $1abf = SpawnBullet.spawnFromRight
           $1ac7 = SpawnBullet.rightOAM
           $1ad5 = ClearBullet
           $1ae1 = BulletUpdate
           $1ae7 = BulletUpdate.isAlive
           $1af2 = BulletUpdate.offScreen
           $1af6 = BulletUpdate.onScreen
           $1afc = BulletUpdate.move
           $1b06 = BulletUpdate.moveLeft
           $1b0a = BulletUpdate.moveRight
           $1b0c = BulletUpdate.endMove
           $1b14 = PlayerControls
           $1b14 = PlayerControls.right
           $1b27 = PlayerControls.moveRight
           $1b2f = PlayerControls.endRight
           $1b2f = PlayerControls.left
           $1b42 = PlayerControls.moveLeft
           $1b49 = PlayerControls.endLeft
           $1b49 = PlayerControls.up
           $1b5c = PlayerControls.moveUp
           $1b70 = PlayerControls.endUp
           $1b70 = PlayerControls.down
           $1b86 = PlayerControls.endDown
           $1b86 = PlayerControls.canCactusDriftCenterX
           $1ba4 = PlayerControls.driftCenterXRight
           $1ba7 = PlayerControls.driftCenterXLeft
           $1ba8 = PlayerControls.endDriftToCenterX
           $1ba8 = PlayerControls.canCactusDriftCenterY
           $1bc9 = PlayerControls.driftCenterYUp
           $1bcc = PlayerControls.driftCenterYDown
           $1bcd = PlayerControls.endDriftToCenterY
           $1bcd = PlayerControls.start
           $1bd8 = PlayerControls.endStart
           $1bd8 = PlayerControls.AButton
           $1be5 = PlayerControls.activateAttack
           $1bed = PlayerControls.endA
           $1bed = PlayerControls.BButton
           $1bfa = PlayerControls.activateBoost
           $1c04 = PlayerControls.endB
           $1c05 = MovePlayer
           $1c1a = MovePlayerAutoFlyUp
           $1c33 = FallCactusDown
           $1c48 = FallCactusDown.skipAcceleration
           $1c51 = PopBalloonAnimation
           $1c62 = PopBalloonAnimation.canSwitchFrames
           $1c6e = PopBalloonAnimation.frame0
           $1c80 = PopBalloonAnimation.frame1
           $1c92 = PopBalloonAnimation.clear
           $1ca2 = PopBalloonAnimation.endFrame
           $1caa = CactusFalling
           $1cc4 = CactusFalling.offScreen
           $1ccc = CactusFalling.end
           $1ccd = NoMoreLives
           $1cd7 = PlayerUpdate
           $1cde = PlayerUpdate.isAlive
           $1cfa = PlayerUpdate.popped
           $1d05 = PlayerUpdate.popping
           $1d0d = PlayerUpdate.falling
           $1d16 = PlayerUpdate.respawning
           $1d1d = PlayerUpdate.noMoreLives
           $1d21 = PlayerUpdate.respawn
           $1d25 = DeathOfPlayer
           $1d49 = InvincibleBlink
           $1d4f = InvincibleBlink.isStillInvincible
           $1d5e = InvincibleBlink.blinkNormal
           $1d65 = InvincibleBlink.blinkFast
           $1d69 = InvincibleBlink.blinkEnd
           $1d7e = InvincibleBlink.defaultPalette
  SECTION: $1d93-$2068 ($02d6 bytes) ["level data"]
           $1d93 = Level1
           $1df0 = Level2
           $1ea7 = Level3
           $1f98 = InitializeNewLevel
           $1fb0 = InitializeNewLevel.level1
           $1fb5 = InitializeNewLevel.level2
           $1fba = InitializeNewLevel.level3
           $1fbf = InitializeNewLevel.level4
           $1fc0 = InitializeNewLevel.setLevelDataAddress
           $1fc8 = InitializeLevelVars
           $1fd1 = LevelDataHandler
           $1fd9 = LevelDataHandler.notEmpty
           $1ff8 = LevelDataHandler.pointBalloon
           $1ffc = LevelDataHandler.balloonCactus
           $2000 = LevelDataHandler.bird
           $2004 = LevelDataHandler.bomb
           $2008 = LevelDataHandler.porcupine
           $200c = LevelDataManager
           $2030 = LevelDataManager.spawn
           $203d = LevelDataManager.wait
           $204a = LevelDataManager.waitEnd
           $2058 = LevelDataManager.end
  SECTION: $2069-$226c ($0204 bytes) ["game"]
           $2069 = InitializeGame
           $2071 = LoadLevel1Graphics
           $2094 = LoadLevel2Graphics
           $20b6 = TryToUnpause
           $20cd = TryToUnpause.end
           $20ce = SpawnCountdown
           $20f9 = SpawnCountdown.end
           $20fa = Countdown
           $2101 = Countdown.hasCountedDown
           $2104 = Countdown.countdown
           $2115 = Countdown.balloonPop
           $211d = Countdown.frames
           $2146 = Countdown.frame0
           $2168 = Countdown.frame1
           $218a = Countdown.frame2
           $21ab = Countdown.frame3
           $21cc = Countdown.frame4
           $21ed = Countdown.frame5
           $220b = Countdown.remove
           $2220 = Countdown.endFrame
           $2227 = Countdown.end
           $2229 = UpdateSprites
           $223f = UpdateGameCountdown
           $2254 = UpdateGame
  SECTION: $226d-$23df ($0173 bytes) ["rom"]
           $226d = Start
           $22aa = MenuLoopOpening
           $22b6 = StartMenu
           $22ce = MenuLoop
           $22dd = StartGame
           $2316 = OpeningCutsceneLoop
           $2325 = SetupNextLevel
           $2346 = SetupNextLevel.level1
           $234e = SetupNextLevel.level2
           $2356 = SetupNextLevel.endLevelSetup
           $2356 = SetupNextLevel.level6
           $2356 = SetupNextLevel.level5
           $2356 = SetupNextLevel.level4
           $2356 = SetupNextLevel.level3
           $2386 = GameCountdownLoop
           $2395 = GameLoop
           $23a4 = StageClear
           $23d1 = StageClearLoop
  SECTION: $23e0-$2534 ($0155 bytes) ["window"]
           $23e0 = RefreshScore
           $2417 = RefreshTotal
           $244e = RefreshLives
           $2457 = RefreshBoostBar
           $2461 = RefreshBoostBar.isCharging
           $246d = RefreshBoostBar.isEmpty
           $2473 = RefreshBoostBar.is25Percent
           $247a = RefreshBoostBar.is50Percent
           $2481 = RefreshBoostBar.is75Percent
           $2488 = RefreshBoostBar.isReady
           $248e = RefreshAttackBar
           $2498 = RefreshAttackBar.isCharging
           $24a4 = RefreshAttackBar.isEmpty
           $24aa = RefreshAttackBar.is25Percent
           $24b1 = RefreshAttackBar.is50Percent
           $24b8 = RefreshAttackBar.is75Percent
           $24bf = RefreshAttackBar.isReady
           $24c5 = LoadWindow.loadTiles
           $24c5 = LoadWindow
           $24d1 = LoadWindow.drawMap
           $24eb = RefreshWindow
           $2501 = RefreshAddLives
           $2510 = RefreshAddLives.hasLivesToAdd
           $251d = RefreshStageClear
  SECTION: $2535-$2688 ($0154 bytes) ["interrupts"]
           $2535 = InitializeInterrupts
           $254b = VBlankInterrupt
           $255b = LCDInterrupt
           $2565 = LCDInterruptEnd
           $2569 = MenuLCDInterrupt
           $2579 = MenuLCDInterrupt.reset
           $2582 = MenuLCDInterrupt.far
           $2590 = MenuLCDInterrupt.close
           $259c = MenuLCDInterrupt.end
           $259f = SetMenuInterrupts
           $25ad = ParkLCDInterrupt
           $25b9 = ParkLCDInterrupt.clouds
           $25c7 = ParkLCDInterrupt.ground
           $25cc = ParkLCDInterrupt.end
           $25cf = SetParkInterrupts
           $25d3 = Level1LCDInterrupt
           $25e7 = Level1LCDInterrupt.reset
           $25f5 = Level1LCDInterrupt.far
           $2603 = Level1LCDInterrupt.middle
           $2611 = Level1LCDInterrupt.close
           $261d = Level1LCDInterrupt.end
           $2620 = SetLevel1Interrupts
           $262e = Level2LCDInterrupt
           $2642 = Level2LCDInterrupt.reset
           $2650 = Level2LCDInterrupt.far
           $265e = Level2LCDInterrupt.middle
           $266c = Level2LCDInterrupt.close
           $2678 = Level2LCDInterrupt.end
           $267b = SetLevel2Interrupts
  SECTION: $2689-$270a ($0082 bytes) ["collision"]
           $2689 = CollisionCheck
           $2694 = CollisionCheck.tryOtherY
           $26a0 = CollisionCheck.checkX
           $26ad = CollisionCheck.tryOtherX
           $26ba = CollisionCheck.collision
           $26bd = CollisionCheck.noCollision
           $26bf = CollisionWithPlayer
           $26cf = OffScreenXEnemies
           $26e0 = OffScreenXEnemies.end
           $26e2 = OffScreenYEnemies
           $26f3 = OffScreenYEnemies.end
           $26f5 = OffScreenX
           $26fd = OffScreenX.end
           $26ff = OffScreenY
           $2709 = OffScreenY.end
  SECTION: $270b-$2782 ($0078 bytes) ["controller"]
           $270b = InitializeController
           $2710 = ReadInput
           $2740 = JOY_RIGHT
           $2748 = JOY_LEFT
           $2750 = JOY_UP
           $2758 = JOY_DOWN
           $2760 = JOY_A
           $2768 = JOY_B
           $2770 = JOY_SELECT
           $2778 = JOY_START
           $2780 = JOY_FALSE
  SECTION: $2783-$27dc ($005a bytes) ["scroll"]
           $2783 = InitializeParallaxScrolling
           $278e = IncrementScrollOffset
           $278e = IncrementScrollOffset.close
           $279c = IncrementScrollOffset.middle
           $27aa = IncrementScrollOffset.far
           $27b8 = IncrementScrollOffset.end
           $27b9 = HorizontalScroll
           $27c6 = HorizontalScroll.end
           $27c8 = VerticalScroll
           $27d5 = VerticalScroll.end
           $27d7 = ResetScroll
  SECTION: $27dd-$27fa ($001e bytes) ["OAM DMA routine"]
           $27dd = CopyDMARoutine
           $27e4 = CopyDMARoutine.copy
           $27eb = DMARoutine
           $27ef = DMARoutine.wait
           $27f3 = DMARoutineEnd
           $27f3 = OAMDMA
    SLACK: $1821 bytes

ROMX bank #1:
  SECTION: $4000-$52cf ($12d0 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4340 = OpeningCutsceneTilesEnd
           $4340 = OpeningCutsceneSpriteTiles
           $4380 = OpeningCutsceneSpriteTilesEnd
           $4380 = IntermissionTiles
           $4530 = IntermissionTilesEnd
           $4530 = Level2Tiles
           $49f0 = Level2TilesEnd
           $49f0 = CountdownTiles
           $49f0 = Level3TilesEnd
           $49f0 = Level3Tiles
           $4af0 = CountdownTilesEnd
           $4af0 = WindowTiles
           $4cf0 = WindowTilesEnd
           $4cf0 = MenuTiles
           $4d10 = MenuTilesEnd
           $4d10 = MenuTitleTiles
           $52d0 = MenuTitleTilesEnd
  SECTION: $52d0-$5e0d ($0b3e bytes) ["Song Data2"]
           $52d0 = angryTheme
           $52e5 = order_cnt
           $52e6 = order1
           $52f0 = order2
           $52fa = order3
           $5304 = order4
           $530e = P0
           $53ce = P1
           $548e = P2
           $554e = P3
           $560e = P4
           $56ce = P5
           $578e = P6
           $584e = P7
           $590e = P8
           $59ce = P9
           $5a8e = P10
           $5b4e = P11
           $5c0e = duty_instruments
           $5c0e = itSquareinst1
           $5c12 = itSquareinst2
           $5c16 = itSquareinst3
           $5c1a = itSquareinst4
           $5c1e = itSquareinst5
           $5c22 = itSquareinst6
           $5c26 = itSquareinst7
           $5c2a = itSquareinst8
           $5c2e = itSquareinst9
           $5c32 = itSquareinst10
           $5c36 = itSquareinst11
           $5c3a = itSquareinst12
           $5c3e = itSquareinst13
           $5c42 = itSquareinst14
           $5c46 = itSquareinst15
           $5c4a = wave_instruments
           $5c4a = itWaveinst1
           $5c4e = itWaveinst2
           $5c52 = itWaveinst3
           $5c56 = itWaveinst4
           $5c5a = itWaveinst5
           $5c5e = itWaveinst6
           $5c62 = itWaveinst7
           $5c66 = itWaveinst8
           $5c6a = itWaveinst9
           $5c6e = itWaveinst10
           $5c72 = itWaveinst11
           $5c76 = itWaveinst12
           $5c7a = itWaveinst13
           $5c7e = itWaveinst14
           $5c82 = itWaveinst15
           $5c86 = noise_instruments
           $5c86 = itNoiseinst1
           $5c8e = itNoiseinst2
           $5c96 = itNoiseinst3
           $5c9e = itNoiseinst4
           $5ca6 = itNoiseinst5
           $5cae = itNoiseinst6
           $5cb6 = itNoiseinst7
           $5cbe = itNoiseinst8
           $5cc6 = itNoiseinst9
           $5cce = itNoiseinst10
           $5cd6 = itNoiseinst11
           $5cde = itNoiseinst12
           $5ce6 = itNoiseinst13
           $5cee = itNoiseinst14
           $5cf6 = itNoiseinst15
           $5cfe = routines
           $5cfe = __end_hUGE_Routine_0
           $5cfe = __hUGE_Routine_0
           $5cff = __end_hUGE_Routine_1
           $5cff = __hUGE_Routine_1
           $5d00 = __end_hUGE_Routine_2
           $5d00 = __hUGE_Routine_2
           $5d01 = __end_hUGE_Routine_3
           $5d01 = __hUGE_Routine_3
           $5d02 = __end_hUGE_Routine_4
           $5d02 = __hUGE_Routine_4
           $5d03 = __end_hUGE_Routine_5
           $5d03 = __hUGE_Routine_5
           $5d04 = __end_hUGE_Routine_6
           $5d04 = __hUGE_Routine_6
           $5d05 = __end_hUGE_Routine_7
           $5d05 = __hUGE_Routine_7
           $5d06 = __hUGE_Routine_8
           $5d06 = __end_hUGE_Routine_8
           $5d07 = __hUGE_Routine_9
           $5d07 = __end_hUGE_Routine_9
           $5d08 = __hUGE_Routine_10
           $5d08 = __end_hUGE_Routine_10
           $5d09 = __hUGE_Routine_11
           $5d09 = __end_hUGE_Routine_11
           $5d0a = __hUGE_Routine_12
           $5d0a = __end_hUGE_Routine_12
           $5d0b = __hUGE_Routine_13
           $5d0b = __end_hUGE_Routine_13
           $5d0c = __end_hUGE_Routine_14
           $5d0c = __hUGE_Routine_14
           $5d0d = __end_hUGE_Routine_15
           $5d0d = __hUGE_Routine_15
           $5d0e = waves
           $5d0e = wave0
           $5d1e = wave1
           $5d2e = wave2
           $5d3e = wave3
           $5d4e = wave4
           $5d5e = wave5
           $5d6e = wave6
           $5d7e = wave7
           $5d8e = wave8
           $5d9e = wave9
           $5dae = wave10
           $5dbe = wave11
           $5dce = wave12
           $5dde = wave13
           $5dee = wave14
           $5dfe = wave15
  SECTION: $5e0e-$632b ($051e bytes) ["Song Data"]
           $5e0e = menuTheme
           $5e23 = order_cnt
           $5e24 = order1
           $5e26 = order2
           $5e28 = order3
           $5e2a = order4
           $5e2c = P1
           $5eec = P2
           $5fac = P3
           $606c = P6
           $612c = duty_instruments
           $612c = itSquareinst1
           $6130 = itSquareinst2
           $6134 = itSquareinst3
           $6138 = itSquareinst4
           $613c = itSquareinst5
           $6140 = itSquareinst6
           $6144 = itSquareinst7
           $6148 = itSquareinst8
           $614c = itSquareinst9
           $6150 = itSquareinst10
           $6154 = itSquareinst11
           $6158 = itSquareinst12
           $615c = itSquareinst13
           $6160 = itSquareinst14
           $6164 = itSquareinst15
           $6168 = wave_instruments
           $6168 = itWaveinst1
           $616c = itWaveinst2
           $6170 = itWaveinst3
           $6174 = itWaveinst4
           $6178 = itWaveinst5
           $617c = itWaveinst6
           $6180 = itWaveinst7
           $6184 = itWaveinst8
           $6188 = itWaveinst9
           $618c = itWaveinst10
           $6190 = itWaveinst11
           $6194 = itWaveinst12
           $6198 = itWaveinst13
           $619c = itWaveinst14
           $61a0 = itWaveinst15
           $61a4 = noise_instruments
           $61a4 = itNoiseinst1
           $61ac = itNoiseinst2
           $61b4 = itNoiseinst3
           $61bc = itNoiseinst4
           $61c4 = itNoiseinst5
           $61cc = itNoiseinst6
           $61d4 = itNoiseinst7
           $61dc = itNoiseinst8
           $61e4 = itNoiseinst9
           $61ec = itNoiseinst10
           $61f4 = itNoiseinst11
           $61fc = itNoiseinst12
           $6204 = itNoiseinst13
           $620c = itNoiseinst14
           $6214 = itNoiseinst15
           $621c = routines
           $621c = __end_hUGE_Routine_0
           $621c = __hUGE_Routine_0
           $621d = __end_hUGE_Routine_1
           $621d = __hUGE_Routine_1
           $621e = __end_hUGE_Routine_2
           $621e = __hUGE_Routine_2
           $621f = __end_hUGE_Routine_3
           $621f = __hUGE_Routine_3
           $6220 = __end_hUGE_Routine_4
           $6220 = __hUGE_Routine_4
           $6221 = __end_hUGE_Routine_5
           $6221 = __hUGE_Routine_5
           $6222 = __end_hUGE_Routine_6
           $6222 = __hUGE_Routine_6
           $6223 = __end_hUGE_Routine_7
           $6223 = __hUGE_Routine_7
           $6224 = __hUGE_Routine_8
           $6224 = __end_hUGE_Routine_8
           $6225 = __hUGE_Routine_9
           $6225 = __end_hUGE_Routine_9
           $6226 = __hUGE_Routine_10
           $6226 = __end_hUGE_Routine_10
           $6227 = __hUGE_Routine_11
           $6227 = __end_hUGE_Routine_11
           $6228 = __hUGE_Routine_12
           $6228 = __end_hUGE_Routine_12
           $6229 = __hUGE_Routine_13
           $6229 = __end_hUGE_Routine_13
           $622a = __end_hUGE_Routine_14
           $622a = __hUGE_Routine_14
           $622b = __end_hUGE_Routine_15
           $622b = __hUGE_Routine_15
           $622c = waves
           $622c = wave0
           $623c = wave1
           $624c = wave2
           $625c = wave3
           $626c = wave4
           $627c = wave5
           $628c = wave6
           $629c = wave7
           $62ac = wave8
           $62bc = wave9
           $62cc = wave10
           $62dc = wave11
           $62ec = wave12
           $62fc = wave13
           $630c = wave14
           $631c = wave15
  SECTION: $632c-$6728 ($03fd bytes) ["balloon cactus"]
           $632c = InitializeBalloonCactus
           $6335 = InitializeBalloonCactus.loop_u1
           $6340 = SetStruct
           $637d = SpawnBalloonCactus
           $6390 = SpawnBalloonCactus.availableSpace
           $6399 = SpawnBalloonCactus.availableOAMSpace
           $63c7 = SpawnBalloonCactus.isLeftside
           $63c7 = SpawnBalloonCactus.balloonLeft
           $63e0 = SpawnBalloonCactus.balloonRight
           $63f0 = SpawnBalloonCactus.cactusLeft
           $63fe = SpawnBalloonCactus.cactusRight
           $640e = SpawnBalloonCactus.setStruct
           $6413 = SpawnBalloonCactus.end
           $6418 = ClearCactus
           $642e = ClearBalloon
           $6444 = Clear
           $644e = PopBalloonAnimation
           $645f = PopBalloonAnimation.canSwitchFrames
           $646d = PopBalloonAnimation.frame0
           $6491 = PopBalloonAnimation.frame1
           $64b5 = PopBalloonAnimation.clear
           $64d6 = PopBalloonAnimation.endFrame
           $64dd = PopBalloonAnimation.end
           $64de = CactusFallingCollision
           $64df = CactusFallingCollision.checkBird
           $64e6 = CactusFallingCollision.birdLoop
           $64f7 = CactusFallingCollision.isAlive
           $6527 = CactusFallingCollision.hitBird
           $6535 = CactusFallingCollision.checkBirdLoop
           $6542 = CactusFallingCollision.end
           $6544 = CactusFalling
           $6556 = CactusFalling.falling
           $656f = CactusFalling.skipAcceleration
           $657b = CactusFalling.offScreen
           $657f = UpdateBalloonPosition
           $657f = UpdateBalloonPosition.balloonLeft
           $6595 = UpdateBalloonPosition.balloonRight
           $65a0 = UpdateCactusPosition
           $65a0 = UpdateCactusPosition.cactusLeft
           $65b6 = UpdateCactusPosition.cactusRight
           $65c1 = Move
           $65dc = Move.isLeftside
           $65ea = Move.updatePosition
           $65f1 = DeathOfBalloonCactus
           $6622 = CollisionBalloonCactus
           $6622 = CollisionBalloonCactus.checkHit
           $663d = CollisionBalloonCactus.checkHitByBullet
           $665d = CollisionBalloonCactus.checkHitPlayer
           $6677 = BalloonCactusUpdate
           $667e = BalloonCactusUpdate.loop
           $66d5 = BalloonCactusUpdate.isAlive
           $66f2 = BalloonCactusUpdate.offScreen
           $66f7 = BalloonCactusUpdate.popped
           $6701 = BalloonCactusUpdate.notPopping
           $670b = BalloonCactusUpdate.checkLoop
           $671a = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6729-$6a9e ($0376 bytes) ["bird"]
           $6729 = InitializeBird
           $6732 = InitializeBird.loop_u1
           $673d = SetStruct
           $6762 = SpawnBird
           $6775 = SpawnBird.availableSpace
           $677f = SpawnBird.availableOAMSpace
           $679c = SpawnBird.isRightside
           $67a1 = SpawnBird.birdLeft
           $67ba = SpawnBird.birdMiddle
           $67ca = SpawnBird.birdRight
           $67dc = SpawnBird.isLeftside
           $67dc = SpawnBird.leftBirdLeft
           $67f5 = SpawnBird.leftBirdMiddle
           $6805 = SpawnBird.leftBirdRight
           $6815 = SpawnBird.setStruct
           $681a = SpawnBird.end
           $681f = BirdRightsideFlap
           $6826 = BirdRightsideFlap.soaring
           $684e = BirdRightsideFlap.flapping
           $687f = BirdLeftsideFlap
           $6886 = BirdLeftsideFlap.soaring
           $68ae = BirdLeftsideFlap.flapping
           $68df = Clear
           $68fc = UpdateBirdPosition
           $68fc = UpdateBirdPosition.birdLeft
           $6912 = UpdateBirdPosition.birdMiddle
           $691e = UpdateBirdPosition.birdRight
           $6929 = Move
           $6930 = Move.isRightside
           $693e = Move.isLeftside
           $6948 = Move.moveDown
           $6956 = Move.moveEnd
           $695a = BirdFall
           $6965 = BirdFall.checkOffscreenY
           $6977 = BirdFall.end
           $6979 = DeathOfBird
           $6991 = DeathOfBird.facingLeft
           $69bc = DeathOfBird.facingRight
           $69e7 = CollisionBird
           $69e7 = CollisionBird.checkHitPlayer
           $6a01 = BirdUpdate
           $6a08 = BirdUpdate.loop
           $6a46 = BirdUpdate.isAlive
           $6a6b = BirdUpdate.offScreen
           $6a70 = BirdUpdate.isDead
           $6a81 = BirdUpdate.checkLoop
  SECTION: $6a9f-$6d5f ($02c1 bytes) ["bomb"]
           $6a9f = InitializeBomb
           $6aa8 = InitializeBomb.loop_u1
           $6ab3 = SetStruct
           $6ad4 = SpawnBomb
           $6ae6 = SpawnBomb.availableSpace
           $6aef = SpawnBomb.availableOAMSpace
           $6b05 = SpawnBomb.balloonLeft
           $6b1f = SpawnBomb.balloonRight
           $6b30 = SpawnBomb.bombSpace
           $6b3b = SpawnBomb.setStruct
           $6b40 = SpawnBomb.end
           $6b45 = Clear
           $6b62 = Move
           $6b6a = Move.balloonLeft
           $6b80 = Move.balloonRight
           $6b8c = Move.bombSpace
           $6b97 = DeathOfBomb
           $6ba1 = CollisionBomb
           $6ba1 = CollisionBomb.checkHit
           $6bbf = CollisionBomb.checkHitByBullet
           $6bdf = CollisionBomb.end
           $6be0 = ExplosionAnimation
           $6bf1 = ExplosionAnimation.canSwitchFrames
           $6c09 = ExplosionAnimation.frame0
           $6c2e = ExplosionAnimation.frame1
           $6c71 = ExplosionAnimation.frame2
           $6c9d = ExplosionAnimation.frame3
           $6cc9 = ExplosionAnimation.clear
           $6ccd = ExplosionAnimation.endFrame
           $6cd4 = ExplosionAnimation.end
           $6cd5 = BombUpdate
           $6cdc = BombUpdate.loop
           $6d16 = BombUpdate.isAlive
           $6d33 = BombUpdate.offScreen
           $6d38 = BombUpdate.popped
           $6d42 = BombUpdate.checkLoop
  SECTION: $6d60-$6f83 ($0224 bytes) ["point balloon"]
           $6d60 = InitializePointBalloon
           $6d69 = InitializePointBalloon.loop_u1
           $6d74 = SetStruct
           $6d95 = SpawnPointBalloon
           $6da7 = SpawnPointBalloon.availableSpace
           $6db0 = SpawnPointBalloon.availableOAMSpace
           $6dc6 = SpawnPointBalloon.balloonLeft
           $6ddf = SpawnPointBalloon.balloonRight
           $6def = SpawnPointBalloon.setStruct
           $6df4 = SpawnPointBalloon.end
           $6df9 = PopBalloonAnimation
           $6e0a = PopBalloonAnimation.canSwitchFrames
           $6e16 = PopBalloonAnimation.frame0
           $6e3a = PopBalloonAnimation.frame1
           $6e5e = PopBalloonAnimation.clear
           $6e62 = PopBalloonAnimation.endFrame
           $6e6a = Clear
           $6e83 = Move
           $6e8a = Move.balloonLeft
           $6ea0 = Move.balloonRight
           $6eab = DeathOfPointBalloon
           $6ebd = CollisionPointBalloon
           $6ebd = CollisionPointBalloon.checkHit
           $6ed8 = CollisionPointBalloon.checkHitByBullet
           $6ef8 = CollisionPointBalloon.end
           $6ef9 = PointBalloonUpdate
           $6f00 = PointBalloonUpdate.loop
           $6f3a = PointBalloonUpdate.isAlive
           $6f57 = PointBalloonUpdate.offScreen
           $6f5c = PointBalloonUpdate.popped
           $6f66 = PointBalloonUpdate.checkLoop
           $6f75 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $6f84-$70cc ($0149 bytes) ["porcupine"]
           $6f84 = InitializePorcupine
           $6f8d = InitializePorcupine.loop_u1
           $6f98 = SetStruct
           $6fad = SpawnPorcupine
           $6fc0 = SpawnPorcupine.availableSpace
           $6fca = SpawnPorcupine.availableOAMSpace
           $6fe0 = SpawnPorcupine.topLeft
           $6ff9 = SpawnPorcupine.topMiddle
           $7009 = SpawnPorcupine.topMiddle2
           $7019 = SpawnPorcupine.topRight
           $7029 = SpawnPorcupine.bottomLeft
           $7039 = SpawnPorcupine.bottomMiddle
           $704b = SpawnPorcupine.bottomMiddle2
           $705d = SpawnPorcupine.bottomRight
           $706f = SpawnPorcupine.setStruct
           $7074 = SpawnPorcupine.end
           $7079 = PorcupineUpdate
           $7080 = PorcupineUpdate.loop
           $70ae = PorcupineUpdate.offScreen
           $70ae = PorcupineUpdate.isAlive
           $70b0 = PorcupineUpdate.isDead
           $70b0 = PorcupineUpdate.checkLoop
           $70bf = PorcupineUpdate.checkLoopSkipSet
  SECTION: $70cd-$720a ($013e bytes) ["menu"]
           $70cd = InitializeMenu
           $70d9 = LoadMenuOpeningGraphics
           $70f1 = LoadMenuGraphics
           $7123 = SpawnMenuCursor
           $712c = SpawnMenuCursor.availableSpace
           $7147 = SpawnMenuCursor.end
           $7148 = BlinkMenuCursor
           $7150 = BlinkMenuCursor.blink
           $7161 = BlinkMenuCursor.show
           $7165 = BlinkMenuCursor.empty
           $7169 = SelectMode
           $7172 = MenuInput
           $717c = MenuInput.moveSelected
           $7182 = MenuInput.selectMode
           $718b = MenuInput.end
           $718c = UpdateMenuOpening
           $71a8 = UpdateMenuOpening.startSound
           $71ad = UpdateMenuOpening.scrollUpTitle
           $71b9 = UpdateMenuOpening.endSound
           $71be = UpdateMenuOpening.scrollDownTitle
           $71ca = UpdateMenuOpening.scrollUpTitle2
           $71d6 = UpdateMenuOpening.fadeOut
           $71dc = UpdateMenuOpening.next
           $71e0 = UpdateMenuOpening.endFrame
           $71e7 = UpdateMenuOpening.end
           $71e8 = UpdateMenu
           $71e8 = UpdateMenu.fadeIn
           $71ee = UpdateMenu.hasFadedIn
           $7202 = UpdateMenu.fadeOut
  SECTION: $720b-$72d9 ($00cf bytes) ["opening cutscene"]
           $720b = InitializeOpeningCutscene
           $7210 = LoadParkGraphics
           $723a = SpawnHandWave
           $725e = HandWaveAnimation
           $7265 = HandWaveAnimation.frame0
           $7281 = HandWaveAnimation.frame1
           $729c = HandWaveAnimation.end
           $729d = UpdatePark.fadeIn
           $729d = UpdatePark
           $72a3 = UpdatePark.hasFadedIn
           $72bc = UpdatePark.fadeOut
           $72c4 = UpdatePark.skipFade
           $72c7 = UpdatePark.moveUp
           $72d0 = UpdatePark.flyUpNormal
           $72d6 = UpdatePark.flyUpFast
  SECTION: $72da-$73a7 ($00ce bytes) ["palettes"]
           $72da = ResetFading
           $72e8 = InitializePalettes
           $72fa = FadeOutPalettes
           $7301 = FadeOutPalettes.hasFadedIn
           $7304 = FadeOutPalettes.fadeOut
           $7324 = FadeOutPalettes.fade1
           $732c = FadeOutPalettes.fade2
           $7334 = FadeOutPalettes.fade3
           $733c = FadeOutPalettes.fade4
           $7342 = FadeOutPalettes.fadePalettes
           $7348 = FadeOutPalettes.increaseFrame
           $734f = FadeOutPalettes.end
           $7351 = FadeInPalettes
           $7358 = FadeInPalettes.hasFadedIn
           $735b = FadeInPalettes.fadeIn
           $737b = FadeInPalettes.fade1
           $7383 = FadeInPalettes.fade2
           $738b = FadeInPalettes.fade3
           $7393 = FadeInPalettes.fade4
           $7399 = FadeInPalettes.fadePalettes
           $739f = FadeInPalettes.increaseFrame
           $73a6 = FadeInPalettes.end
  SECTION: $73a8-$7461 ($00ba bytes) ["sound"]
           $73a8 = AUDIO_OFF
           $73ac = AUDIO_ON
           $73b1 = PopSound
           $73c4 = ExplosionSound
           $73d1 = WaveSound
           $73de = FallingSound
           $73f3 = RisingSound
           $7408 = StopSweepSound
           $740d = CollectSound
           $7422 = WrongAnswerSound
           $7439 = PercussionSound
           $7446 = BassSound
           $7457 = ClearSound
  SECTION: $7462-$7515 ($00b4 bytes) ["memory"]
           $7462 = MEMCPY
           $7462 = MEMCPY.loop
           $7466 = MEMCPY.checkLoop
           $746b = MEMCPY_WITH_OFFSET
           $746c = MEMCPY_WITH_OFFSET.loop
           $7477 = MEMCPY_WITH_OFFSET.checkLoop
           $747d = MEMCPY_SINGLE_SCREEN
           $747f = MEMCPY_SINGLE_SCREEN.loop
           $7493 = MEMCPY_SINGLE_SCREEN.checkLoop
           $7499 = ClearOAM
           $74a0 = ClearOAM.loop_u2
           $74a9 = ClearRAM
           $74b0 = ClearRAM.loop_u3
           $74b9 = RequestOAMSpace
           $74c2 = RequestOAMSpace.loop
           $74d9 = RequestOAMSpace.availableSpace
           $74de = RequestOAMSpace.sufficientSpace
           $74ee = RequestOAMSpace.isNotZero4
           $74ef = RequestOAMSpace.isNotZero3
           $74f0 = RequestOAMSpace.isNotZero2
           $74f1 = RequestOAMSpace.isNotZero1
           $74f3 = RequestOAMSpace.notEnoughSprites
           $74fb = RequestOAMSpace.end
           $74fe = RequestRAMSpace
           $74fe = RequestRAMSpace.loop
           $7503 = RequestRAMSpace.availableSpace
           $7507 = RequestRAMSpace.checkLoop
           $7514 = RequestRAMSpace.noFreeSpace
           $7515 = RequestRAMSpace.end
  SECTION: $7516-$75c0 ($00ab bytes) ["stage clear"]
           $7516 = InitializeStageClear
           $7523 = LoadStageClearGraphics
           $753e = UpdateStageClear
           $756e = UpdateStageClear.pause
           $757f = UpdateStageClear.copyFirstDigitToTotal
           $7593 = UpdateStageClear.copyPointsToTotal
           $75a3 = UpdateStageClear.addGainedLives
           $75b9 = UpdateStageClear.endFrame
  SECTION: $75c1-$763c ($007c bytes) ["score"]
           $75c1 = InitializeScore
           $75c9 = InitializeTotal
           $75d1 = AddPoints
           $75d8 = AddPoints.carry
           $75e1 = DecrementPoints
           $75ea = DecrementPoints.carry
           $75f1 = DecrementPoints.checkCapAtZero
           $75fa = DecrementPoints.noCap
           $75ff = IsScoreZero
           $760e = AddTotal
           $7611 = AddTotal.saveFourthDigit
           $7619 = AddTotal.toBCD
           $761d = AddTotal.carry
           $7621 = AddTotal.checkAddLife
           $762b = AddTotal.addLife
           $7636 = AddTotal.checkLoop
  SECTION: $763d-$7676 ($003a bytes) ["math"]
           $763d = MODULO
           $763f = MODULO.loop
           $7644 = DIVISION
           $764a = DIVISION.loop
           $764f = DIVISION.end
           $7652 = ToBCD
           $7668 = MULTIPLY
           $766a = MULTIPLY.loop
           $7675 = MULTIPLY.end
  SECTION: $7677-$76a8 ($0032 bytes) ["lcd"]
           $7677 = LCD_OFF
           $767e = LCD_ON
           $7685 = LCD_ON_NO_WINDOW
           $768c = WaitVBlank
           $7693 = WaitVBlank.loop
           $769e = SetupWindow
  SECTION: $76a9-$76bd ($0015 bytes) ["general initialization"]
           $76a9 = InitializeGeneralVars
  SECTION: $76be-$76c5 ($0008 bytes) ["timer"]
           $76be = UpdateGlobalTimer
    SLACK: $093a bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["level vars"]
           $c0f6 = wLevel
           $c0f7 = wLevelWaitCounter
           $c0f8 = wLevelDataAddress
  SECTION: $c0fa-$c0fc ($0003 bytes) ["stage clear vars"]
           $c0fa = wStageClearTimer
           $c0fb = wStageClearFrame
           $c0fc = wLivesToAdd
  SECTION: $c0fd-$c0ff ($0003 bytes) ["controller vars"]
           $c0fd = wControllerDown
           $c0fe = wControllerPressed
           $c0ff = wPaused
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["scroll vars"]
           $c1a0 = wParallaxClose
           $c1a1 = wParallaxMiddle
           $c1a2 = wParallaxFar
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["timer vars"]
           $c1a8 = wGlobalTimer
  SECTION: $c1a9-$c1a9 ($0001 byte) ["game vars"]
           $c1a9 = wCountdownFrame
  SECTION: $c1aa-$c1aa ($0001 byte) ["opening cutscene vars"]
           $c1aa = wHandWavingFrame
    SLACK: $0e55 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $27df bytes in 1 bank
    ROMX: $36c6 bytes in 1 bank
    WRAM0: $01ab bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
