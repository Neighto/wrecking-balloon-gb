ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c8 ($007e bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = CollisionFallingEnemy
           $008d = OffScreenXEnemies
           $009e = OffScreenXEnemies.end
           $00a0 = OffScreenYEnemies
           $00b1 = OffScreenYEnemies.end
           $00b3 = OffScreenX
           $00bb = OffScreenX.end
           $00bd = OffScreenY
           $00c7 = OffScreenY.end
  SECTION: $00c9-$00ec ($0024 bytes) ["scroll"]
           $00c9 = HorizontalScroll
           $00d6 = HorizontalScroll.end
           $00d8 = VerticalScroll
           $00e5 = VerticalScroll.end
           $00e7 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$08f0 ($07a1 bytes) ["Sound Driver"]
           $0150 = _hUGE_init_banked
           $0154 = _hUGE_init
           $0156 = continue_init
           $015f = _hUGE_mute_channel_banked
           $0163 = _hUGE_mute_channel
           $0165 = continue_mute
           $0170 = hUGE_mute_channel
           $0176 = hUGE_mute_channel.enable_loop
           $017d = hUGE_mute_channel.enable_cut
           $018a = _hUGE_set_position_banked
           $018e = _hUGE_set_position
           $0190 = continue_set_position
           $0197 = hUGE_init
           $019e = hUGE_init.fill_loop
           $01c2 = hUGE_init.copy_song_descriptor_loop
           $01cc = _refresh_patterns
           $01e6 = _refresh_patterns.load_pattern
           $01f6 = _load_note_data
           $0208 = _lookup_note
           $0212 = _convert_note
           $0220 = _convert_ch4_note
           $0237 = _update_channel
           $0241 = _update_channel1
           $024f = _update_channel2
           $025d = _update_channel3
           $026b = _update_channel4
           $027b = _playnote1
           $0296 = _playnote2
           $02b1 = _playnote3
           $02d2 = _playnote4
           $02e6 = _doeffect
           $02fb = _doeffect.jump
           $032b = setup_channel_pointer
           $0339 = fx_set_master_volume
           $033e = fx_call_routine
           $0360 = fx_call_routine.call_hl
           $0361 = fx_set_pan
           $0366 = fx_set_duty
           $036b = fx_set_duty.chan2
           $0375 = fx_set_duty.chan1
           $037f = fx_vol_slide
           $0386 = fx_vol_slide.loop
           $038b = fx_vol_slide.cont
           $03bd = fx_vol_slide.cont1
           $03c4 = fx_vol_slide.cont2
           $03d8 = _envelope_registers
           $03e0 = fx_note_delay
           $03f9 = fx_note_delay.play_note
           $0417 = _play_note_routines
           $0423 = fx_set_speed
           $0429 = hUGE_set_position
           $0429 = fx_pos_jump
           $0433 = fx_pattern_break
           $0438 = fx_note_cut
           $0440 = fx_note_cut.loop
           $0445 = fx_note_cut.cont
           $044a = note_cut
           $0461 = fx_set_volume
           $0462 = set_channel_volume
           $046d = set_chn_3_vol
           $047f = set_chn_3_vol.three
           $0483 = set_chn_3_vol.two
           $0487 = set_chn_3_vol.one
           $048b = set_chn_3_vol.zero
           $048c = set_chn_3_vol.done
           $048f = set_chn_2_vol
           $049f = set_chn_1_vol
           $04af = set_chn_4_vol
           $04bb = fx_vibrato
           $04ce = fx_vibrato.restore
           $04d3 = fx_vibrato.go_up
           $04de = fx_vibrato.finish_vibrato
           $04e4 = fx_arpeggio
           $04f0 = fx_arpeggio.greater_than_two
           $04f2 = fx_arpeggio.test_greater_than_two
           $0501 = fx_arpeggio.arp_options
           $0507 = fx_arpeggio.reset_arp
           $050a = fx_arpeggio.set_arp2
           $050f = fx_arpeggio.set_arp1
           $0510 = fx_arpeggio.finish_arp
           $0513 = fx_arpeggio.finish_skip_add
           $051c = fx_porta_up
           $052b = fx_porta_up.finish
           $0532 = fx_porta_down
           $0544 = fx_toneporta
           $0556 = fx_toneporta.return_skip
           $0560 = fx_toneporta.do_toneporta
           $0575 = fx_toneporta.high_byte_same
           $057b = fx_toneporta.add
           $058d = fx_toneporta.subtract
           $05a3 = fx_toneporta.set_exact
           $05a5 = fx_toneporta.done
           $05b8 = _setup_instrument_pointer_ch4
           $05c3 = _setup_instrument_pointer
           $05ca = _setup_instrument_pointer.finish
           $05d3 = _hUGE_dosound_banked
           $05d3 = _hUGE_dosound
           $0612 = _hUGE_dosound.write_mask1
           $0615 = _hUGE_dosound.do_setvol1
           $0628 = _hUGE_dosound.after_note1
           $065d = _hUGE_dosound.write_mask2
           $0660 = _hUGE_dosound.do_setvol2
           $0673 = _hUGE_dosound.after_note2
           $06fa = _hUGE_dosound.no_wave_copy
           $06fb = _hUGE_dosound.write_mask3
           $06fe = _hUGE_dosound.do_setvol3
           $0709 = _hUGE_dosound.after_note3
           $075a = _hUGE_dosound.write_mask4
           $075d = _hUGE_dosound.do_setvol4
           $0768 = _hUGE_dosound.after_note4
           $076b = _hUGE_dosound.process_effects
           $0787 = _hUGE_dosound.after_effect1
           $07a3 = _hUGE_dosound.after_effect2
           $07bf = _hUGE_dosound.after_effect3
           $080a = _hUGE_dosound.done_macro
           $0813 = process_tick
           $0813 = _hUGE_dosound.after_effect4
           $0825 = _newrow
           $083d = _newrow.no_break
           $0848 = _neworder
           $0855 = _update_current_order
           $085c = _noreset
           $0861 = note_table
  SECTION: $08f1-$0fb0 ($06c0 bytes) ["tilemaps"]
           $08f1 = OpeningCutsceneMap
           $0b31 = OpeningCutsceneMapEnd
           $0b31 = Level1Map
           $0d31 = MenuMap
           $0d31 = Level1MapEnd
           $0d31 = World2MapEnd
           $0d31 = World2Map
           $0f71 = WindowMap
           $0f71 = MenuMapEnd
           $0fb1 = WindowMapEnd
  SECTION: $0fb1-$1432 ($0482 bytes) ["player"]
           $0fb1 = InitializePlayer
           $1004 = UpdateBalloonPosition
           $1004 = UpdateBalloonPosition.balloonLeft
           $1011 = UpdateBalloonPosition.balloonRight
           $101c = UpdateCactusPosition
           $101c = UpdateCactusPosition.cactusLeft
           $1029 = UpdateCactusPosition.cactusRight
           $1034 = SpawnPlayer
           $1034 = SpawnPlayer.cactusLeft
           $1044 = SpawnPlayer.cactusRight
           $1054 = SpawnPlayer.balloonLeft
           $1064 = SpawnPlayer.balloonRight
           $1075 = ClearPlayerCactus
           $1082 = ClearPlayerBalloon
           $108f = RespawnPlayer
           $10a2 = MoveRight
           $10b2 = MoveRight.canCactusDriftLeft
           $10c4 = MoveRight.cactusDriftLeft
           $10c6 = MoveLeft
           $10da = MoveLeft.canCactusDriftRight
           $10eb = MoveLeft.cactusDriftRight
           $10ed = MoveDown
           $10fd = MoveDown.canCactusDriftUp
           $110f = MoveDown.cactusDriftUp
           $1111 = ChargeBoost
           $1117 = ChargeBoost.isCharging
           $111e = ChargeBoost.resetBoost
           $1124 = ChargeAttack
           $112a = ChargeAttack.isCharging
           $112f = SpawnBullet
           $1149 = SpawnBullet.spawnFromLeft
           $1151 = SpawnBullet.leftOAM
           $115f = SpawnBullet.spawnFromRight
           $1167 = SpawnBullet.rightOAM
           $1175 = ClearBullet
           $1181 = BulletUpdate
           $1187 = BulletUpdate.isAlive
           $1192 = BulletUpdate.offScreen
           $1196 = BulletUpdate.onScreen
           $119c = BulletUpdate.move
           $11a6 = BulletUpdate.moveLeft
           $11aa = BulletUpdate.moveRight
           $11ac = BulletUpdate.endMove
           $11b4 = PlayerControls
           $11b4 = PlayerControls.right
           $11c7 = PlayerControls.moveRight
           $11cf = PlayerControls.endRight
           $11cf = PlayerControls.left
           $11e2 = PlayerControls.moveLeft
           $11e9 = PlayerControls.endLeft
           $11e9 = PlayerControls.up
           $11fc = PlayerControls.moveUp
           $1210 = PlayerControls.endUp
           $1210 = PlayerControls.down
           $1226 = PlayerControls.endDown
           $1226 = PlayerControls.canCactusDriftCenterX
           $1244 = PlayerControls.driftCenterXRight
           $1247 = PlayerControls.driftCenterXLeft
           $1248 = PlayerControls.endDriftToCenterX
           $1248 = PlayerControls.canCactusDriftCenterY
           $1269 = PlayerControls.driftCenterYUp
           $126c = PlayerControls.driftCenterYDown
           $126d = PlayerControls.endDriftToCenterY
           $126d = PlayerControls.start
           $1278 = PlayerControls.endStart
           $1278 = PlayerControls.AButton
           $1285 = PlayerControls.activateAttack
           $128d = PlayerControls.endA
           $128d = PlayerControls.BButton
           $129a = PlayerControls.activateBoost
           $12a4 = PlayerControls.endB
           $12a5 = MovePlayer
           $12ba = MovePlayerAutoFlyUp
           $12d3 = FallCactusDown
           $12e8 = FallCactusDown.skipAcceleration
           $12f1 = PopBalloonAnimation
           $1302 = PopBalloonAnimation.canSwitchFrames
           $130e = PopBalloonAnimation.frame0
           $1320 = PopBalloonAnimation.frame1
           $1332 = PopBalloonAnimation.clear
           $1342 = PopBalloonAnimation.endFrame
           $134a = CactusFalling
           $1364 = CactusFalling.offScreen
           $136c = CactusFalling.end
           $136d = NoMoreLives
           $1377 = PlayerUpdate
           $137e = PlayerUpdate.isAlive
           $139a = PlayerUpdate.popped
           $13a5 = PlayerUpdate.popping
           $13ad = PlayerUpdate.falling
           $13b6 = PlayerUpdate.respawning
           $13bd = PlayerUpdate.noMoreLives
           $13c1 = PlayerUpdate.respawn
           $13c5 = DeathOfPlayer
           $13e9 = InvincibleBlink
           $13ef = InvincibleBlink.isStillInvincible
           $13fe = InvincibleBlink.blinkNormal
           $1405 = InvincibleBlink.blinkFast
           $1409 = InvincibleBlink.blinkEnd
           $141e = InvincibleBlink.defaultPalette
  SECTION: $1433-$16a9 ($0277 bytes) ["graphics"]
           $1433 = AddBGTiles8800Method
           $143d = AddBGTiles8800Method.tilesFitBlock
           $1442 = AddBGTiles8800Method.tilesExceedBlock
           $145c = AddBGTiles8800Method.end
           $145f = LoadPlayerTiles
           $146c = LoadWindow
           $146c = LoadWindow.loadTiles
           $1478 = LoadWindow.loadMap
           $1487 = LoadEnemyTiles
           $14a0 = LoadWorld1
           $14bc = LoadParkData
           $14e7 = LoadGameData
           $14eb = LoadMenuOpeningData
           $1507 = LoadMenuData
           $1520 = RefreshScore
           $155a = RefreshLives
           $1563 = RefreshBoostBar
           $156d = RefreshBoostBar.isCharging
           $1577 = RefreshBoostBar.isHalfReady
           $157e = RefreshBoostBar.isReady
           $1584 = RefreshAttackBar
           $158e = RefreshAttackBar.isCharging
           $1598 = RefreshAttackBar.isHalfReady
           $159f = RefreshAttackBar.isReady
           $15a5 = RefreshWindow
           $15b8 = RefreshWindow.end
           $15b9 = ClearAllTiles
           $15c2 = ClearAllTiles.loop_u4
           $15d1 = ClearAllTiles.loop_u5
           $15e0 = ClearAllTiles.loop_u6
           $15eb = ClearMap
           $15f4 = ClearMap.loop_u7
           $15ff = ReplaceTilemapHorizontal
           $1628 = ReplaceTilemapHorizontal.handleZero
           $162a = ReplaceTilemapHorizontal.handleZeroEnd
           $1636 = ReplaceTilemapHorizontal.loop
           $1654 = ReplaceTilemapHorizontal.end
           $1659 = MoveToNextTilemap
           $166c = MoveToNextTilemap.canUpdateTilemap
           $167f = MoveToNextTilemap.clouds1
           $1694 = MoveToNextTilemap.clouds2
           $16a7 = MoveToNextTilemap.end
  SECTION: $16aa-$17a5 ($00fc bytes) ["level data"]
           $16aa = Set1
           $16ad = Set2
           $16ad = Set1End
           $16b3 = Set3
           $16b3 = Set2End
           $16bc = Set4
           $16bc = Set3End
           $16c2 = Set4End
           $16c2 = Set5
           $16cb = Set5End
           $16cb = Set6
           $16d1 = Set6End
           $16d1 = Set7
           $16d7 = Set8
           $16d7 = Set7End
           $16e3 = Level1
           $16e3 = Set8End
           $16f0 = Level2
           $16f5 = InitializeNewLevel
           $16fd = InitializeLevelVars
           $1706 = LevelDataHandler
           $1706 = LevelDataHandler.loop
           $172a = LevelDataHandler.pointBalloon
           $172f = LevelDataHandler.balloonCactus
           $1734 = LevelDataHandler.bird
           $1739 = LevelDataHandler.bomb
           $173e = LevelDataHandler.porcupine
           $1743 = LevelDataHandler.empty
           $1745 = LevelDataHandler.loopCheck
           $174b = LevelDataManager
           $176b = LevelDataManager.spawn
           $1781 = LevelDataManager.wait
           $178e = LevelDataManager.waitEnd
           $179b = LevelDataManager.end
  SECTION: $17a6-$189f ($00fa bytes) ["rom"]
           $17a6 = Start
           $17e0 = MenuLoopOpening
           $17e0 = StartMenu
           $17f8 = MenuLoop
           $17f8 = StartGame
           $1831 = ParkLoop
           $1840 = SetupNextLevel
           $1882 = GameCountdownLoop
           $1891 = GameLoop
  SECTION: $18a0-$1986 ($00e7 bytes) ["interrupts"]
           $18a0 = InitializeInterrupts
           $18b6 = VBlankInterrupt
           $18c6 = LCDInterrupt
           $18d0 = LCDInterruptEnd
           $18d4 = MenuLCDInterrupt
           $18e4 = MenuLCDInterrupt.reset
           $18ed = MenuLCDInterrupt.far
           $18fb = MenuLCDInterrupt.close
           $1907 = MenuLCDInterrupt.end
           $190a = SetMenuInterrupts
           $1918 = ParkLCDInterrupt
           $1924 = ParkLCDInterrupt.clouds
           $1932 = ParkLCDInterrupt.ground
           $1937 = ParkLCDInterrupt.end
           $193a = SetParkInterrupts
           $193e = GameLCDInterrupt
           $194e = GameLCDInterrupt.reset
           $195c = GameLCDInterrupt.far
           $196a = GameLCDInterrupt.close
           $1976 = GameLCDInterrupt.end
           $1979 = SetGameInterrupts
  SECTION: $1987-$19fe ($0078 bytes) ["controller"]
           $1987 = InitializeController
           $198c = ReadInput
           $19bc = JOY_RIGHT
           $19c4 = JOY_LEFT
           $19cc = JOY_UP
           $19d4 = JOY_DOWN
           $19dc = JOY_A
           $19e4 = JOY_B
           $19ec = JOY_SELECT
           $19f4 = JOY_START
           $19fc = JOY_FALSE
  SECTION: $19ff-$1a1c ($001e bytes) ["OAM DMA routine"]
           $19ff = CopyDMARoutine
           $1a06 = CopyDMARoutine.copy
           $1a0d = DMARoutine
           $1a11 = DMARoutine.wait
           $1a15 = DMARoutineEnd
           $1a15 = OAMDMA
    SLACK: $2610 bytes

ROMX bank #1:
  SECTION: $4000-$57af ($17b0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = OpeningCutsceneTiles
           $4620 = OpeningCutsceneTilesEnd
           $4620 = OpeningCutsceneSpriteTiles
           $4660 = Level1Tiles
           $4660 = OpeningCutsceneSpriteTilesEnd
           $4b40 = CountdownTiles
           $4b40 = Level1TilesEnd
           $4c40 = CountdownTilesEnd
           $4c40 = WindowTiles
           $4e10 = WindowTilesEnd
           $4e10 = MenuTiles
           $4e30 = MenuTilesEnd
           $4e30 = MenuTitleTiles
           $57b0 = MenuTitleTilesEnd
  SECTION: $57b0-$62ed ($0b3e bytes) ["Song Data2"]
           $57b0 = angryTheme
           $57c5 = order_cnt
           $57c6 = order1
           $57d0 = order2
           $57da = order3
           $57e4 = order4
           $57ee = P0
           $58ae = P1
           $596e = P2
           $5a2e = P3
           $5aee = P4
           $5bae = P5
           $5c6e = P6
           $5d2e = P7
           $5dee = P8
           $5eae = P9
           $5f6e = P10
           $602e = P11
           $60ee = duty_instruments
           $60ee = itSquareinst1
           $60f2 = itSquareinst2
           $60f6 = itSquareinst3
           $60fa = itSquareinst4
           $60fe = itSquareinst5
           $6102 = itSquareinst6
           $6106 = itSquareinst7
           $610a = itSquareinst8
           $610e = itSquareinst9
           $6112 = itSquareinst10
           $6116 = itSquareinst11
           $611a = itSquareinst12
           $611e = itSquareinst13
           $6122 = itSquareinst14
           $6126 = itSquareinst15
           $612a = wave_instruments
           $612a = itWaveinst1
           $612e = itWaveinst2
           $6132 = itWaveinst3
           $6136 = itWaveinst4
           $613a = itWaveinst5
           $613e = itWaveinst6
           $6142 = itWaveinst7
           $6146 = itWaveinst8
           $614a = itWaveinst9
           $614e = itWaveinst10
           $6152 = itWaveinst11
           $6156 = itWaveinst12
           $615a = itWaveinst13
           $615e = itWaveinst14
           $6162 = itWaveinst15
           $6166 = noise_instruments
           $6166 = itNoiseinst1
           $616e = itNoiseinst2
           $6176 = itNoiseinst3
           $617e = itNoiseinst4
           $6186 = itNoiseinst5
           $618e = itNoiseinst6
           $6196 = itNoiseinst7
           $619e = itNoiseinst8
           $61a6 = itNoiseinst9
           $61ae = itNoiseinst10
           $61b6 = itNoiseinst11
           $61be = itNoiseinst12
           $61c6 = itNoiseinst13
           $61ce = itNoiseinst14
           $61d6 = itNoiseinst15
           $61de = routines
           $61de = __end_hUGE_Routine_0
           $61de = __hUGE_Routine_0
           $61df = __end_hUGE_Routine_1
           $61df = __hUGE_Routine_1
           $61e0 = __end_hUGE_Routine_2
           $61e0 = __hUGE_Routine_2
           $61e1 = __end_hUGE_Routine_3
           $61e1 = __hUGE_Routine_3
           $61e2 = __end_hUGE_Routine_4
           $61e2 = __hUGE_Routine_4
           $61e3 = __end_hUGE_Routine_5
           $61e3 = __hUGE_Routine_5
           $61e4 = __end_hUGE_Routine_6
           $61e4 = __hUGE_Routine_6
           $61e5 = __end_hUGE_Routine_7
           $61e5 = __hUGE_Routine_7
           $61e6 = __hUGE_Routine_8
           $61e6 = __end_hUGE_Routine_8
           $61e7 = __hUGE_Routine_9
           $61e7 = __end_hUGE_Routine_9
           $61e8 = __hUGE_Routine_10
           $61e8 = __end_hUGE_Routine_10
           $61e9 = __hUGE_Routine_11
           $61e9 = __end_hUGE_Routine_11
           $61ea = __hUGE_Routine_12
           $61ea = __end_hUGE_Routine_12
           $61eb = __hUGE_Routine_13
           $61eb = __end_hUGE_Routine_13
           $61ec = __end_hUGE_Routine_14
           $61ec = __hUGE_Routine_14
           $61ed = __end_hUGE_Routine_15
           $61ed = __hUGE_Routine_15
           $61ee = waves
           $61ee = wave0
           $61fe = wave1
           $620e = wave2
           $621e = wave3
           $622e = wave4
           $623e = wave5
           $624e = wave6
           $625e = wave7
           $626e = wave8
           $627e = wave9
           $628e = wave10
           $629e = wave11
           $62ae = wave12
           $62be = wave13
           $62ce = wave14
           $62de = wave15
  SECTION: $62ee-$680b ($051e bytes) ["Song Data"]
           $62ee = menuTheme
           $6303 = order_cnt
           $6304 = order1
           $6306 = order2
           $6308 = order3
           $630a = order4
           $630c = P1
           $63cc = P2
           $648c = P3
           $654c = P6
           $660c = duty_instruments
           $660c = itSquareinst1
           $6610 = itSquareinst2
           $6614 = itSquareinst3
           $6618 = itSquareinst4
           $661c = itSquareinst5
           $6620 = itSquareinst6
           $6624 = itSquareinst7
           $6628 = itSquareinst8
           $662c = itSquareinst9
           $6630 = itSquareinst10
           $6634 = itSquareinst11
           $6638 = itSquareinst12
           $663c = itSquareinst13
           $6640 = itSquareinst14
           $6644 = itSquareinst15
           $6648 = wave_instruments
           $6648 = itWaveinst1
           $664c = itWaveinst2
           $6650 = itWaveinst3
           $6654 = itWaveinst4
           $6658 = itWaveinst5
           $665c = itWaveinst6
           $6660 = itWaveinst7
           $6664 = itWaveinst8
           $6668 = itWaveinst9
           $666c = itWaveinst10
           $6670 = itWaveinst11
           $6674 = itWaveinst12
           $6678 = itWaveinst13
           $667c = itWaveinst14
           $6680 = itWaveinst15
           $6684 = noise_instruments
           $6684 = itNoiseinst1
           $668c = itNoiseinst2
           $6694 = itNoiseinst3
           $669c = itNoiseinst4
           $66a4 = itNoiseinst5
           $66ac = itNoiseinst6
           $66b4 = itNoiseinst7
           $66bc = itNoiseinst8
           $66c4 = itNoiseinst9
           $66cc = itNoiseinst10
           $66d4 = itNoiseinst11
           $66dc = itNoiseinst12
           $66e4 = itNoiseinst13
           $66ec = itNoiseinst14
           $66f4 = itNoiseinst15
           $66fc = routines
           $66fc = __end_hUGE_Routine_0
           $66fc = __hUGE_Routine_0
           $66fd = __end_hUGE_Routine_1
           $66fd = __hUGE_Routine_1
           $66fe = __end_hUGE_Routine_2
           $66fe = __hUGE_Routine_2
           $66ff = __end_hUGE_Routine_3
           $66ff = __hUGE_Routine_3
           $6700 = __end_hUGE_Routine_4
           $6700 = __hUGE_Routine_4
           $6701 = __end_hUGE_Routine_5
           $6701 = __hUGE_Routine_5
           $6702 = __end_hUGE_Routine_6
           $6702 = __hUGE_Routine_6
           $6703 = __end_hUGE_Routine_7
           $6703 = __hUGE_Routine_7
           $6704 = __hUGE_Routine_8
           $6704 = __end_hUGE_Routine_8
           $6705 = __hUGE_Routine_9
           $6705 = __end_hUGE_Routine_9
           $6706 = __hUGE_Routine_10
           $6706 = __end_hUGE_Routine_10
           $6707 = __hUGE_Routine_11
           $6707 = __end_hUGE_Routine_11
           $6708 = __hUGE_Routine_12
           $6708 = __end_hUGE_Routine_12
           $6709 = __hUGE_Routine_13
           $6709 = __end_hUGE_Routine_13
           $670a = __end_hUGE_Routine_14
           $670a = __hUGE_Routine_14
           $670b = __end_hUGE_Routine_15
           $670b = __hUGE_Routine_15
           $670c = waves
           $670c = wave0
           $671c = wave1
           $672c = wave2
           $673c = wave3
           $674c = wave4
           $675c = wave5
           $676c = wave6
           $677c = wave7
           $678c = wave8
           $679c = wave9
           $67ac = wave10
           $67bc = wave11
           $67cc = wave12
           $67dc = wave13
           $67ec = wave14
           $67fc = wave15
  SECTION: $680c-$6b9e ($0393 bytes) ["balloon cactus"]
           $680c = InitializeBalloonCactus
           $6815 = InitializeBalloonCactus.loop_u1
           $6820 = SetStruct
           $685d = SpawnBalloonCactus
           $6870 = SpawnBalloonCactus.availableSpace
           $6879 = SpawnBalloonCactus.availableOAMSpace
           $68a7 = SpawnBalloonCactus.isLeftside
           $68a7 = SpawnBalloonCactus.balloonLeft
           $68c0 = SpawnBalloonCactus.balloonRight
           $68d0 = SpawnBalloonCactus.cactusLeft
           $68de = SpawnBalloonCactus.cactusRight
           $68ee = SpawnBalloonCactus.setStruct
           $68f3 = SpawnBalloonCactus.end
           $68f8 = ClearCactus
           $690e = ClearBalloon
           $6924 = Clear
           $692e = PopBalloonAnimation
           $693f = PopBalloonAnimation.canSwitchFrames
           $694d = PopBalloonAnimation.frame0
           $6971 = PopBalloonAnimation.frame1
           $6995 = PopBalloonAnimation.clear
           $69b6 = PopBalloonAnimation.endFrame
           $69bd = PopBalloonAnimation.end
           $69be = CactusFalling
           $69d0 = CactusFalling.falling
           $69e6 = CactusFalling.skipAcceleration
           $69f2 = CactusFalling.offScreen
           $69f5 = CactusFalling.end
           $69f6 = UpdateBalloonPosition
           $69f6 = UpdateBalloonPosition.balloonLeft
           $6a0c = UpdateBalloonPosition.balloonRight
           $6a17 = UpdateCactusPosition
           $6a17 = UpdateCactusPosition.cactusLeft
           $6a2d = UpdateCactusPosition.cactusRight
           $6a38 = Move
           $6a53 = Move.isLeftside
           $6a61 = Move.updatePosition
           $6a68 = DeathOfBalloonCactus
           $6a99 = CollisionBalloonCactus
           $6a99 = CollisionBalloonCactus.checkHit
           $6ab2 = CollisionBalloonCactus.checkHitByBullet
           $6acd = CollisionBalloonCactus.checkHitPlayer
           $6aed = BalloonCactusUpdate
           $6af4 = BalloonCactusUpdate.loop
           $6b4b = BalloonCactusUpdate.isAlive
           $6b68 = BalloonCactusUpdate.offScreen
           $6b6d = BalloonCactusUpdate.popped
           $6b77 = BalloonCactusUpdate.notPopping
           $6b81 = BalloonCactusUpdate.checkLoop
           $6b90 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6b9f-$6f0c ($036e bytes) ["bird"]
           $6b9f = InitializeBird
           $6ba8 = InitializeBird.loop_u1
           $6bb3 = SetStruct
           $6bd4 = SpawnBird
           $6be7 = SpawnBird.availableSpace
           $6bf1 = SpawnBird.availableOAMSpace
           $6c0e = SpawnBird.isRightside
           $6c13 = SpawnBird.birdLeft
           $6c2c = SpawnBird.birdMiddle
           $6c3c = SpawnBird.birdRight
           $6c4e = SpawnBird.isLeftside
           $6c4e = SpawnBird.leftBirdLeft
           $6c67 = SpawnBird.leftBirdMiddle
           $6c77 = SpawnBird.leftBirdRight
           $6c87 = SpawnBird.setStruct
           $6c8c = SpawnBird.end
           $6c91 = BirdRightsideFlap
           $6c98 = BirdRightsideFlap.soaring
           $6cc0 = BirdRightsideFlap.flapping
           $6cf1 = BirdLeftsideFlap
           $6cf8 = BirdLeftsideFlap.soaring
           $6d20 = BirdLeftsideFlap.flapping
           $6d51 = Clear
           $6d6e = UpdateBirdPosition
           $6d6e = UpdateBirdPosition.birdLeft
           $6d84 = UpdateBirdPosition.birdMiddle
           $6d90 = UpdateBirdPosition.birdRight
           $6d9b = Move
           $6da2 = Move.isRightside
           $6db0 = Move.isLeftside
           $6dba = Move.moveDown
           $6dc8 = Move.moveEnd
           $6dcc = BirdFall
           $6dd8 = BirdFall.checkOffscreenY
           $6dea = BirdFall.end
           $6ded = DeathOfBird
           $6e05 = DeathOfBird.facingLeft
           $6e30 = DeathOfBird.facingRight
           $6e5b = CollisionBird
           $6e5b = CollisionBird.checkHitPlayer
           $6e7b = BirdUpdate
           $6e82 = BirdUpdate.loop
           $6ebc = BirdUpdate.isAlive
           $6ed9 = BirdUpdate.offScreen
           $6ede = BirdUpdate.isDead
           $6eef = BirdUpdate.checkLoop
  SECTION: $6f0d-$71c6 ($02ba bytes) ["bomb"]
           $6f0d = InitializeBomb
           $6f16 = InitializeBomb.loop_u1
           $6f21 = SetStruct
           $6f42 = SpawnBomb
           $6f54 = SpawnBomb.availableSpace
           $6f5d = SpawnBomb.availableOAMSpace
           $6f73 = SpawnBomb.balloonLeft
           $6f8d = SpawnBomb.balloonRight
           $6f9e = SpawnBomb.bombSpace
           $6fa9 = SpawnBomb.setStruct
           $6fae = SpawnBomb.end
           $6fb3 = Clear
           $6fd0 = Move
           $6fd8 = Move.balloonLeft
           $6fee = Move.balloonRight
           $6ffa = Move.bombSpace
           $7005 = DeathOfBomb
           $700f = CollisionBomb
           $700f = CollisionBomb.checkHit
           $702b = CollisionBomb.checkHitByBullet
           $7047 = ExplosionAnimation
           $7058 = ExplosionAnimation.canSwitchFrames
           $7070 = ExplosionAnimation.frame0
           $7095 = ExplosionAnimation.frame1
           $70d8 = ExplosionAnimation.frame2
           $7104 = ExplosionAnimation.frame3
           $7130 = ExplosionAnimation.clear
           $7134 = ExplosionAnimation.endFrame
           $713b = ExplosionAnimation.end
           $713c = BombUpdate
           $7143 = BombUpdate.loop
           $717d = BombUpdate.isAlive
           $719a = BombUpdate.offScreen
           $719f = BombUpdate.popped
           $71a9 = BombUpdate.checkLoop
  SECTION: $71c7-$7430 ($026a bytes) ["game"]
           $71c7 = InitializeGame
           $71cf = UpdatePark.fadeIn
           $71cf = UpdatePark
           $71d5 = UpdatePark.hasFadedIn
           $71ee = UpdatePark.fadeOut
           $71f6 = UpdatePark.skipFade
           $71f9 = UpdatePark.moveUp
           $7202 = UpdatePark.flyUpNormal
           $7208 = UpdatePark.flyUpFast
           $720c = TryToUnpause
           $7223 = TryToUnpause.end
           $7224 = SpawnHandWave
           $7248 = SpawnHandWave.end
           $7249 = HandWaveAnimation
           $7250 = HandWaveAnimation.frame0
           $726c = HandWaveAnimation.frame1
           $7287 = HandWaveAnimation.end
           $7288 = SpawnCountdown
           $72b3 = SpawnCountdown.end
           $72b4 = CountdownAnimation
           $72bb = CountdownAnimation.countdown
           $72c3 = CountdownAnimation.balloonPop
           $72c9 = CountdownAnimation.frames
           $72f0 = CountdownAnimation.frame0
           $7312 = CountdownAnimation.frame1
           $7334 = CountdownAnimation.frame2
           $7355 = CountdownAnimation.frame3
           $7376 = CountdownAnimation.frame4
           $7397 = CountdownAnimation.frame5
           $73b5 = CountdownAnimation.remove
           $73ca = CountdownAnimation.endFrame
           $73d2 = IncrementScrollOffset
           $73d2 = IncrementScrollOffset.close
           $73e0 = IncrementScrollOffset.far
           $73ee = IncrementScrollOffset.end
           $73ef = UpdateSprites
           $7405 = UpdateGameCountdown
           $7417 = UpdateGame
           $7430 = UpdateGame.end
  SECTION: $7431-$764d ($021d bytes) ["point balloon"]
           $7431 = InitializePointBalloon
           $743a = InitializePointBalloon.loop_u1
           $7445 = SetStruct
           $7466 = SpawnPointBalloon
           $7478 = SpawnPointBalloon.availableSpace
           $7481 = SpawnPointBalloon.availableOAMSpace
           $7497 = SpawnPointBalloon.balloonLeft
           $74b0 = SpawnPointBalloon.balloonRight
           $74c0 = SpawnPointBalloon.setStruct
           $74c5 = SpawnPointBalloon.end
           $74ca = PopBalloonAnimation
           $74db = PopBalloonAnimation.canSwitchFrames
           $74e7 = PopBalloonAnimation.frame0
           $750b = PopBalloonAnimation.frame1
           $752f = PopBalloonAnimation.clear
           $7533 = PopBalloonAnimation.endFrame
           $753b = Clear
           $7554 = Move
           $755b = Move.balloonLeft
           $7571 = Move.balloonRight
           $757c = DeathOfPointBalloon
           $758e = CollisionPointBalloon
           $758e = CollisionPointBalloon.checkHit
           $75a7 = CollisionPointBalloon.checkHitByBullet
           $75c3 = PointBalloonUpdate
           $75ca = PointBalloonUpdate.loop
           $7604 = PointBalloonUpdate.isAlive
           $7621 = PointBalloonUpdate.offScreen
           $7626 = PointBalloonUpdate.popped
           $7630 = PointBalloonUpdate.checkLoop
           $763f = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $764e-$77a3 ($0156 bytes) ["porcupine"]
           $764e = InitializePorcupine
           $7657 = InitializePorcupine.loop_u1
           $7662 = GetStruct
           $767a = SetStruct
           $7691 = SpawnPorcupine
           $76a4 = SpawnPorcupine.availableSpace
           $76ae = SpawnPorcupine.availableOAMSpace
           $76c4 = SpawnPorcupine.topLeft
           $76dd = SpawnPorcupine.topMiddle
           $76ed = SpawnPorcupine.topMiddle2
           $76fd = SpawnPorcupine.topRight
           $770d = SpawnPorcupine.bottomLeft
           $771d = SpawnPorcupine.bottomMiddle
           $772f = SpawnPorcupine.bottomMiddle2
           $7741 = SpawnPorcupine.bottomRight
           $7753 = SpawnPorcupine.setStruct
           $7758 = SpawnPorcupine.end
           $775d = PorcupineUpdate
           $7764 = PorcupineUpdate.loop
           $7781 = PorcupineUpdate.offScreen
           $7781 = PorcupineUpdate.isAlive
           $7783 = PorcupineUpdate.checkLoop
           $7783 = PorcupineUpdate.isDead
           $779f = PorcupineUpdate.end
  SECTION: $77a4-$789a ($00f7 bytes) ["menu"]
           $77a4 = InitializeMenu
           $77b0 = SpawnMenuCursor
           $77b9 = SpawnMenuCursor.availableSpace
           $77d4 = SpawnMenuCursor.end
           $77d5 = BlinkMenuCursor
           $77dd = BlinkMenuCursor.blink
           $77ee = BlinkMenuCursor.show
           $77f2 = BlinkMenuCursor.empty
           $77f6 = MoveCursor
           $77f7 = SelectMode
           $7800 = MenuInput
           $780a = MenuInput.moveSelected
           $7813 = MenuInput.selectMode
           $781c = MenuInput.end
           $781d = UpdateMenuOpening
           $7839 = UpdateMenuOpening.startSound
           $783e = UpdateMenuOpening.scrollUpTitle
           $784a = UpdateMenuOpening.endSound
           $784f = UpdateMenuOpening.scrollDownTitle
           $785b = UpdateMenuOpening.scrollUpTitle2
           $7867 = UpdateMenuOpening.fadeOut
           $786f = UpdateMenuOpening.next
           $7873 = UpdateMenuOpening.endFrame
           $787a = UpdateMenuOpening.end
           $787b = UpdateMenu
           $787b = UpdateMenu.fadeIn
           $7881 = UpdateMenu.hasFadedIn
           $7892 = UpdateMenu.fadeOut
  SECTION: $789b-$7954 ($00ba bytes) ["sound"]
           $789b = AUDIO_OFF
           $789f = AUDIO_ON
           $78a4 = PopSound
           $78b7 = ExplosionSound
           $78c4 = WaveSound
           $78d1 = FallingSound
           $78e6 = RisingSound
           $78fb = StopSweepSound
           $7900 = CollectSound
           $7915 = WrongAnswerSound
           $792c = PercussionSound
           $7939 = BassSound
           $794a = ClearSound
  SECTION: $7955-$79f1 ($009d bytes) ["palettes"]
           $7955 = InitializePalettes
           $7971 = FadeOutPalettes
           $7971 = FadeOutPalettes.fadeOut
           $798e = FadeOutPalettes.fade1
           $7992 = FadeOutPalettes.fade2
           $7996 = FadeOutPalettes.fade3
           $799a = FadeOutPalettes.fade4
           $799c = FadeOutPalettes.fadePalettes
           $79ab = FadeOutPalettes.end
           $79ad = FadeInPalettes
           $79b4 = FadeInPalettes.hasFadedIn
           $79b7 = FadeInPalettes.fadeIn
           $79d3 = FadeInPalettes.fade1
           $79d7 = FadeInPalettes.fade2
           $79db = FadeInPalettes.fade3
           $79df = FadeInPalettes.fade4
           $79e1 = FadeInPalettes.fadePalettes
           $79f0 = FadeInPalettes.end
  SECTION: $79f2-$7a8b ($009a bytes) ["memory"]
           $79f2 = MEMCPY.memcpy_loop
           $79f2 = MEMCPY
           $79f6 = MEMCPY.memcpy_check_limit
           $79fc = MEMCPY_WITH_OFFSET
           $79fd = MEMCPY_WITH_OFFSET.memcpy_loop
           $7a08 = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $7a0f = ClearOAM
           $7a16 = ClearOAM.loop_u1
           $7a1f = ClearRAM
           $7a26 = ClearRAM.loop_u2
           $7a2f = RequestOAMSpace
           $7a38 = RequestOAMSpace.loop
           $7a4f = RequestOAMSpace.availableSpace
           $7a54 = RequestOAMSpace.sufficientSpace
           $7a64 = RequestOAMSpace.isNotZero4
           $7a65 = RequestOAMSpace.isNotZero3
           $7a66 = RequestOAMSpace.isNotZero2
           $7a67 = RequestOAMSpace.isNotZero1
           $7a69 = RequestOAMSpace.notEnoughSprites
           $7a71 = RequestOAMSpace.end
           $7a74 = RequestRAMSpace
           $7a74 = RequestRAMSpace.loop
           $7a79 = RequestRAMSpace.availableSpace
           $7a7d = RequestRAMSpace.checkLoop
           $7a8a = RequestRAMSpace.noFreeSpace
           $7a8b = RequestRAMSpace.end
  SECTION: $7a8c-$7ad4 ($0049 bytes) ["math"]
           $7a8c = MODULO
           $7a8e = MODULO.loop
           $7a93 = RANDOM
           $7a9c = DIVISION
           $7aa2 = DIVISION.loop
           $7aa7 = DIVISION.end
           $7aaa = ToBCD
           $7ac1 = ToBCD.end
           $7ac4 = MULTIPLY
           $7ac7 = MULTIPLY.loop
           $7ad2 = MULTIPLY.end
  SECTION: $7ad5-$7b06 ($0032 bytes) ["lcd"]
           $7ad5 = LCD_OFF
           $7adc = LCD_ON
           $7ae3 = LCD_ON_NO_WINDOW
           $7aea = WaitVBlank
           $7af1 = WaitVBlank.loop
           $7afc = SetupWindow
  SECTION: $7b07-$7b2b ($0025 bytes) ["score"]
           $7b07 = InitializeScore
           $7b0f = AddPoints
           $7b1f = AddPoints.carry
           $7b29 = AddPoints.end
  SECTION: $7b2c-$7b46 ($001b bytes) ["general initialization"]
           $7b2c = InitializeGeneralVars
  SECTION: $7b47-$7b4e ($0008 bytes) ["timer"]
           $7b47 = UpdateGlobalTimer
    SLACK: $04b1 bytes

WRAM0 bank #0:
  SECTION: $c000-$c009 ($000a bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wParallaxClose
           $c003 = wParallaxFar
           $c004 = wUpdateTilemapAddress
           $c006 = wUpdateTilemapOffset
           $c007 = wUpdateTilemapIndex
           $c008 = wHasUpdatedNextTilemapAddress
           $c009 = wLastUpdatedSCX
  SECTION: $c00a-$c04f ($0046 bytes) ["Playback variables"]
           $c00a = _start_vars
           $c00a = order_cnt
           $c00b = order1
           $c00b = _start_song_descriptor_pointers
           $c00d = order2
           $c00f = order3
           $c011 = order4
           $c013 = duty_instruments
           $c015 = wave_instruments
           $c017 = noise_instruments
           $c019 = routines
           $c01b = waves
           $c01d = mute_channels
           $c01d = _end_song_descriptor_pointers
           $c01e = pattern1
           $c020 = pattern2
           $c022 = pattern3
           $c024 = pattern4
           $c026 = ticks_per_row
           $c027 = current_order
           $c028 = next_order
           $c029 = row_break
           $c02a = temp_note_value
           $c02c = row
           $c02d = tick
           $c02e = counter
           $c02f = current_wave
           $c02f = _hUGE_current_wave
           $c030 = channel_period1
           $c030 = channels
           $c030 = channel1
           $c032 = toneporta_target1
           $c034 = channel_note1
           $c035 = vibrato_tremolo_phase1
           $c036 = envelope1
           $c037 = highmask1
           $c038 = channel_period2
           $c038 = channel2
           $c03a = toneporta_target2
           $c03c = channel_note2
           $c03d = vibrato_tremolo_phase2
           $c03e = envelope2
           $c03f = highmask2
           $c040 = channel_period3
           $c040 = channel3
           $c042 = toneporta_target3
           $c044 = channel_note3
           $c045 = vibrato_tremolo_phase3
           $c046 = envelope3
           $c047 = highmask3
           $c048 = channel_period4
           $c048 = channel4
           $c04a = toneporta_target4
           $c04c = channel_note4
           $c04d = vibrato_tremolo_phase4
           $c04e = envelope4
           $c04f = highmask4
           $c050 = _end_vars
  SECTION: $c050-$c06f ($0020 bytes) ["point balloon vars"]
           $c050 = pointBalloon
  SECTION: $c070-$c08d ($001e bytes) ["balloon cactus vars"]
           $c070 = balloonCactus
  SECTION: $c08e-$c0a4 ($0017 bytes) ["player vars"]
           $c08e = wPlayerY
           $c08f = wPlayerX
           $c090 = wPlayerY2
           $c091 = wPlayerX2
           $c092 = wPlayerAlive
           $c093 = wPlayerPopping
           $c094 = wPlayerPoppingFrame
           $c095 = wPlayerPoppingTimer
           $c096 = wPlayerFalling
           $c097 = wPlayerFallSpeed
           $c098 = wPlayerFallingTimer
           $c099 = wPlayerDelayFallingTimer
           $c09a = wPlayerRespawnTimer
           $c09b = wPlayerSpeed
           $c09c = wPlayerLives
           $c09d = wPlayerRight
           $c09e = wPlayerBulletY
           $c09f = wPlayerBulletX
           $c0a0 = wPlayerBulletAlive
           $c0a1 = wPlayerBulletRight
           $c0a2 = wPlayerInvincible
           $c0a3 = wPlayerBoost
           $c0a4 = wPlayerAttack
  SECTION: $c0a5-$c0b4 ($0010 bytes) ["bird vars"]
           $c0a5 = bird
  SECTION: $c0b5-$c0c4 ($0010 bytes) ["enemy struct vars"]
           $c0b5 = wEnemyOffset
           $c0b6 = wEnemyY
           $c0b7 = wEnemyX
           $c0b8 = wEnemyActive
           $c0b9 = wEnemyOAM
           $c0ba = wEnemyAlive
           $c0bb = wEnemyPopping
           $c0bc = wEnemyPoppingFrame
           $c0bd = wEnemyPoppingTimer
           $c0be = wEnemyRightside
           $c0bf = wEnemyY2
           $c0c0 = wEnemyX2
           $c0c1 = wEnemyFalling
           $c0c2 = wEnemyFallingSpeed
           $c0c3 = wEnemyFallingTimer
           $c0c4 = wEnemyDelayFallingTimer
  SECTION: $c0c5-$c0d4 ($0010 bytes) ["bomb vars"]
           $c0c5 = bomb
  SECTION: $c0d5-$c0d9 ($0005 bytes) ["porcupine vars"]
           $c0d5 = porcupine
  SECTION: $c0da-$c0dd ($0004 bytes) ["palettes vars"]
           $c0da = wFadeInFrame
           $c0db = wFadeOutFrame
           $c0dc = wTriggerFadeIn
           $c0dd = wTriggerFadeOut
  SECTION: $c0de-$c0e0 ($0003 bytes) ["controller vars"]
           $c0de = wControllerDown
           $c0df = wControllerPressed
           $c0e0 = wPaused
  SECTION: $c0e1-$c0e3 ($0003 bytes) ["score vars"]
           $c0e1 = wScore
  SECTION: $c0e4-$c0e6 ($0003 bytes) ["interrupts vars"]
           $c0e4 = wVBlankFlag
           $c0e5 = wLCDInterrupt
  SECTION: $c0e7-$c0e9 ($0003 bytes) ["level vars"]
           $c0e7 = wLevel
           $c0e8 = wLevelPointer
           $c0e9 = wLevelPointerWaitCounter
  SECTION: $c0ea-$c0eb ($0002 bytes) ["menu vars"]
           $c0ea = wMenuFrame
           $c0eb = wSelectedMode
  SECTION: $c0ec-$c0ed ($0002 bytes) ["game vars"]
           $c0ec = wHandWavingFrame
           $c0ed = wCountdownFrame
  SECTION: $c0ee-$c0ee ($0001 byte) ["timer vars"]
           $c0ee = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e71 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $19f0 bytes in 1 bank
    ROMX: $3b4f bytes in 1 bank
    WRAM0: $018f bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
