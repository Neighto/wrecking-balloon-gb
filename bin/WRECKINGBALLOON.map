ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c8 ($007e bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = CollisionFallingEnemy
           $008d = OffScreenXEnemies
           $009e = OffScreenXEnemies.end
           $00a0 = OffScreenYEnemies
           $00b1 = OffScreenYEnemies.end
           $00b3 = OffScreenX
           $00bb = OffScreenX.end
           $00bd = OffScreenY
           $00c7 = OffScreenY.end
  SECTION: $00c9-$00ec ($0024 bytes) ["scroll"]
           $00c9 = HorizontalScroll
           $00d6 = HorizontalScroll.end
           $00d8 = VerticalScroll
           $00e5 = VerticalScroll.end
           $00e7 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0c0f ($0ac0 bytes) ["tilemaps"]
           $0150 = ParkMap
           $0550 = ParkMapEnd
           $0550 = BackgroundMap
           $0750 = World2Map
           $0750 = BackgroundMapEnd
           $0990 = MenuMap
           $0990 = World2MapEnd
           $0bd0 = WindowMap
           $0bd0 = MenuMapEnd
           $0c10 = WindowMapEnd
  SECTION: $0c10-$13b0 ($07a1 bytes) ["Sound Driver"]
           $0c10 = _hUGE_init_banked
           $0c14 = _hUGE_init
           $0c16 = continue_init
           $0c1f = _hUGE_mute_channel_banked
           $0c23 = _hUGE_mute_channel
           $0c25 = continue_mute
           $0c30 = hUGE_mute_channel
           $0c36 = hUGE_mute_channel.enable_loop
           $0c3d = hUGE_mute_channel.enable_cut
           $0c4a = _hUGE_set_position_banked
           $0c4e = _hUGE_set_position
           $0c50 = continue_set_position
           $0c57 = hUGE_init
           $0c5e = hUGE_init.fill_loop
           $0c82 = hUGE_init.copy_song_descriptor_loop
           $0c8c = _refresh_patterns
           $0ca6 = _refresh_patterns.load_pattern
           $0cb6 = _load_note_data
           $0cc8 = _lookup_note
           $0cd2 = _convert_note
           $0ce0 = _convert_ch4_note
           $0cf7 = _update_channel
           $0d01 = _update_channel1
           $0d0f = _update_channel2
           $0d1d = _update_channel3
           $0d2b = _update_channel4
           $0d3b = _playnote1
           $0d56 = _playnote2
           $0d71 = _playnote3
           $0d92 = _playnote4
           $0da6 = _doeffect
           $0dbb = _doeffect.jump
           $0deb = setup_channel_pointer
           $0df9 = fx_set_master_volume
           $0dfe = fx_call_routine
           $0e20 = fx_call_routine.call_hl
           $0e21 = fx_set_pan
           $0e26 = fx_set_duty
           $0e2b = fx_set_duty.chan2
           $0e35 = fx_set_duty.chan1
           $0e3f = fx_vol_slide
           $0e46 = fx_vol_slide.loop
           $0e4b = fx_vol_slide.cont
           $0e7d = fx_vol_slide.cont1
           $0e84 = fx_vol_slide.cont2
           $0e98 = _envelope_registers
           $0ea0 = fx_note_delay
           $0eb9 = fx_note_delay.play_note
           $0ed7 = _play_note_routines
           $0ee3 = fx_set_speed
           $0ee9 = hUGE_set_position
           $0ee9 = fx_pos_jump
           $0ef3 = fx_pattern_break
           $0ef8 = fx_note_cut
           $0f00 = fx_note_cut.loop
           $0f05 = fx_note_cut.cont
           $0f0a = note_cut
           $0f21 = fx_set_volume
           $0f22 = set_channel_volume
           $0f2d = set_chn_3_vol
           $0f3f = set_chn_3_vol.three
           $0f43 = set_chn_3_vol.two
           $0f47 = set_chn_3_vol.one
           $0f4b = set_chn_3_vol.zero
           $0f4c = set_chn_3_vol.done
           $0f4f = set_chn_2_vol
           $0f5f = set_chn_1_vol
           $0f6f = set_chn_4_vol
           $0f7b = fx_vibrato
           $0f8e = fx_vibrato.restore
           $0f93 = fx_vibrato.go_up
           $0f9e = fx_vibrato.finish_vibrato
           $0fa4 = fx_arpeggio
           $0fb0 = fx_arpeggio.greater_than_two
           $0fb2 = fx_arpeggio.test_greater_than_two
           $0fc1 = fx_arpeggio.arp_options
           $0fc7 = fx_arpeggio.reset_arp
           $0fca = fx_arpeggio.set_arp2
           $0fcf = fx_arpeggio.set_arp1
           $0fd0 = fx_arpeggio.finish_arp
           $0fd3 = fx_arpeggio.finish_skip_add
           $0fdc = fx_porta_up
           $0feb = fx_porta_up.finish
           $0ff2 = fx_porta_down
           $1004 = fx_toneporta
           $1016 = fx_toneporta.return_skip
           $1020 = fx_toneporta.do_toneporta
           $1035 = fx_toneporta.high_byte_same
           $103b = fx_toneporta.add
           $104d = fx_toneporta.subtract
           $1063 = fx_toneporta.set_exact
           $1065 = fx_toneporta.done
           $1078 = _setup_instrument_pointer_ch4
           $1083 = _setup_instrument_pointer
           $108a = _setup_instrument_pointer.finish
           $1093 = _hUGE_dosound_banked
           $1093 = _hUGE_dosound
           $10d2 = _hUGE_dosound.write_mask1
           $10d5 = _hUGE_dosound.do_setvol1
           $10e8 = _hUGE_dosound.after_note1
           $111d = _hUGE_dosound.write_mask2
           $1120 = _hUGE_dosound.do_setvol2
           $1133 = _hUGE_dosound.after_note2
           $11ba = _hUGE_dosound.no_wave_copy
           $11bb = _hUGE_dosound.write_mask3
           $11be = _hUGE_dosound.do_setvol3
           $11c9 = _hUGE_dosound.after_note3
           $121a = _hUGE_dosound.write_mask4
           $121d = _hUGE_dosound.do_setvol4
           $1228 = _hUGE_dosound.after_note4
           $122b = _hUGE_dosound.process_effects
           $1247 = _hUGE_dosound.after_effect1
           $1263 = _hUGE_dosound.after_effect2
           $127f = _hUGE_dosound.after_effect3
           $12ca = _hUGE_dosound.done_macro
           $12d3 = process_tick
           $12d3 = _hUGE_dosound.after_effect4
           $12e5 = _newrow
           $12fd = _newrow.no_break
           $1308 = _neworder
           $1315 = _update_current_order
           $131c = _noreset
           $1321 = note_table
  SECTION: $13b1-$1832 ($0482 bytes) ["player"]
           $13b1 = InitializePlayer
           $1404 = UpdateBalloonPosition
           $1404 = UpdateBalloonPosition.balloonLeft
           $1411 = UpdateBalloonPosition.balloonRight
           $141c = UpdateCactusPosition
           $141c = UpdateCactusPosition.cactusLeft
           $1429 = UpdateCactusPosition.cactusRight
           $1434 = SpawnPlayer
           $1434 = SpawnPlayer.cactusLeft
           $1444 = SpawnPlayer.cactusRight
           $1454 = SpawnPlayer.balloonLeft
           $1464 = SpawnPlayer.balloonRight
           $1475 = ClearPlayerCactus
           $1482 = ClearPlayerBalloon
           $148f = RespawnPlayer
           $14a2 = MoveRight
           $14b2 = MoveRight.canCactusDriftLeft
           $14c4 = MoveRight.cactusDriftLeft
           $14c6 = MoveLeft
           $14da = MoveLeft.canCactusDriftRight
           $14eb = MoveLeft.cactusDriftRight
           $14ed = MoveDown
           $14fd = MoveDown.canCactusDriftUp
           $150f = MoveDown.cactusDriftUp
           $1511 = ChargeBoost
           $1517 = ChargeBoost.isCharging
           $151e = ChargeBoost.resetBoost
           $1524 = ChargeAttack
           $152a = ChargeAttack.isCharging
           $152f = SpawnBullet
           $1549 = SpawnBullet.spawnFromLeft
           $1551 = SpawnBullet.leftOAM
           $155f = SpawnBullet.spawnFromRight
           $1567 = SpawnBullet.rightOAM
           $1575 = ClearBullet
           $1581 = BulletUpdate
           $1587 = BulletUpdate.isAlive
           $1592 = BulletUpdate.offScreen
           $1596 = BulletUpdate.onScreen
           $159c = BulletUpdate.move
           $15a6 = BulletUpdate.moveLeft
           $15aa = BulletUpdate.moveRight
           $15ac = BulletUpdate.endMove
           $15b4 = PlayerControls
           $15b4 = PlayerControls.right
           $15c7 = PlayerControls.moveRight
           $15cf = PlayerControls.endRight
           $15cf = PlayerControls.left
           $15e2 = PlayerControls.moveLeft
           $15e9 = PlayerControls.endLeft
           $15e9 = PlayerControls.up
           $15fc = PlayerControls.moveUp
           $1610 = PlayerControls.endUp
           $1610 = PlayerControls.down
           $1626 = PlayerControls.endDown
           $1626 = PlayerControls.canCactusDriftCenterX
           $1644 = PlayerControls.driftCenterXRight
           $1647 = PlayerControls.driftCenterXLeft
           $1648 = PlayerControls.endDriftToCenterX
           $1648 = PlayerControls.canCactusDriftCenterY
           $1669 = PlayerControls.driftCenterYUp
           $166c = PlayerControls.driftCenterYDown
           $166d = PlayerControls.endDriftToCenterY
           $166d = PlayerControls.start
           $1678 = PlayerControls.endStart
           $1678 = PlayerControls.AButton
           $1685 = PlayerControls.activateAttack
           $168d = PlayerControls.endA
           $168d = PlayerControls.BButton
           $169a = PlayerControls.activateBoost
           $16a4 = PlayerControls.endB
           $16a5 = MovePlayer
           $16ba = MovePlayerAutoFlyUp
           $16d3 = FallCactusDown
           $16e8 = FallCactusDown.skipAcceleration
           $16f1 = PopBalloonAnimation
           $1702 = PopBalloonAnimation.canSwitchFrames
           $170e = PopBalloonAnimation.frame0
           $1720 = PopBalloonAnimation.frame1
           $1732 = PopBalloonAnimation.clear
           $1742 = PopBalloonAnimation.endFrame
           $174a = CactusFalling
           $1764 = CactusFalling.offScreen
           $176c = CactusFalling.end
           $176d = NoMoreLives
           $1777 = PlayerUpdate
           $177e = PlayerUpdate.isAlive
           $179a = PlayerUpdate.popped
           $17a5 = PlayerUpdate.popping
           $17ad = PlayerUpdate.falling
           $17b6 = PlayerUpdate.respawning
           $17bd = PlayerUpdate.noMoreLives
           $17c1 = PlayerUpdate.respawn
           $17c5 = DeathOfPlayer
           $17e9 = InvincibleBlink
           $17ef = InvincibleBlink.isStillInvincible
           $17fe = InvincibleBlink.blinkNormal
           $1805 = InvincibleBlink.blinkFast
           $1809 = InvincibleBlink.blinkEnd
           $181e = InvincibleBlink.defaultPalette
  SECTION: $1833-$1aa9 ($0277 bytes) ["graphics"]
           $1833 = AddBGTiles8800Method
           $183d = AddBGTiles8800Method.tilesFitBlock
           $1842 = AddBGTiles8800Method.tilesExceedBlock
           $185c = AddBGTiles8800Method.end
           $185f = LoadPlayerTiles
           $186c = LoadWindow
           $186c = LoadWindow.loadTiles
           $1878 = LoadWindow.loadMap
           $1887 = LoadEnemyTiles
           $18a0 = LoadWorld1
           $18bc = LoadParkData
           $18e7 = LoadGameData
           $18eb = LoadMenuOpeningData
           $1907 = LoadMenuData
           $1920 = RefreshScore
           $195a = RefreshLives
           $1963 = RefreshBoostBar
           $196d = RefreshBoostBar.isCharging
           $1977 = RefreshBoostBar.isHalfReady
           $197e = RefreshBoostBar.isReady
           $1984 = RefreshAttackBar
           $198e = RefreshAttackBar.isCharging
           $1998 = RefreshAttackBar.isHalfReady
           $199f = RefreshAttackBar.isReady
           $19a5 = RefreshWindow
           $19b8 = RefreshWindow.end
           $19b9 = ClearAllTiles
           $19c2 = ClearAllTiles.loop_u4
           $19d1 = ClearAllTiles.loop_u5
           $19e0 = ClearAllTiles.loop_u6
           $19eb = ClearMap
           $19f4 = ClearMap.loop_u7
           $19ff = ReplaceTilemapHorizontal
           $1a28 = ReplaceTilemapHorizontal.handleZero
           $1a2a = ReplaceTilemapHorizontal.handleZeroEnd
           $1a36 = ReplaceTilemapHorizontal.loop
           $1a54 = ReplaceTilemapHorizontal.end
           $1a59 = MoveToNextTilemap
           $1a6c = MoveToNextTilemap.canUpdateTilemap
           $1a7f = MoveToNextTilemap.clouds1
           $1a94 = MoveToNextTilemap.clouds2
           $1aa7 = MoveToNextTilemap.end
  SECTION: $1aaa-$1baf ($0106 bytes) ["level data"]
           $1aaa = Set1
           $1aad = Set2
           $1aad = Set1End
           $1ab3 = Set3
           $1ab3 = Set2End
           $1abc = Set4
           $1abc = Set3End
           $1ac2 = Set5
           $1ac2 = Set4End
           $1acb = Set6
           $1acb = Set5End
           $1ad1 = Set7
           $1ad1 = Set6End
           $1ad7 = Set8
           $1ad7 = Set7End
           $1ae3 = LevelInstructions
           $1ae3 = Set8End
           $1b12 = InitializeLevelVars
           $1b1f = LevelDataHandler
           $1b1f = LevelDataHandler.loop
           $1b43 = LevelDataHandler.pointBalloon
           $1b48 = LevelDataHandler.balloonCactus
           $1b4d = LevelDataHandler.bird
           $1b52 = LevelDataHandler.bomb
           $1b57 = LevelDataHandler.porcupine
           $1b5c = LevelDataHandler.empty
           $1b5e = LevelDataHandler.loopCheck
           $1b64 = LevelDataManager
           $1b80 = LevelDataManager.spawn
           $1b96 = LevelDataManager.wait
           $1ba3 = LevelDataManager.waitEnd
  SECTION: $1bb0-$1c9d ($00ee bytes) ["rom"]
           $1bb0 = Start
           $1bea = MenuLoopOpening
           $1bea = StartMenu
           $1c02 = StartClassic
           $1c02 = MenuLoop
           $1c53 = ParkLoop
           $1c53 = PreGameLoop
           $1c80 = GameLoopCountdown
           $1c8f = GameLoop
  SECTION: $1c9e-$1d84 ($00e7 bytes) ["interrupts"]
           $1c9e = InitializeInterrupts
           $1cb4 = VBlankInterrupt
           $1cc4 = LCDInterrupt
           $1cce = LCDInterruptEnd
           $1cd2 = MenuLCDInterrupt
           $1ce2 = MenuLCDInterrupt.reset
           $1ceb = MenuLCDInterrupt.far
           $1cf9 = MenuLCDInterrupt.close
           $1d05 = MenuLCDInterrupt.end
           $1d08 = SetMenuInterrupts
           $1d16 = ParkLCDInterrupt
           $1d22 = ParkLCDInterrupt.clouds
           $1d30 = ParkLCDInterrupt.ground
           $1d35 = ParkLCDInterrupt.end
           $1d38 = SetParkInterrupts
           $1d3c = GameLCDInterrupt
           $1d4c = GameLCDInterrupt.reset
           $1d5a = GameLCDInterrupt.far
           $1d68 = GameLCDInterrupt.close
           $1d74 = GameLCDInterrupt.end
           $1d77 = SetGameInterrupts
  SECTION: $1d85-$1dfc ($0078 bytes) ["controller"]
           $1d85 = InitializeController
           $1d8a = ReadInput
           $1dba = JOY_RIGHT
           $1dc2 = JOY_LEFT
           $1dca = JOY_UP
           $1dd2 = JOY_DOWN
           $1dda = JOY_A
           $1de2 = JOY_B
           $1dea = JOY_SELECT
           $1df2 = JOY_START
           $1dfa = JOY_FALSE
  SECTION: $1dfd-$1e1a ($001e bytes) ["OAM DMA routine"]
           $1dfd = CopyDMARoutine
           $1e04 = CopyDMARoutine.copy
           $1e0b = DMARoutine
           $1e0f = DMARoutine.wait
           $1e13 = DMARoutineEnd
           $1e13 = OAMDMA
    SLACK: $2212 bytes

ROMX bank #1:
  SECTION: $4000-$57af ($17b0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = ParkTiles
           $4620 = ParkTilesEnd
           $4620 = BackgroundTiles
           $4b00 = BackgroundTilesEnd
           $4b00 = ClassicParkTiles
           $4b40 = CountdownTiles
           $4b40 = ClassicParkTilesEnd
           $4c40 = CountdownTilesEnd
           $4c40 = WindowTiles
           $4e10 = WindowTilesEnd
           $4e10 = MenuTiles
           $4e30 = MenuTilesEnd
           $4e30 = MenuTitleTiles
           $57b0 = MenuTitleTilesEnd
  SECTION: $57b0-$62ed ($0b3e bytes) ["Song Data2"]
           $57b0 = angryTheme
           $57c5 = order_cnt
           $57c6 = order1
           $57d0 = order2
           $57da = order3
           $57e4 = order4
           $57ee = P0
           $58ae = P1
           $596e = P2
           $5a2e = P3
           $5aee = P4
           $5bae = P5
           $5c6e = P6
           $5d2e = P7
           $5dee = P8
           $5eae = P9
           $5f6e = P10
           $602e = P11
           $60ee = duty_instruments
           $60ee = itSquareinst1
           $60f2 = itSquareinst2
           $60f6 = itSquareinst3
           $60fa = itSquareinst4
           $60fe = itSquareinst5
           $6102 = itSquareinst6
           $6106 = itSquareinst7
           $610a = itSquareinst8
           $610e = itSquareinst9
           $6112 = itSquareinst10
           $6116 = itSquareinst11
           $611a = itSquareinst12
           $611e = itSquareinst13
           $6122 = itSquareinst14
           $6126 = itSquareinst15
           $612a = wave_instruments
           $612a = itWaveinst1
           $612e = itWaveinst2
           $6132 = itWaveinst3
           $6136 = itWaveinst4
           $613a = itWaveinst5
           $613e = itWaveinst6
           $6142 = itWaveinst7
           $6146 = itWaveinst8
           $614a = itWaveinst9
           $614e = itWaveinst10
           $6152 = itWaveinst11
           $6156 = itWaveinst12
           $615a = itWaveinst13
           $615e = itWaveinst14
           $6162 = itWaveinst15
           $6166 = noise_instruments
           $6166 = itNoiseinst1
           $616e = itNoiseinst2
           $6176 = itNoiseinst3
           $617e = itNoiseinst4
           $6186 = itNoiseinst5
           $618e = itNoiseinst6
           $6196 = itNoiseinst7
           $619e = itNoiseinst8
           $61a6 = itNoiseinst9
           $61ae = itNoiseinst10
           $61b6 = itNoiseinst11
           $61be = itNoiseinst12
           $61c6 = itNoiseinst13
           $61ce = itNoiseinst14
           $61d6 = itNoiseinst15
           $61de = routines
           $61de = __end_hUGE_Routine_0
           $61de = __hUGE_Routine_0
           $61df = __end_hUGE_Routine_1
           $61df = __hUGE_Routine_1
           $61e0 = __end_hUGE_Routine_2
           $61e0 = __hUGE_Routine_2
           $61e1 = __end_hUGE_Routine_3
           $61e1 = __hUGE_Routine_3
           $61e2 = __end_hUGE_Routine_4
           $61e2 = __hUGE_Routine_4
           $61e3 = __end_hUGE_Routine_5
           $61e3 = __hUGE_Routine_5
           $61e4 = __end_hUGE_Routine_6
           $61e4 = __hUGE_Routine_6
           $61e5 = __end_hUGE_Routine_7
           $61e5 = __hUGE_Routine_7
           $61e6 = __hUGE_Routine_8
           $61e6 = __end_hUGE_Routine_8
           $61e7 = __hUGE_Routine_9
           $61e7 = __end_hUGE_Routine_9
           $61e8 = __hUGE_Routine_10
           $61e8 = __end_hUGE_Routine_10
           $61e9 = __hUGE_Routine_11
           $61e9 = __end_hUGE_Routine_11
           $61ea = __hUGE_Routine_12
           $61ea = __end_hUGE_Routine_12
           $61eb = __hUGE_Routine_13
           $61eb = __end_hUGE_Routine_13
           $61ec = __end_hUGE_Routine_14
           $61ec = __hUGE_Routine_14
           $61ed = __end_hUGE_Routine_15
           $61ed = __hUGE_Routine_15
           $61ee = waves
           $61ee = wave0
           $61fe = wave1
           $620e = wave2
           $621e = wave3
           $622e = wave4
           $623e = wave5
           $624e = wave6
           $625e = wave7
           $626e = wave8
           $627e = wave9
           $628e = wave10
           $629e = wave11
           $62ae = wave12
           $62be = wave13
           $62ce = wave14
           $62de = wave15
  SECTION: $62ee-$680b ($051e bytes) ["Song Data"]
           $62ee = menuTheme
           $6303 = order_cnt
           $6304 = order1
           $6306 = order2
           $6308 = order3
           $630a = order4
           $630c = P1
           $63cc = P2
           $648c = P3
           $654c = P6
           $660c = duty_instruments
           $660c = itSquareinst1
           $6610 = itSquareinst2
           $6614 = itSquareinst3
           $6618 = itSquareinst4
           $661c = itSquareinst5
           $6620 = itSquareinst6
           $6624 = itSquareinst7
           $6628 = itSquareinst8
           $662c = itSquareinst9
           $6630 = itSquareinst10
           $6634 = itSquareinst11
           $6638 = itSquareinst12
           $663c = itSquareinst13
           $6640 = itSquareinst14
           $6644 = itSquareinst15
           $6648 = wave_instruments
           $6648 = itWaveinst1
           $664c = itWaveinst2
           $6650 = itWaveinst3
           $6654 = itWaveinst4
           $6658 = itWaveinst5
           $665c = itWaveinst6
           $6660 = itWaveinst7
           $6664 = itWaveinst8
           $6668 = itWaveinst9
           $666c = itWaveinst10
           $6670 = itWaveinst11
           $6674 = itWaveinst12
           $6678 = itWaveinst13
           $667c = itWaveinst14
           $6680 = itWaveinst15
           $6684 = noise_instruments
           $6684 = itNoiseinst1
           $668c = itNoiseinst2
           $6694 = itNoiseinst3
           $669c = itNoiseinst4
           $66a4 = itNoiseinst5
           $66ac = itNoiseinst6
           $66b4 = itNoiseinst7
           $66bc = itNoiseinst8
           $66c4 = itNoiseinst9
           $66cc = itNoiseinst10
           $66d4 = itNoiseinst11
           $66dc = itNoiseinst12
           $66e4 = itNoiseinst13
           $66ec = itNoiseinst14
           $66f4 = itNoiseinst15
           $66fc = routines
           $66fc = __end_hUGE_Routine_0
           $66fc = __hUGE_Routine_0
           $66fd = __end_hUGE_Routine_1
           $66fd = __hUGE_Routine_1
           $66fe = __end_hUGE_Routine_2
           $66fe = __hUGE_Routine_2
           $66ff = __end_hUGE_Routine_3
           $66ff = __hUGE_Routine_3
           $6700 = __end_hUGE_Routine_4
           $6700 = __hUGE_Routine_4
           $6701 = __end_hUGE_Routine_5
           $6701 = __hUGE_Routine_5
           $6702 = __end_hUGE_Routine_6
           $6702 = __hUGE_Routine_6
           $6703 = __end_hUGE_Routine_7
           $6703 = __hUGE_Routine_7
           $6704 = __hUGE_Routine_8
           $6704 = __end_hUGE_Routine_8
           $6705 = __hUGE_Routine_9
           $6705 = __end_hUGE_Routine_9
           $6706 = __hUGE_Routine_10
           $6706 = __end_hUGE_Routine_10
           $6707 = __hUGE_Routine_11
           $6707 = __end_hUGE_Routine_11
           $6708 = __hUGE_Routine_12
           $6708 = __end_hUGE_Routine_12
           $6709 = __hUGE_Routine_13
           $6709 = __end_hUGE_Routine_13
           $670a = __end_hUGE_Routine_14
           $670a = __hUGE_Routine_14
           $670b = __end_hUGE_Routine_15
           $670b = __hUGE_Routine_15
           $670c = waves
           $670c = wave0
           $671c = wave1
           $672c = wave2
           $673c = wave3
           $674c = wave4
           $675c = wave5
           $676c = wave6
           $677c = wave7
           $678c = wave8
           $679c = wave9
           $67ac = wave10
           $67bc = wave11
           $67cc = wave12
           $67dc = wave13
           $67ec = wave14
           $67fc = wave15
  SECTION: $680c-$6b9e ($0393 bytes) ["balloon cactus"]
           $680c = InitializeBalloonCactus
           $6815 = InitializeBalloonCactus.loop_u1
           $6820 = SetStruct
           $685d = SpawnBalloonCactus
           $6870 = SpawnBalloonCactus.availableSpace
           $6879 = SpawnBalloonCactus.availableOAMSpace
           $68a7 = SpawnBalloonCactus.isLeftside
           $68a7 = SpawnBalloonCactus.balloonLeft
           $68c0 = SpawnBalloonCactus.balloonRight
           $68d0 = SpawnBalloonCactus.cactusLeft
           $68de = SpawnBalloonCactus.cactusRight
           $68ee = SpawnBalloonCactus.setStruct
           $68f3 = SpawnBalloonCactus.end
           $68f8 = ClearCactus
           $690e = ClearBalloon
           $6924 = Clear
           $692e = PopBalloonAnimation
           $693f = PopBalloonAnimation.canSwitchFrames
           $694d = PopBalloonAnimation.frame0
           $6971 = PopBalloonAnimation.frame1
           $6995 = PopBalloonAnimation.clear
           $69b6 = PopBalloonAnimation.endFrame
           $69bd = PopBalloonAnimation.end
           $69be = CactusFalling
           $69d0 = CactusFalling.falling
           $69e6 = CactusFalling.skipAcceleration
           $69f2 = CactusFalling.offScreen
           $69f5 = CactusFalling.end
           $69f6 = UpdateBalloonPosition
           $69f6 = UpdateBalloonPosition.balloonLeft
           $6a0c = UpdateBalloonPosition.balloonRight
           $6a17 = UpdateCactusPosition
           $6a17 = UpdateCactusPosition.cactusLeft
           $6a2d = UpdateCactusPosition.cactusRight
           $6a38 = Move
           $6a53 = Move.isLeftside
           $6a61 = Move.updatePosition
           $6a68 = DeathOfBalloonCactus
           $6a99 = CollisionBalloonCactus
           $6a99 = CollisionBalloonCactus.checkHit
           $6ab2 = CollisionBalloonCactus.checkHitByBullet
           $6acd = CollisionBalloonCactus.checkHitPlayer
           $6aed = BalloonCactusUpdate
           $6af4 = BalloonCactusUpdate.loop
           $6b4b = BalloonCactusUpdate.isAlive
           $6b68 = BalloonCactusUpdate.offScreen
           $6b6d = BalloonCactusUpdate.popped
           $6b77 = BalloonCactusUpdate.notPopping
           $6b81 = BalloonCactusUpdate.checkLoop
           $6b90 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6b9f-$6f0c ($036e bytes) ["bird"]
           $6b9f = InitializeBird
           $6ba8 = InitializeBird.loop_u1
           $6bb3 = SetStruct
           $6bd4 = SpawnBird
           $6be7 = SpawnBird.availableSpace
           $6bf1 = SpawnBird.availableOAMSpace
           $6c0e = SpawnBird.isRightside
           $6c13 = SpawnBird.birdLeft
           $6c2c = SpawnBird.birdMiddle
           $6c3c = SpawnBird.birdRight
           $6c4e = SpawnBird.isLeftside
           $6c4e = SpawnBird.leftBirdLeft
           $6c67 = SpawnBird.leftBirdMiddle
           $6c77 = SpawnBird.leftBirdRight
           $6c87 = SpawnBird.setStruct
           $6c8c = SpawnBird.end
           $6c91 = BirdRightsideFlap
           $6c98 = BirdRightsideFlap.soaring
           $6cc0 = BirdRightsideFlap.flapping
           $6cf1 = BirdLeftsideFlap
           $6cf8 = BirdLeftsideFlap.soaring
           $6d20 = BirdLeftsideFlap.flapping
           $6d51 = Clear
           $6d6e = UpdateBirdPosition
           $6d6e = UpdateBirdPosition.birdLeft
           $6d84 = UpdateBirdPosition.birdMiddle
           $6d90 = UpdateBirdPosition.birdRight
           $6d9b = Move
           $6da2 = Move.isRightside
           $6db0 = Move.isLeftside
           $6dba = Move.moveDown
           $6dc8 = Move.moveEnd
           $6dcc = BirdFall
           $6dd8 = BirdFall.checkOffscreenY
           $6dea = BirdFall.end
           $6ded = DeathOfBird
           $6e05 = DeathOfBird.facingLeft
           $6e30 = DeathOfBird.facingRight
           $6e5b = CollisionBird
           $6e5b = CollisionBird.checkHitPlayer
           $6e7b = BirdUpdate
           $6e82 = BirdUpdate.loop
           $6ebc = BirdUpdate.isAlive
           $6ed9 = BirdUpdate.offScreen
           $6ede = BirdUpdate.isDead
           $6eef = BirdUpdate.checkLoop
  SECTION: $6f0d-$71c6 ($02ba bytes) ["bomb"]
           $6f0d = InitializeBomb
           $6f16 = InitializeBomb.loop_u1
           $6f21 = SetStruct
           $6f42 = SpawnBomb
           $6f54 = SpawnBomb.availableSpace
           $6f5d = SpawnBomb.availableOAMSpace
           $6f73 = SpawnBomb.balloonLeft
           $6f8d = SpawnBomb.balloonRight
           $6f9e = SpawnBomb.bombSpace
           $6fa9 = SpawnBomb.setStruct
           $6fae = SpawnBomb.end
           $6fb3 = Clear
           $6fd0 = Move
           $6fd8 = Move.balloonLeft
           $6fee = Move.balloonRight
           $6ffa = Move.bombSpace
           $7005 = DeathOfBomb
           $700f = CollisionBomb
           $700f = CollisionBomb.checkHit
           $702b = CollisionBomb.checkHitByBullet
           $7047 = ExplosionAnimation
           $7058 = ExplosionAnimation.canSwitchFrames
           $7070 = ExplosionAnimation.frame0
           $7095 = ExplosionAnimation.frame1
           $70d8 = ExplosionAnimation.frame2
           $7104 = ExplosionAnimation.frame3
           $7130 = ExplosionAnimation.clear
           $7134 = ExplosionAnimation.endFrame
           $713b = ExplosionAnimation.end
           $713c = BombUpdate
           $7143 = BombUpdate.loop
           $717d = BombUpdate.isAlive
           $719a = BombUpdate.offScreen
           $719f = BombUpdate.popped
           $71a9 = BombUpdate.checkLoop
  SECTION: $71c7-$7460 ($029a bytes) ["game"]
           $71c7 = InitializeGame
           $71d2 = UpdatePark.fadeIn
           $71d2 = UpdatePark
           $71d8 = UpdatePark.hasFadedIn
           $71f1 = UpdatePark.fadeOut
           $71f9 = UpdatePark.skipFade
           $71fc = UpdatePark.moveUp
           $7205 = UpdatePark.flyUpNormal
           $720b = UpdatePark.flyUpFast
           $720f = TryToUnpause
           $7226 = TryToUnpause.end
           $7227 = ParkEnteredClassic
           $722f = StartedClassic
           $7237 = SpawnHandWave
           $725b = SpawnHandWave.end
           $725c = HandWaveAnimation
           $7263 = HandWaveAnimation.frame0
           $727f = HandWaveAnimation.frame1
           $729a = HandWaveAnimation.end
           $729b = SpawnCountdown
           $72c6 = SpawnCountdown.end
           $72c7 = CountdownAnimation
           $72ce = CountdownAnimation.countdown
           $72d8 = CountdownAnimation.balloonPop
           $72e0 = CountdownAnimation.frames
           $7307 = CountdownAnimation.frame0
           $732c = CountdownAnimation.frame1
           $7351 = CountdownAnimation.frame2
           $7376 = CountdownAnimation.frame3
           $739b = CountdownAnimation.frame4
           $73c0 = CountdownAnimation.frame5
           $73e2 = CountdownAnimation.remove
           $73fc = CountdownAnimation.end
           $73fd = IncrementScrollOffset
           $73fd = IncrementScrollOffset.close
           $740b = IncrementScrollOffset.far
           $7419 = IncrementScrollOffset.end
           $741a = SetGameMapStartPoint
           $741f = UpdateSprites
           $7435 = UpdateGameCountdown
           $7447 = UpdateGame
           $7460 = UpdateGame.end
  SECTION: $7461-$767d ($021d bytes) ["point balloon"]
           $7461 = InitializePointBalloon
           $746a = InitializePointBalloon.loop_u1
           $7475 = SetStruct
           $7496 = SpawnPointBalloon
           $74a8 = SpawnPointBalloon.availableSpace
           $74b1 = SpawnPointBalloon.availableOAMSpace
           $74c7 = SpawnPointBalloon.balloonLeft
           $74e0 = SpawnPointBalloon.balloonRight
           $74f0 = SpawnPointBalloon.setStruct
           $74f5 = SpawnPointBalloon.end
           $74fa = PopBalloonAnimation
           $750b = PopBalloonAnimation.canSwitchFrames
           $7517 = PopBalloonAnimation.frame0
           $753b = PopBalloonAnimation.frame1
           $755f = PopBalloonAnimation.clear
           $7563 = PopBalloonAnimation.endFrame
           $756b = Clear
           $7584 = Move
           $758b = Move.balloonLeft
           $75a1 = Move.balloonRight
           $75ac = DeathOfPointBalloon
           $75be = CollisionPointBalloon
           $75be = CollisionPointBalloon.checkHit
           $75d7 = CollisionPointBalloon.checkHitByBullet
           $75f3 = PointBalloonUpdate
           $75fa = PointBalloonUpdate.loop
           $7634 = PointBalloonUpdate.isAlive
           $7651 = PointBalloonUpdate.offScreen
           $7656 = PointBalloonUpdate.popped
           $7660 = PointBalloonUpdate.checkLoop
           $766f = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $767e-$77d3 ($0156 bytes) ["porcupine"]
           $767e = InitializePorcupine
           $7687 = InitializePorcupine.loop_u1
           $7692 = GetStruct
           $76aa = SetStruct
           $76c1 = SpawnPorcupine
           $76d4 = SpawnPorcupine.availableSpace
           $76de = SpawnPorcupine.availableOAMSpace
           $76f4 = SpawnPorcupine.topLeft
           $770d = SpawnPorcupine.topMiddle
           $771d = SpawnPorcupine.topMiddle2
           $772d = SpawnPorcupine.topRight
           $773d = SpawnPorcupine.bottomLeft
           $774d = SpawnPorcupine.bottomMiddle
           $775f = SpawnPorcupine.bottomMiddle2
           $7771 = SpawnPorcupine.bottomRight
           $7783 = SpawnPorcupine.setStruct
           $7788 = SpawnPorcupine.end
           $778d = PorcupineUpdate
           $7794 = PorcupineUpdate.loop
           $77b1 = PorcupineUpdate.offScreen
           $77b1 = PorcupineUpdate.isAlive
           $77b3 = PorcupineUpdate.checkLoop
           $77b3 = PorcupineUpdate.isDead
           $77cf = PorcupineUpdate.end
  SECTION: $77d4-$78d2 ($00ff bytes) ["menu"]
           $77d4 = InitializeMenu
           $77e0 = SpawnMenuCursor
           $77e9 = SpawnMenuCursor.availableSpace
           $7804 = SpawnMenuCursor.end
           $7805 = BlinkMenuCursor
           $780d = BlinkMenuCursor.blink
           $781e = BlinkMenuCursor.show
           $7822 = BlinkMenuCursor.empty
           $7826 = MoveCursor
           $7827 = SelectMode
           $782e = SelectMode.classicMode
           $7837 = SelectMode.storyMode
           $7838 = MenuInput
           $7842 = MenuInput.moveSelected
           $784b = MenuInput.selectMode
           $7854 = MenuInput.end
           $7855 = UpdateMenuOpening
           $7871 = UpdateMenuOpening.startSound
           $7876 = UpdateMenuOpening.scrollUpTitle
           $7882 = UpdateMenuOpening.endSound
           $7887 = UpdateMenuOpening.scrollDownTitle
           $7893 = UpdateMenuOpening.scrollUpTitle2
           $789f = UpdateMenuOpening.fadeOut
           $78a7 = UpdateMenuOpening.next
           $78ab = UpdateMenuOpening.endFrame
           $78b2 = UpdateMenuOpening.end
           $78b3 = UpdateMenu
           $78b3 = UpdateMenu.fadeIn
           $78b9 = UpdateMenu.hasFadedIn
           $78ca = UpdateMenu.fadeOut
  SECTION: $78d3-$798c ($00ba bytes) ["sound"]
           $78d3 = AUDIO_OFF
           $78d7 = AUDIO_ON
           $78dc = PopSound
           $78ef = ExplosionSound
           $78fc = WaveSound
           $7909 = FallingSound
           $791e = RisingSound
           $7933 = StopSweepSound
           $7938 = CollectSound
           $794d = WrongAnswerSound
           $7964 = PercussionSound
           $7971 = BassSound
           $7982 = ClearSound
  SECTION: $798d-$7a35 ($00a9 bytes) ["palettes"]
           $798d = SetupPalettes
           $799e = SetupParkPalettes
           $79ad = FadeOutPalettes
           $79ad = FadeOutPalettes.fadeOut
           $79ca = FadeOutPalettes.fade1
           $79ce = FadeOutPalettes.fade2
           $79d2 = FadeOutPalettes.fade3
           $79d6 = FadeOutPalettes.fade4
           $79d8 = FadeOutPalettes.fadePalettes
           $79e7 = FadeOutPalettes.end
           $79e9 = FadeInPalettes
           $79f0 = FadeInPalettes.hasFadedIn
           $79f3 = FadeInPalettes.fadeIn
           $7a0f = FadeInPalettes.fade1
           $7a13 = FadeInPalettes.fade2
           $7a17 = FadeInPalettes.fade3
           $7a1b = FadeInPalettes.fade4
           $7a1d = FadeInPalettes.fadePalettes
           $7a2c = FadeInPalettes.end
           $7a2e = ResetFading
  SECTION: $7a36-$7acf ($009a bytes) ["memory"]
           $7a36 = MEMCPY.memcpy_loop
           $7a36 = MEMCPY
           $7a3a = MEMCPY.memcpy_check_limit
           $7a40 = MEMCPY_WITH_OFFSET
           $7a41 = MEMCPY_WITH_OFFSET.memcpy_loop
           $7a4c = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $7a53 = ClearOAM
           $7a5a = ClearOAM.loop_u1
           $7a63 = ClearRAM
           $7a6a = ClearRAM.loop_u2
           $7a73 = RequestOAMSpace
           $7a7c = RequestOAMSpace.loop
           $7a93 = RequestOAMSpace.availableSpace
           $7a98 = RequestOAMSpace.sufficientSpace
           $7aa8 = RequestOAMSpace.isNotZero4
           $7aa9 = RequestOAMSpace.isNotZero3
           $7aaa = RequestOAMSpace.isNotZero2
           $7aab = RequestOAMSpace.isNotZero1
           $7aad = RequestOAMSpace.notEnoughSprites
           $7ab5 = RequestOAMSpace.end
           $7ab8 = RequestRAMSpace
           $7ab8 = RequestRAMSpace.loop
           $7abd = RequestRAMSpace.availableSpace
           $7ac1 = RequestRAMSpace.checkLoop
           $7ace = RequestRAMSpace.noFreeSpace
           $7acf = RequestRAMSpace.end
  SECTION: $7ad0-$7b18 ($0049 bytes) ["math"]
           $7ad0 = MODULO
           $7ad2 = MODULO.loop
           $7ad7 = RANDOM
           $7ae0 = DIVISION
           $7ae6 = DIVISION.loop
           $7aeb = DIVISION.end
           $7aee = ToBCD
           $7b05 = ToBCD.end
           $7b08 = MULTIPLY
           $7b0b = MULTIPLY.loop
           $7b16 = MULTIPLY.end
  SECTION: $7b19-$7b4a ($0032 bytes) ["lcd"]
           $7b19 = LCD_OFF
           $7b20 = LCD_ON
           $7b27 = LCD_ON_NO_WINDOW
           $7b2e = WaitVBlank
           $7b35 = WaitVBlank.loop
           $7b40 = SetupWindow
  SECTION: $7b4b-$7b6f ($0025 bytes) ["score"]
           $7b4b = InitializeScore
           $7b53 = AddPoints
           $7b63 = AddPoints.carry
           $7b6d = AddPoints.end
  SECTION: $7b70-$7b90 ($0021 bytes) ["general initialization"]
           $7b70 = InitializeGameVars
  SECTION: $7b91-$7b98 ($0008 bytes) ["timer"]
           $7b91 = UpdateGlobalTimer
    SLACK: $0467 bytes

WRAM0 bank #0:
  SECTION: $c000-$c00b ($000c bytes) ["general RAM vars"]
           $c000 = wFadeInFrame
           $c001 = wFadeOutFrame
           $c002 = wOAMGeneral1
           $c003 = wOAMGeneral2
           $c004 = wParallaxClose
           $c005 = wParallaxFar
           $c006 = wUpdateTilemapAddress
           $c008 = wUpdateTilemapOffset
           $c009 = wUpdateTilemapIndex
           $c00a = wHasUpdatedNextTilemapAddress
           $c00b = wLastUpdatedSCX
  SECTION: $c00c-$c051 ($0046 bytes) ["Playback variables"]
           $c00c = _start_vars
           $c00c = order_cnt
           $c00d = order1
           $c00d = _start_song_descriptor_pointers
           $c00f = order2
           $c011 = order3
           $c013 = order4
           $c015 = duty_instruments
           $c017 = wave_instruments
           $c019 = noise_instruments
           $c01b = routines
           $c01d = waves
           $c01f = mute_channels
           $c01f = _end_song_descriptor_pointers
           $c020 = pattern1
           $c022 = pattern2
           $c024 = pattern3
           $c026 = pattern4
           $c028 = ticks_per_row
           $c029 = current_order
           $c02a = next_order
           $c02b = row_break
           $c02c = temp_note_value
           $c02e = row
           $c02f = tick
           $c030 = counter
           $c031 = current_wave
           $c031 = _hUGE_current_wave
           $c032 = channel_period1
           $c032 = channels
           $c032 = channel1
           $c034 = toneporta_target1
           $c036 = channel_note1
           $c037 = vibrato_tremolo_phase1
           $c038 = envelope1
           $c039 = highmask1
           $c03a = channel_period2
           $c03a = channel2
           $c03c = toneporta_target2
           $c03e = channel_note2
           $c03f = vibrato_tremolo_phase2
           $c040 = envelope2
           $c041 = highmask2
           $c042 = channel_period3
           $c042 = channel3
           $c044 = toneporta_target3
           $c046 = channel_note3
           $c047 = vibrato_tremolo_phase3
           $c048 = envelope3
           $c049 = highmask3
           $c04a = channel_period4
           $c04a = channel4
           $c04c = toneporta_target4
           $c04e = channel_note4
           $c04f = vibrato_tremolo_phase4
           $c050 = envelope4
           $c051 = highmask4
           $c052 = _end_vars
  SECTION: $c052-$c071 ($0020 bytes) ["point balloon vars"]
           $c052 = pointBalloon
  SECTION: $c072-$c08f ($001e bytes) ["balloon cactus vars"]
           $c072 = balloonCactus
  SECTION: $c090-$c0a6 ($0017 bytes) ["player vars"]
           $c090 = wPlayerY
           $c091 = wPlayerX
           $c092 = wPlayerY2
           $c093 = wPlayerX2
           $c094 = wPlayerAlive
           $c095 = wPlayerPopping
           $c096 = wPlayerPoppingFrame
           $c097 = wPlayerPoppingTimer
           $c098 = wPlayerFalling
           $c099 = wPlayerFallSpeed
           $c09a = wPlayerFallingTimer
           $c09b = wPlayerDelayFallingTimer
           $c09c = wPlayerRespawnTimer
           $c09d = wPlayerSpeed
           $c09e = wPlayerLives
           $c09f = wPlayerRight
           $c0a0 = wPlayerBulletY
           $c0a1 = wPlayerBulletX
           $c0a2 = wPlayerBulletAlive
           $c0a3 = wPlayerBulletRight
           $c0a4 = wPlayerInvincible
           $c0a5 = wPlayerBoost
           $c0a6 = wPlayerAttack
  SECTION: $c0a7-$c0b6 ($0010 bytes) ["bird vars"]
           $c0a7 = bird
  SECTION: $c0b7-$c0c6 ($0010 bytes) ["enemy struct vars"]
           $c0b7 = wEnemyOffset
           $c0b8 = wEnemyY
           $c0b9 = wEnemyX
           $c0ba = wEnemyActive
           $c0bb = wEnemyOAM
           $c0bc = wEnemyAlive
           $c0bd = wEnemyPopping
           $c0be = wEnemyPoppingFrame
           $c0bf = wEnemyPoppingTimer
           $c0c0 = wEnemyRightside
           $c0c1 = wEnemyY2
           $c0c2 = wEnemyX2
           $c0c3 = wEnemyFalling
           $c0c4 = wEnemyFallingSpeed
           $c0c5 = wEnemyFallingTimer
           $c0c6 = wEnemyDelayFallingTimer
  SECTION: $c0c7-$c0d6 ($0010 bytes) ["bomb vars"]
           $c0c7 = bomb
  SECTION: $c0d7-$c0db ($0005 bytes) ["porcupine vars"]
           $c0d7 = porcupine
  SECTION: $c0dc-$c0de ($0003 bytes) ["controller vars"]
           $c0dc = wControllerDown
           $c0dd = wControllerPressed
           $c0de = wPaused
  SECTION: $c0df-$c0e1 ($0003 bytes) ["score vars"]
           $c0df = wScore
  SECTION: $c0e2-$c0e4 ($0003 bytes) ["game vars"]
           $c0e2 = wHandWavingFrame
           $c0e3 = wCountdownFrame
           $c0e4 = wClassicModeStage
  SECTION: $c0e5-$c0e7 ($0003 bytes) ["interrupts vars"]
           $c0e5 = wVBlankFlag
           $c0e6 = wLCDInterrupt
  SECTION: $c0e8-$c0ea ($0003 bytes) ["level vars"]
           $c0e8 = wLevel
           $c0e9 = wLevelPointer
           $c0ea = wLevelPointerWaitCounter
  SECTION: $c0eb-$c0ec ($0002 bytes) ["menu vars"]
           $c0eb = wMenuFrame
           $c0ec = wSelectedMode
  SECTION: $c0ed-$c0ed ($0001 byte) ["timer vars"]
           $c0ed = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e72 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1dee bytes in 1 bank
    ROMX: $3b99 bytes in 1 bank
    WRAM0: $018e bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
