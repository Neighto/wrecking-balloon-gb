ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d5 ($008b bytes) ["collision"]
           $004b = CollisionCheck
           $0058 = CollisionCheck.tryOtherY
           $0060 = CollisionCheck.skip8x8Adjustment
           $006c = CollisionCheck.checkX
           $0079 = CollisionCheck.tryOtherX
           $0086 = CollisionCheck.collision
           $008a = CollisionCheck.end
           $008e = CollisionWithPlayer
           $0099 = CollisionFallingEnemy
           $009a = OffScreenXEnemies
           $00ab = OffScreenXEnemies.end
           $00ad = OffScreenYEnemies
           $00be = OffScreenYEnemies.end
           $00c0 = OffScreenX
           $00c8 = OffScreenX.end
           $00ca = OffScreenY
           $00d4 = OffScreenY.end
  SECTION: $00d6-$00f9 ($0024 bytes) ["scroll"]
           $00d6 = HorizontalScroll
           $00e3 = HorizontalScroll.end
           $00e5 = VerticalScroll
           $00f2 = VerticalScroll.end
           $00f4 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$1596 ($03e6 bytes) ["player"]
           $11b1 = InitializePlayer
           $11f5 = UpdateBalloonPosition
           $11f5 = UpdateBalloonPosition.balloonLeft
           $1202 = UpdateBalloonPosition.balloonRight
           $120d = UpdateCactusPosition
           $120d = UpdateCactusPosition.cactusLeft
           $121a = UpdateCactusPosition.cactusRight
           $1225 = SpawnPlayer
           $1225 = SpawnPlayer.cactusLeft
           $1235 = SpawnPlayer.cactusRight
           $1245 = SpawnPlayer.balloonLeft
           $1255 = SpawnPlayer.balloonRight
           $1266 = ClearPlayerCactus
           $1273 = ClearPlayerBalloon
           $1280 = RespawnPlayer
           $1293 = MoveRight
           $12a3 = MoveRight.canCactusDriftLeft
           $12b5 = MoveRight.cactusDriftLeft
           $12b7 = MoveLeft
           $12cb = MoveLeft.canCactusDriftRight
           $12dc = MoveLeft.cactusDriftRight
           $12de = MoveDown
           $12ee = MoveDown.canCactusDriftUp
           $1300 = MoveDown.cactusDriftUp
           $1302 = ChargeBoost
           $1308 = ChargeBoost.isCharging
           $130f = ChargeBoost.resetBoost
           $1315 = ChargeAttack
           $131b = ChargeAttack.isCharging
           $1322 = ChargeAttack.resetAttack
           $1323 = SpawnBullet
           $1324 = PlayerControls
           $1324 = PlayerControls.right
           $1337 = PlayerControls.moveRight
           $133a = PlayerControls.endRight
           $133a = PlayerControls.left
           $1350 = PlayerControls.endLeft
           $1350 = PlayerControls.up
           $1363 = PlayerControls.moveUp
           $1377 = PlayerControls.endUp
           $1377 = PlayerControls.down
           $138d = PlayerControls.endDown
           $138d = PlayerControls.canCactusDriftCenterX
           $13ab = PlayerControls.driftCenterXRight
           $13ae = PlayerControls.driftCenterXLeft
           $13af = PlayerControls.endDriftToCenterX
           $13af = PlayerControls.canCactusDriftCenterY
           $13d0 = PlayerControls.driftCenterYUp
           $13d3 = PlayerControls.driftCenterYDown
           $13d4 = PlayerControls.endDriftToCenterY
           $13d4 = PlayerControls.start
           $13df = PlayerControls.endStart
           $13df = PlayerControls.AButton
           $13ec = PlayerControls.activateAttack
           $13f4 = PlayerControls.endA
           $13f4 = PlayerControls.BButton
           $1401 = PlayerControls.activateBoost
           $140b = PlayerControls.endB
           $140c = MovePlayer
           $1421 = MovePlayerAutoFlyUp
           $143a = FallCactusDown
           $144f = FallCactusDown.skipAcceleration
           $1458 = PopBalloonAnimation
           $1469 = PopBalloonAnimation.canSwitchFrames
           $1475 = PopBalloonAnimation.frame0
           $1487 = PopBalloonAnimation.frame1
           $1499 = PopBalloonAnimation.clear
           $14a9 = PopBalloonAnimation.endFrame
           $14ae = CactusFalling
           $14c8 = CactusFalling.offScreen
           $14d0 = CactusFalling.end
           $14d1 = NoMoreLives
           $14db = PlayerUpdate
           $14e2 = PlayerUpdate.isAlive
           $14fe = PlayerUpdate.popped
           $1509 = PlayerUpdate.popping
           $1511 = PlayerUpdate.falling
           $151a = PlayerUpdate.respawning
           $1521 = PlayerUpdate.noMoreLives
           $1525 = PlayerUpdate.respawn
           $1529 = DeathOfPlayer
           $154d = InvincibleBlink
           $1553 = InvincibleBlink.isStillInvincible
           $1562 = InvincibleBlink.blinkNormal
           $1569 = InvincibleBlink.blinkFast
           $156d = InvincibleBlink.blinkEnd
           $1582 = InvincibleBlink.defaultPalette
  SECTION: $1597-$17f9 ($0263 bytes) ["graphics"]
           $1597 = AddBGTiles8800Method
           $15a1 = AddBGTiles8800Method.tilesFitBlock
           $15a6 = AddBGTiles8800Method.tilesExceedBlock
           $15c5 = AddBGTiles8800Method.end
           $15c8 = LoadPlayerTiles
           $15d5 = LoadWindow
           $15d5 = LoadWindow.loadTiles
           $15e1 = LoadWindow.loadMap
           $15f0 = LoadEnemyTiles
           $1615 = LoadWorld1
           $1631 = LoadClassicData
           $163b = LoadMenuOpeningData
           $1657 = LoadMenuData
           $1670 = RefreshScore
           $16aa = RefreshLives
           $16b3 = RefreshBoostBar
           $16bd = RefreshBoostBar.isCharging
           $16c7 = RefreshBoostBar.isHalfReady
           $16ce = RefreshBoostBar.isReady
           $16d4 = RefreshAttackBar
           $16de = RefreshAttackBar.isCharging
           $16e8 = RefreshAttackBar.isHalfReady
           $16ef = RefreshAttackBar.isReady
           $16f5 = RefreshWindow
           $1708 = RefreshWindow.end
           $1709 = ClearAllTiles
           $1712 = ClearAllTiles.loop_u4
           $1721 = ClearAllTiles.loop_u5
           $1730 = ClearAllTiles.loop_u6
           $173b = ClearMap
           $1744 = ClearMap.loop_u7
           $174f = ReplaceTilemapHorizontal
           $1778 = ReplaceTilemapHorizontal.handleZero
           $177a = ReplaceTilemapHorizontal.handleZeroEnd
           $1786 = ReplaceTilemapHorizontal.loop
           $17a4 = ReplaceTilemapHorizontal.end
           $17a9 = MoveToNextTilemap
           $17bc = MoveToNextTilemap.canUpdateTilemap
           $17cf = MoveToNextTilemap.clouds1
           $17e4 = MoveToNextTilemap.clouds2
           $17f7 = MoveToNextTilemap.end
  SECTION: $17fa-$1960 ($0167 bytes) ["level data"]
           $17fa = W1L1W1
           $17fd = W1L1W2
           $17fd = W1L1W1End
           $1803 = W1L1W3
           $1803 = W1L1W2End
           $180c = W1L1W4
           $180c = W1L1W3End
           $1812 = W1L2W1
           $1812 = W1L1W4End
           $181b = W1L2W2
           $181b = W1L2W1End
           $1821 = W1L2W3
           $1821 = W1L2W2End
           $1827 = W1L2W4
           $1827 = W1L2W3End
           $1833 = W1L2W4End
           $1833 = W2L1
           $1836 = W2L1End
           $1836 = InitializeLevelVars
           $1842 = LevelDataHandler
           $1842 = LevelDataHandler.loop
           $185d = LevelDataHandler.pointBalloon
           $186c = LevelDataHandler.balloonCactus
           $187b = LevelDataHandler.bird
           $188a = LevelDataHandler.bomb
           $1899 = LevelDataHandler.porcupine
           $18a8 = LevelDataHandler.empty
           $18aa = LevelDataHandler.loopCheck
           $18b0 = LevelDataHandler.end
           $18b1 = LevelDataManager
           $18ce = LevelDataManager.w1
           $18dc = LevelDataManager.w1_l1
           $18f2 = LevelDataManager.w1_l1_w1
           $18fa = LevelDataManager.w1_l1_w2
           $1902 = LevelDataManager.w1_l1_w3
           $190a = LevelDataManager.w1_l1_w4
           $191d = LevelDataManager.w1_l2
           $1932 = LevelDataManager.w1_l2_w1
           $193a = LevelDataManager.w1_l2_w2
           $1942 = LevelDataManager.w1_l2_w3
           $194a = LevelDataManager.w1_l2_w4
           $1952 = LevelDataManager.w2
           $1954 = LevelDataManager.w3
           $1956 = LevelDataManager.handle
           $1960 = LevelDataManager.end
  SECTION: $1961-$1a2e ($00ce bytes) ["interrupts"]
           $1961 = InitializeInterrupts
           $1977 = VBlankInterrupt
           $1987 = LCDInterrupt
           $1991 = LCDInterruptEnd
           $1995 = MenuLCDInterrupt
           $19a5 = MenuLCDInterrupt.reset
           $19ae = MenuLCDInterrupt.far
           $19bc = MenuLCDInterrupt.close
           $19c8 = MenuLCDInterrupt.end
           $19cb = SetMenuInterrupts
           $19d9 = ParkLCDInterrupt
           $19e5 = ParkLCDInterrupt.clouds
           $19f3 = ParkLCDInterrupt.ground
           $19f8 = ParkLCDInterrupt.end
           $19fb = SetParkInterrupts
           $19ff = ClassicLCDInterrupt
           $1a21 = SetClassicInterrupts
  SECTION: $1a2f-$1afb ($00cd bytes) ["rom"]
           $1a2f = Start
           $1a69 = StartClassic
           $1a69 = StartMenu
           $1aba = PreGameLoop
           $1ade = GameLoopCountdown
           $1aed = GameLoop
  SECTION: $1afc-$1b73 ($0078 bytes) ["controller"]
           $1afc = InitializeController
           $1b01 = ReadInput
           $1b31 = JOY_RIGHT
           $1b39 = JOY_LEFT
           $1b41 = JOY_UP
           $1b49 = JOY_DOWN
           $1b51 = JOY_A
           $1b59 = JOY_B
           $1b61 = JOY_SELECT
           $1b69 = JOY_START
           $1b71 = JOY_FALSE
  SECTION: $1b74-$1b91 ($001e bytes) ["OAM DMA routine"]
           $1b74 = CopyDMARoutine
           $1b7b = CopyDMARoutine.copy
           $1b82 = DMARoutine
           $1b86 = DMARoutine.wait
           $1b8a = DMARoutineEnd
           $1b8a = OAMDMA
    SLACK: $248e bytes

ROMX bank #1:
  SECTION: $4000-$539f ($13a0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = BackgroundTiles
           $46f0 = BackgroundTilesEnd
           $46f0 = ClassicParkTiles
           $4730 = CountdownTiles
           $4730 = ClassicParkTilesEnd
           $4830 = CountdownTilesEnd
           $4830 = WindowTiles
           $4a00 = WindowTilesEnd
           $4a00 = MenuTiles
           $4a20 = MenuTilesEnd
           $4a20 = MenuTitleTiles
           $53a0 = MenuTitleTilesEnd
  SECTION: $53a0-$5edd ($0b3e bytes) ["Song Data2"]
           $53a0 = angryTheme
           $53b5 = order_cnt
           $53b6 = order1
           $53c0 = order2
           $53ca = order3
           $53d4 = order4
           $53de = P0
           $549e = P1
           $555e = P2
           $561e = P3
           $56de = P4
           $579e = P5
           $585e = P6
           $591e = P7
           $59de = P8
           $5a9e = P9
           $5b5e = P10
           $5c1e = P11
           $5cde = duty_instruments
           $5cde = itSquareinst1
           $5ce2 = itSquareinst2
           $5ce6 = itSquareinst3
           $5cea = itSquareinst4
           $5cee = itSquareinst5
           $5cf2 = itSquareinst6
           $5cf6 = itSquareinst7
           $5cfa = itSquareinst8
           $5cfe = itSquareinst9
           $5d02 = itSquareinst10
           $5d06 = itSquareinst11
           $5d0a = itSquareinst12
           $5d0e = itSquareinst13
           $5d12 = itSquareinst14
           $5d16 = itSquareinst15
           $5d1a = wave_instruments
           $5d1a = itWaveinst1
           $5d1e = itWaveinst2
           $5d22 = itWaveinst3
           $5d26 = itWaveinst4
           $5d2a = itWaveinst5
           $5d2e = itWaveinst6
           $5d32 = itWaveinst7
           $5d36 = itWaveinst8
           $5d3a = itWaveinst9
           $5d3e = itWaveinst10
           $5d42 = itWaveinst11
           $5d46 = itWaveinst12
           $5d4a = itWaveinst13
           $5d4e = itWaveinst14
           $5d52 = itWaveinst15
           $5d56 = noise_instruments
           $5d56 = itNoiseinst1
           $5d5e = itNoiseinst2
           $5d66 = itNoiseinst3
           $5d6e = itNoiseinst4
           $5d76 = itNoiseinst5
           $5d7e = itNoiseinst6
           $5d86 = itNoiseinst7
           $5d8e = itNoiseinst8
           $5d96 = itNoiseinst9
           $5d9e = itNoiseinst10
           $5da6 = itNoiseinst11
           $5dae = itNoiseinst12
           $5db6 = itNoiseinst13
           $5dbe = itNoiseinst14
           $5dc6 = itNoiseinst15
           $5dce = routines
           $5dce = __end_hUGE_Routine_0
           $5dce = __hUGE_Routine_0
           $5dcf = __end_hUGE_Routine_1
           $5dcf = __hUGE_Routine_1
           $5dd0 = __end_hUGE_Routine_2
           $5dd0 = __hUGE_Routine_2
           $5dd1 = __end_hUGE_Routine_3
           $5dd1 = __hUGE_Routine_3
           $5dd2 = __end_hUGE_Routine_4
           $5dd2 = __hUGE_Routine_4
           $5dd3 = __end_hUGE_Routine_5
           $5dd3 = __hUGE_Routine_5
           $5dd4 = __end_hUGE_Routine_6
           $5dd4 = __hUGE_Routine_6
           $5dd5 = __end_hUGE_Routine_7
           $5dd5 = __hUGE_Routine_7
           $5dd6 = __hUGE_Routine_8
           $5dd6 = __end_hUGE_Routine_8
           $5dd7 = __hUGE_Routine_9
           $5dd7 = __end_hUGE_Routine_9
           $5dd8 = __hUGE_Routine_10
           $5dd8 = __end_hUGE_Routine_10
           $5dd9 = __hUGE_Routine_11
           $5dd9 = __end_hUGE_Routine_11
           $5dda = __hUGE_Routine_12
           $5dda = __end_hUGE_Routine_12
           $5ddb = __hUGE_Routine_13
           $5ddb = __end_hUGE_Routine_13
           $5ddc = __end_hUGE_Routine_14
           $5ddc = __hUGE_Routine_14
           $5ddd = __end_hUGE_Routine_15
           $5ddd = __hUGE_Routine_15
           $5dde = waves
           $5dde = wave0
           $5dee = wave1
           $5dfe = wave2
           $5e0e = wave3
           $5e1e = wave4
           $5e2e = wave5
           $5e3e = wave6
           $5e4e = wave7
           $5e5e = wave8
           $5e6e = wave9
           $5e7e = wave10
           $5e8e = wave11
           $5e9e = wave12
           $5eae = wave13
           $5ebe = wave14
           $5ece = wave15
  SECTION: $5ede-$63fb ($051e bytes) ["Song Data"]
           $5ede = menuTheme
           $5ef3 = order_cnt
           $5ef4 = order1
           $5ef6 = order2
           $5ef8 = order3
           $5efa = order4
           $5efc = P1
           $5fbc = P2
           $607c = P3
           $613c = P6
           $61fc = duty_instruments
           $61fc = itSquareinst1
           $6200 = itSquareinst2
           $6204 = itSquareinst3
           $6208 = itSquareinst4
           $620c = itSquareinst5
           $6210 = itSquareinst6
           $6214 = itSquareinst7
           $6218 = itSquareinst8
           $621c = itSquareinst9
           $6220 = itSquareinst10
           $6224 = itSquareinst11
           $6228 = itSquareinst12
           $622c = itSquareinst13
           $6230 = itSquareinst14
           $6234 = itSquareinst15
           $6238 = wave_instruments
           $6238 = itWaveinst1
           $623c = itWaveinst2
           $6240 = itWaveinst3
           $6244 = itWaveinst4
           $6248 = itWaveinst5
           $624c = itWaveinst6
           $6250 = itWaveinst7
           $6254 = itWaveinst8
           $6258 = itWaveinst9
           $625c = itWaveinst10
           $6260 = itWaveinst11
           $6264 = itWaveinst12
           $6268 = itWaveinst13
           $626c = itWaveinst14
           $6270 = itWaveinst15
           $6274 = noise_instruments
           $6274 = itNoiseinst1
           $627c = itNoiseinst2
           $6284 = itNoiseinst3
           $628c = itNoiseinst4
           $6294 = itNoiseinst5
           $629c = itNoiseinst6
           $62a4 = itNoiseinst7
           $62ac = itNoiseinst8
           $62b4 = itNoiseinst9
           $62bc = itNoiseinst10
           $62c4 = itNoiseinst11
           $62cc = itNoiseinst12
           $62d4 = itNoiseinst13
           $62dc = itNoiseinst14
           $62e4 = itNoiseinst15
           $62ec = routines
           $62ec = __end_hUGE_Routine_0
           $62ec = __hUGE_Routine_0
           $62ed = __end_hUGE_Routine_1
           $62ed = __hUGE_Routine_1
           $62ee = __end_hUGE_Routine_2
           $62ee = __hUGE_Routine_2
           $62ef = __end_hUGE_Routine_3
           $62ef = __hUGE_Routine_3
           $62f0 = __end_hUGE_Routine_4
           $62f0 = __hUGE_Routine_4
           $62f1 = __end_hUGE_Routine_5
           $62f1 = __hUGE_Routine_5
           $62f2 = __end_hUGE_Routine_6
           $62f2 = __hUGE_Routine_6
           $62f3 = __end_hUGE_Routine_7
           $62f3 = __hUGE_Routine_7
           $62f4 = __hUGE_Routine_8
           $62f4 = __end_hUGE_Routine_8
           $62f5 = __hUGE_Routine_9
           $62f5 = __end_hUGE_Routine_9
           $62f6 = __hUGE_Routine_10
           $62f6 = __end_hUGE_Routine_10
           $62f7 = __hUGE_Routine_11
           $62f7 = __end_hUGE_Routine_11
           $62f8 = __hUGE_Routine_12
           $62f8 = __end_hUGE_Routine_12
           $62f9 = __hUGE_Routine_13
           $62f9 = __end_hUGE_Routine_13
           $62fa = __end_hUGE_Routine_14
           $62fa = __hUGE_Routine_14
           $62fb = __end_hUGE_Routine_15
           $62fb = __hUGE_Routine_15
           $62fc = waves
           $62fc = wave0
           $630c = wave1
           $631c = wave2
           $632c = wave3
           $633c = wave4
           $634c = wave5
           $635c = wave6
           $636c = wave7
           $637c = wave8
           $638c = wave9
           $639c = wave10
           $63ac = wave11
           $63bc = wave12
           $63cc = wave13
           $63dc = wave14
           $63ec = wave15
  SECTION: $63fc-$675c ($0361 bytes) ["balloon cactus"]
           $63fc = InitializeBalloonCactus
           $6405 = InitializeBalloonCactus.loop_u1
           $6410 = SetStruct
           $644d = SpawnBalloonCactus
           $6460 = SpawnBalloonCactus.availableSpace
           $6469 = SpawnBalloonCactus.availableOAMSpace
           $6497 = SpawnBalloonCactus.isLeftside
           $6497 = SpawnBalloonCactus.balloonLeft
           $64af = SpawnBalloonCactus.balloonRight
           $64bf = SpawnBalloonCactus.cactusLeft
           $64cd = SpawnBalloonCactus.cactusRight
           $64dd = SpawnBalloonCactus.setStruct
           $64e2 = SpawnBalloonCactus.end
           $64e7 = ClearCactus
           $64fc = ClearBalloon
           $6510 = Clear
           $651a = PopBalloonAnimation
           $652b = PopBalloonAnimation.canSwitchFrames
           $6539 = PopBalloonAnimation.frame0
           $655b = PopBalloonAnimation.frame1
           $657d = PopBalloonAnimation.clear
           $659c = PopBalloonAnimation.endFrame
           $65a0 = PopBalloonAnimation.end
           $65a1 = CactusFalling
           $65b3 = CactusFalling.falling
           $65c9 = CactusFalling.skipAcceleration
           $65d5 = CactusFalling.offScreen
           $65d8 = CactusFalling.end
           $65d9 = UpdateBalloonPosition
           $65d9 = UpdateBalloonPosition.balloonLeft
           $65ee = UpdateBalloonPosition.balloonRight
           $65f9 = UpdateCactusPosition
           $65f9 = UpdateCactusPosition.cactusLeft
           $660e = UpdateCactusPosition.cactusRight
           $6619 = Move
           $6634 = Move.isLeftside
           $6642 = Move.updatePosition
           $6649 = DeathOfBalloonCactus
           $6678 = CollisionBalloonCactus
           $6678 = CollisionBalloonCactus.checkHit
           $668f = CollisionBalloonCactus.checkHitPlayer
           $66ad = BalloonCactusUpdate
           $66b4 = BalloonCactusUpdate.loop
           $670a = BalloonCactusUpdate.isAlive
           $6727 = BalloonCactusUpdate.offScreen
           $672c = BalloonCactusUpdate.popped
           $6736 = BalloonCactusUpdate.notPopping
           $6740 = BalloonCactusUpdate.checkLoop
           $674e = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $675d-$6ab5 ($0359 bytes) ["bird"]
           $675d = InitializeBird
           $6766 = InitializeBird.loop_u1
           $6771 = SetStruct
           $6792 = SpawnBird
           $67a5 = SpawnBird.availableSpace
           $67af = SpawnBird.availableOAMSpace
           $67cc = SpawnBird.isRightside
           $67d1 = SpawnBird.birdLeft
           $67e9 = SpawnBird.birdMiddle
           $67f9 = SpawnBird.birdRight
           $680b = SpawnBird.isLeftside
           $680b = SpawnBird.leftBirdLeft
           $6823 = SpawnBird.leftBirdMiddle
           $6833 = SpawnBird.leftBirdRight
           $6843 = SpawnBird.setStruct
           $6848 = SpawnBird.end
           $684d = BirdRightsideFlap
           $6854 = BirdRightsideFlap.soaring
           $687a = BirdRightsideFlap.flapping
           $68a9 = BirdLeftsideFlap
           $68b0 = BirdLeftsideFlap.soaring
           $68d6 = BirdLeftsideFlap.flapping
           $6905 = Clear
           $6921 = UpdateBirdPosition
           $6921 = UpdateBirdPosition.birdLeft
           $6936 = UpdateBirdPosition.birdMiddle
           $6942 = UpdateBirdPosition.birdRight
           $694d = Move
           $6954 = Move.isRightside
           $6962 = Move.isLeftside
           $696c = Move.moveDown
           $697a = Move.moveEnd
           $697e = BirdFall
           $698a = BirdFall.checkOffscreenY
           $699c = BirdFall.end
           $699f = DeathOfBird
           $69b7 = DeathOfBird.facingLeft
           $69df = DeathOfBird.facingRight
           $6a07 = CollisionBird
           $6a07 = CollisionBird.checkHitPlayer
           $6a26 = BirdUpdate
           $6a2d = BirdUpdate.loop
           $6a66 = BirdUpdate.isAlive
           $6a83 = BirdUpdate.offScreen
           $6a88 = BirdUpdate.isDead
           $6a99 = BirdUpdate.checkLoop
  SECTION: $6ab6-$6d47 ($0292 bytes) ["game"]
           $6ab6 = InitializeGame
           $6ac1 = UpdatePark.fadeIn
           $6ac1 = UpdatePark
           $6ac7 = UpdatePark.hasFadedIn
           $6ae0 = UpdatePark.fadeOut
           $6ae8 = UpdatePark.skipFade
           $6aeb = UpdatePark.moveUp
           $6af4 = UpdatePark.flyUpNormal
           $6afa = UpdatePark.flyUpFast
           $6afe = TryToUnpause
           $6b15 = TryToUnpause.end
           $6b16 = ParkEnteredClassic
           $6b1e = StartedClassic
           $6b26 = SpawnHandWave
           $6b49 = SpawnHandWave.end
           $6b4a = HandWaveAnimation
           $6b51 = HandWaveAnimation.frame0
           $6b6c = HandWaveAnimation.frame1
           $6b86 = HandWaveAnimation.end
           $6b87 = SpawnCountdown
           $6bb1 = SpawnCountdown.end
           $6bb2 = CountdownAnimation
           $6bb9 = CountdownAnimation.countdown
           $6bc3 = CountdownAnimation.balloonPop
           $6bcb = CountdownAnimation.frames
           $6bf2 = CountdownAnimation.frame0
           $6c15 = CountdownAnimation.frame1
           $6c38 = CountdownAnimation.frame2
           $6c5b = CountdownAnimation.frame3
           $6c7e = CountdownAnimation.frame4
           $6ca1 = CountdownAnimation.frame5
           $6cc1 = CountdownAnimation.remove
           $6cda = CountdownAnimation.end
           $6cdb = IncrementScrollOffset
           $6cdb = IncrementScrollOffset.close
           $6ce9 = IncrementScrollOffset.far
           $6cf7 = IncrementScrollOffset.end
           $6cf8 = SetGameMapStartPoint
           $6cfd = UpdateSprites
           $6d10 = UpdateGameCountdown
           $6d28 = UpdateGame
           $6d47 = UpdateGame.end
  SECTION: $6d48-$6fd3 ($028c bytes) ["bomb"]
           $6d48 = InitializeBomb
           $6d51 = InitializeBomb.loop_u1
           $6d5c = SetStruct
           $6d7d = SpawnBomb
           $6d8f = SpawnBomb.availableSpace
           $6d98 = SpawnBomb.availableOAMSpace
           $6dae = SpawnBomb.balloonLeft
           $6dc7 = SpawnBomb.balloonRight
           $6dd8 = SpawnBomb.bombSpace
           $6de3 = SpawnBomb.setStruct
           $6de8 = SpawnBomb.end
           $6ded = Clear
           $6e09 = Move
           $6e11 = Move.balloonLeft
           $6e26 = Move.balloonRight
           $6e32 = Move.bombSpace
           $6e3d = DeathOfBomb
           $6e47 = CollisionBomb
           $6e62 = ExplosionAnimation
           $6e73 = ExplosionAnimation.canSwitchFrames
           $6e8b = ExplosionAnimation.frame0
           $6eae = ExplosionAnimation.frame1
           $6eee = ExplosionAnimation.frame2
           $6f17 = ExplosionAnimation.frame3
           $6f40 = ExplosionAnimation.clear
           $6f44 = ExplosionAnimation.endFrame
           $6f4b = ExplosionAnimation.end
           $6f4c = BombUpdate
           $6f53 = BombUpdate.loop
           $6f8c = BombUpdate.isAlive
           $6fa9 = BombUpdate.offScreen
           $6fae = BombUpdate.popped
           $6fb8 = BombUpdate.checkLoop
  SECTION: $6fd4-$71c6 ($01f3 bytes) ["point balloon"]
           $6fd4 = InitializePointBalloon
           $6fdd = InitializePointBalloon.loop_u1
           $6fe8 = SetStruct
           $7009 = SpawnPointBalloon
           $701b = SpawnPointBalloon.availableSpace
           $7024 = SpawnPointBalloon.availableOAMSpace
           $703a = SpawnPointBalloon.balloonLeft
           $7052 = SpawnPointBalloon.balloonRight
           $7062 = SpawnPointBalloon.setStruct
           $7067 = SpawnPointBalloon.end
           $706c = PopBalloonAnimation
           $707d = PopBalloonAnimation.canSwitchFrames
           $7089 = PopBalloonAnimation.frame0
           $70ab = PopBalloonAnimation.frame1
           $70cd = PopBalloonAnimation.clear
           $70d1 = PopBalloonAnimation.endFrame
           $70d6 = Clear
           $70ee = Move
           $70f5 = Move.balloonLeft
           $710a = Move.balloonRight
           $7115 = DeathOfPointBalloon
           $7127 = CollisionPointBalloon
           $713f = PointBalloonUpdate
           $7146 = PointBalloonUpdate.loop
           $717f = PointBalloonUpdate.isAlive
           $719c = PointBalloonUpdate.offScreen
           $71a1 = PointBalloonUpdate.popped
           $71ab = PointBalloonUpdate.checkLoop
           $71b9 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $71c7-$7319 ($0153 bytes) ["porcupine"]
           $71c7 = InitializePorcupine
           $71d0 = InitializePorcupine.loop_u1
           $71db = GetStruct
           $71f3 = SetStruct
           $720a = SpawnPorcupine
           $721d = SpawnPorcupine.availableSpace
           $7227 = SpawnPorcupine.availableOAMSpace
           $723d = SpawnPorcupine.topLeft
           $7255 = SpawnPorcupine.topMiddle
           $7265 = SpawnPorcupine.topMiddle2
           $7275 = SpawnPorcupine.topRight
           $7285 = SpawnPorcupine.bottomLeft
           $7295 = SpawnPorcupine.bottomMiddle
           $72a7 = SpawnPorcupine.bottomMiddle2
           $72b9 = SpawnPorcupine.bottomRight
           $72cb = SpawnPorcupine.setStruct
           $72d0 = SpawnPorcupine.end
           $72d5 = PorcupineUpdate
           $72dc = PorcupineUpdate.loop
           $72f8 = PorcupineUpdate.offScreen
           $72f8 = PorcupineUpdate.isAlive
           $72fa = PorcupineUpdate.checkLoop
           $72fa = PorcupineUpdate.isDead
           $7315 = PorcupineUpdate.end
  SECTION: $731a-$7416 ($00fd bytes) ["menu"]
           $731a = InitializeMenu
           $7326 = SpawnMenuCursor
           $732f = SpawnMenuCursor.availableSpace
           $7349 = SpawnMenuCursor.end
           $734a = BlinkMenuCursor
           $7352 = BlinkMenuCursor.blink
           $7362 = BlinkMenuCursor.show
           $7366 = BlinkMenuCursor.empty
           $736a = MoveCursor
           $736b = SelectMode
           $7372 = SelectMode.classicMode
           $737b = SelectMode.storyMode
           $737c = MenuInput
           $7386 = MenuInput.moveSelected
           $738f = MenuInput.selectMode
           $7398 = MenuInput.end
           $7399 = UpdateMenuOpening
           $73b5 = UpdateMenuOpening.startSound
           $73ba = UpdateMenuOpening.scrollUpTitle
           $73c6 = UpdateMenuOpening.endSound
           $73cb = UpdateMenuOpening.scrollDownTitle
           $73d7 = UpdateMenuOpening.scrollUpTitle2
           $73e3 = UpdateMenuOpening.fadeOut
           $73eb = UpdateMenuOpening.next
           $73ef = UpdateMenuOpening.endFrame
           $73f6 = UpdateMenuOpening.end
           $73f7 = UpdateMenu
           $73f7 = UpdateMenu.fadeIn
           $73fd = UpdateMenu.hasFadedIn
           $740e = UpdateMenu.fadeOut
  SECTION: $7417-$74d0 ($00ba bytes) ["sound"]
           $7417 = AUDIO_OFF
           $741b = AUDIO_ON
           $7420 = PopSound
           $7433 = ExplosionSound
           $7440 = WaveSound
           $744d = FallingSound
           $7462 = RisingSound
           $7477 = StopSweepSound
           $747c = CollectSound
           $7491 = WrongAnswerSound
           $74a8 = PercussionSound
           $74b5 = BassSound
           $74c6 = ClearSound
  SECTION: $74d1-$7579 ($00a9 bytes) ["palettes"]
           $74d1 = SetupPalettes
           $74e2 = SetupParkPalettes
           $74f1 = FadeOutPalettes
           $74f1 = FadeOutPalettes.fadeOut
           $750e = FadeOutPalettes.fade1
           $7512 = FadeOutPalettes.fade2
           $7516 = FadeOutPalettes.fade3
           $751a = FadeOutPalettes.fade4
           $751c = FadeOutPalettes.fadePalettes
           $752b = FadeOutPalettes.end
           $752d = FadeInPalettes
           $7534 = FadeInPalettes.hasFadedIn
           $7537 = FadeInPalettes.fadeIn
           $7553 = FadeInPalettes.fade1
           $7557 = FadeInPalettes.fade2
           $755b = FadeInPalettes.fade3
           $755f = FadeInPalettes.fade4
           $7561 = FadeInPalettes.fadePalettes
           $7570 = FadeInPalettes.end
           $7572 = ResetFading
  SECTION: $757a-$7615 ($009c bytes) ["memory"]
           $757a = MEMCPY.memcpy_loop
           $757a = MEMCPY
           $757e = MEMCPY.memcpy_check_limit
           $7584 = MEMCPY_WITH_OFFSET
           $7585 = MEMCPY_WITH_OFFSET.memcpy_loop
           $7590 = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $7597 = ClearOAM
           $759e = ClearOAM.loop_u1
           $75a7 = ClearRAM
           $75ae = ClearRAM.loop_u2
           $75b7 = RequestOAMSpace
           $75c0 = RequestOAMSpace.loop
           $75d7 = RequestOAMSpace.availableSpace
           $75dc = RequestOAMSpace.sufficientSpace
           $75ec = RequestOAMSpace.isNotZero4
           $75ed = RequestOAMSpace.isNotZero3
           $75ee = RequestOAMSpace.isNotZero2
           $75ef = RequestOAMSpace.isNotZero1
           $75f1 = RequestOAMSpace.notEnoughSprites
           $75f9 = RequestOAMSpace.end
           $75fc = RequestRAMSpace
           $75fc = RequestRAMSpace.loop
           $7601 = RequestRAMSpace.availableSpace
           $7605 = RequestRAMSpace.checkLoop
           $7614 = RequestRAMSpace.noFreeSpace
           $7615 = RequestRAMSpace.end
  SECTION: $7616-$765e ($0049 bytes) ["math"]
           $7616 = MODULO
           $7618 = MODULO.loop
           $761d = RANDOM
           $7626 = DIVISION
           $762c = DIVISION.loop
           $7631 = DIVISION.end
           $7634 = ToBCD
           $764b = ToBCD.end
           $764e = MULTIPLY
           $7651 = MULTIPLY.loop
           $765c = MULTIPLY.end
  SECTION: $765f-$7690 ($0032 bytes) ["lcd"]
           $765f = LCD_OFF
           $7666 = LCD_ON
           $766d = LCD_ON_NO_WINDOW
           $7674 = WaitVBlank
           $767b = WaitVBlank.loop
           $7686 = SetupWindow
  SECTION: $7691-$76b5 ($0025 bytes) ["score"]
           $7691 = InitializeScore
           $7699 = AddPoints
           $76a9 = AddPoints.carry
           $76b3 = AddPoints.end
  SECTION: $76b6-$76d6 ($0021 bytes) ["general initialization"]
           $76b6 = InitializeGameVars
  SECTION: $76d7-$76de ($0008 bytes) ["timer"]
           $76d7 = UpdateGlobalTimer
    SLACK: $0921 bytes

WRAM0 bank #0:
  SECTION: $c000-$c00b ($000c bytes) ["general RAM vars"]
           $c000 = wFadeInFrame
           $c001 = wFadeOutFrame
           $c002 = wOAMGeneral1
           $c003 = wOAMGeneral2
           $c004 = wParallaxClose
           $c005 = wParallaxFar
           $c006 = wUpdateTilemapAddress
           $c008 = wUpdateTilemapOffset
           $c009 = wUpdateTilemapIndex
           $c00a = wHasUpdatedNextTilemapAddress
           $c00b = wLastUpdatedSCX
  SECTION: $c00c-$c051 ($0046 bytes) ["Playback variables"]
           $c00c = _start_vars
           $c00c = order_cnt
           $c00d = order1
           $c00d = _start_song_descriptor_pointers
           $c00f = order2
           $c011 = order3
           $c013 = order4
           $c015 = duty_instruments
           $c017 = wave_instruments
           $c019 = noise_instruments
           $c01b = routines
           $c01d = waves
           $c01f = mute_channels
           $c01f = _end_song_descriptor_pointers
           $c020 = pattern1
           $c022 = pattern2
           $c024 = pattern3
           $c026 = pattern4
           $c028 = ticks_per_row
           $c029 = current_order
           $c02a = next_order
           $c02b = row_break
           $c02c = temp_note_value
           $c02e = row
           $c02f = tick
           $c030 = counter
           $c031 = current_wave
           $c031 = _hUGE_current_wave
           $c032 = channel_period1
           $c032 = channels
           $c032 = channel1
           $c034 = toneporta_target1
           $c036 = channel_note1
           $c037 = vibrato_tremolo_phase1
           $c038 = envelope1
           $c039 = highmask1
           $c03a = channel_period2
           $c03a = channel2
           $c03c = toneporta_target2
           $c03e = channel_note2
           $c03f = vibrato_tremolo_phase2
           $c040 = envelope2
           $c041 = highmask2
           $c042 = channel_period3
           $c042 = channel3
           $c044 = toneporta_target3
           $c046 = channel_note3
           $c047 = vibrato_tremolo_phase3
           $c048 = envelope3
           $c049 = highmask3
           $c04a = channel_period4
           $c04a = channel4
           $c04c = toneporta_target4
           $c04e = channel_note4
           $c04f = vibrato_tremolo_phase4
           $c050 = envelope4
           $c051 = highmask4
           $c052 = _end_vars
  SECTION: $c052-$c071 ($0020 bytes) ["point balloon vars"]
           $c052 = pointBalloon
  SECTION: $c072-$c08f ($001e bytes) ["balloon cactus vars"]
           $c072 = balloonCactus
  SECTION: $c090-$c0a1 ($0012 bytes) ["player vars"]
           $c090 = wPlayerY
           $c091 = wPlayerX
           $c092 = wPlayerY2
           $c093 = wPlayerX2
           $c094 = wPlayerAlive
           $c095 = wPlayerPopping
           $c096 = wPlayerPoppingFrame
           $c097 = wPlayerPoppingTimer
           $c098 = wPlayerFalling
           $c099 = wPlayerFallSpeed
           $c09a = wPlayerFallingTimer
           $c09b = wPlayerDelayFallingTimer
           $c09c = wPlayerRespawnTimer
           $c09d = wPlayerSpeed
           $c09e = wPlayerLives
           $c09f = wPlayerInvincible
           $c0a0 = wPlayerBoost
           $c0a1 = wPlayerAttack
  SECTION: $c0a2-$c0b1 ($0010 bytes) ["bird vars"]
           $c0a2 = bird
  SECTION: $c0b2-$c0c1 ($0010 bytes) ["enemy struct vars"]
           $c0b2 = wEnemyOffset
           $c0b3 = wEnemyY
           $c0b4 = wEnemyX
           $c0b5 = wEnemyActive
           $c0b6 = wEnemyOAM
           $c0b7 = wEnemyAlive
           $c0b8 = wEnemyPopping
           $c0b9 = wEnemyPoppingFrame
           $c0ba = wEnemyPoppingTimer
           $c0bb = wEnemyRightside
           $c0bc = wEnemyY2
           $c0bd = wEnemyX2
           $c0be = wEnemyFalling
           $c0bf = wEnemyFallingSpeed
           $c0c0 = wEnemyFallingTimer
           $c0c1 = wEnemyDelayFallingTimer
  SECTION: $c0c2-$c0d1 ($0010 bytes) ["bomb vars"]
           $c0c2 = bomb
  SECTION: $c0d2-$c0d6 ($0005 bytes) ["porcupine vars"]
           $c0d2 = porcupine
  SECTION: $c0d7-$c0d9 ($0003 bytes) ["controller vars"]
           $c0d7 = wControllerDown
           $c0d8 = wControllerPressed
           $c0d9 = wPaused
  SECTION: $c0da-$c0dc ($0003 bytes) ["score vars"]
           $c0da = wScore
  SECTION: $c0dd-$c0df ($0003 bytes) ["game vars"]
           $c0dd = wHandWavingFrame
           $c0de = wCountdownFrame
           $c0df = wClassicModeStage
  SECTION: $c0e0-$c0e2 ($0003 bytes) ["interrupts vars"]
           $c0e0 = wVBlankFlag
           $c0e1 = wLCDInterrupt
  SECTION: $c0e3-$c0e5 ($0003 bytes) ["level vars"]
           $c0e3 = wWorld
           $c0e4 = wLevel
           $c0e5 = wWave
  SECTION: $c0e6-$c0e7 ($0002 bytes) ["menu vars"]
           $c0e6 = wMenuFrame
           $c0e7 = wSelectedMode
  SECTION: $c0e8-$c0e8 ($0001 byte) ["timer vars"]
           $c0e8 = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e77 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1b72 bytes in 1 bank
    ROMX: $36df bytes in 1 bank
    WRAM0: $0189 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
