ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c7 ($007d bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = OffScreenXEnemies
           $009d = OffScreenXEnemies.end
           $009f = OffScreenYEnemies
           $00b0 = OffScreenYEnemies.end
           $00b2 = OffScreenX
           $00ba = OffScreenX.end
           $00bc = OffScreenY
           $00c6 = OffScreenY.end
  SECTION: $00c8-$00eb ($0024 bytes) ["scroll"]
           $00c8 = HorizontalScroll
           $00d5 = HorizontalScroll.end
           $00d7 = VerticalScroll
           $00e4 = VerticalScroll.end
           $00e6 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a4f ($0900 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $0390 = OpeningCutsceneMapEnd
           $0390 = Level1Map
           $0590 = Level1MapEnd
           $0590 = Level2Map
           $07d0 = MenuMap
           $07d0 = Level2MapEnd
           $0a10 = WindowMap
           $0a10 = MenuMapEnd
           $0a50 = WindowMapEnd
  SECTION: $0a50-$11f0 ($07a1 bytes) ["Sound Driver"]
           $0a50 = _hUGE_init_banked
           $0a54 = _hUGE_init
           $0a56 = continue_init
           $0a5f = _hUGE_mute_channel_banked
           $0a63 = _hUGE_mute_channel
           $0a65 = continue_mute
           $0a70 = hUGE_mute_channel
           $0a76 = hUGE_mute_channel.enable_loop
           $0a7d = hUGE_mute_channel.enable_cut
           $0a8a = _hUGE_set_position_banked
           $0a8e = _hUGE_set_position
           $0a90 = continue_set_position
           $0a97 = hUGE_init
           $0a9e = hUGE_init.fill_loop
           $0ac2 = hUGE_init.copy_song_descriptor_loop
           $0acc = _refresh_patterns
           $0ae6 = _refresh_patterns.load_pattern
           $0af6 = _load_note_data
           $0b08 = _lookup_note
           $0b12 = _convert_note
           $0b20 = _convert_ch4_note
           $0b37 = _update_channel
           $0b41 = _update_channel1
           $0b4f = _update_channel2
           $0b5d = _update_channel3
           $0b6b = _update_channel4
           $0b7b = _playnote1
           $0b96 = _playnote2
           $0bb1 = _playnote3
           $0bd2 = _playnote4
           $0be6 = _doeffect
           $0bfb = _doeffect.jump
           $0c2b = setup_channel_pointer
           $0c39 = fx_set_master_volume
           $0c3e = fx_call_routine
           $0c60 = fx_call_routine.call_hl
           $0c61 = fx_set_pan
           $0c66 = fx_set_duty
           $0c6b = fx_set_duty.chan2
           $0c75 = fx_set_duty.chan1
           $0c7f = fx_vol_slide
           $0c86 = fx_vol_slide.loop
           $0c8b = fx_vol_slide.cont
           $0cbd = fx_vol_slide.cont1
           $0cc4 = fx_vol_slide.cont2
           $0cd8 = _envelope_registers
           $0ce0 = fx_note_delay
           $0cf9 = fx_note_delay.play_note
           $0d17 = _play_note_routines
           $0d23 = fx_set_speed
           $0d29 = hUGE_set_position
           $0d29 = fx_pos_jump
           $0d33 = fx_pattern_break
           $0d38 = fx_note_cut
           $0d40 = fx_note_cut.loop
           $0d45 = fx_note_cut.cont
           $0d4a = note_cut
           $0d61 = fx_set_volume
           $0d62 = set_channel_volume
           $0d6d = set_chn_3_vol
           $0d7f = set_chn_3_vol.three
           $0d83 = set_chn_3_vol.two
           $0d87 = set_chn_3_vol.one
           $0d8b = set_chn_3_vol.zero
           $0d8c = set_chn_3_vol.done
           $0d8f = set_chn_2_vol
           $0d9f = set_chn_1_vol
           $0daf = set_chn_4_vol
           $0dbb = fx_vibrato
           $0dce = fx_vibrato.restore
           $0dd3 = fx_vibrato.go_up
           $0dde = fx_vibrato.finish_vibrato
           $0de4 = fx_arpeggio
           $0df0 = fx_arpeggio.greater_than_two
           $0df2 = fx_arpeggio.test_greater_than_two
           $0e01 = fx_arpeggio.arp_options
           $0e07 = fx_arpeggio.reset_arp
           $0e0a = fx_arpeggio.set_arp2
           $0e0f = fx_arpeggio.set_arp1
           $0e10 = fx_arpeggio.finish_arp
           $0e13 = fx_arpeggio.finish_skip_add
           $0e1c = fx_porta_up
           $0e2b = fx_porta_up.finish
           $0e32 = fx_porta_down
           $0e44 = fx_toneporta
           $0e56 = fx_toneporta.return_skip
           $0e60 = fx_toneporta.do_toneporta
           $0e75 = fx_toneporta.high_byte_same
           $0e7b = fx_toneporta.add
           $0e8d = fx_toneporta.subtract
           $0ea3 = fx_toneporta.set_exact
           $0ea5 = fx_toneporta.done
           $0eb8 = _setup_instrument_pointer_ch4
           $0ec3 = _setup_instrument_pointer
           $0eca = _setup_instrument_pointer.finish
           $0ed3 = _hUGE_dosound_banked
           $0ed3 = _hUGE_dosound
           $0f12 = _hUGE_dosound.write_mask1
           $0f15 = _hUGE_dosound.do_setvol1
           $0f28 = _hUGE_dosound.after_note1
           $0f5d = _hUGE_dosound.write_mask2
           $0f60 = _hUGE_dosound.do_setvol2
           $0f73 = _hUGE_dosound.after_note2
           $0ffa = _hUGE_dosound.no_wave_copy
           $0ffb = _hUGE_dosound.write_mask3
           $0ffe = _hUGE_dosound.do_setvol3
           $1009 = _hUGE_dosound.after_note3
           $105a = _hUGE_dosound.write_mask4
           $105d = _hUGE_dosound.do_setvol4
           $1068 = _hUGE_dosound.after_note4
           $106b = _hUGE_dosound.process_effects
           $1087 = _hUGE_dosound.after_effect1
           $10a3 = _hUGE_dosound.after_effect2
           $10bf = _hUGE_dosound.after_effect3
           $110a = _hUGE_dosound.done_macro
           $1113 = process_tick
           $1113 = _hUGE_dosound.after_effect4
           $1125 = _newrow
           $113d = _newrow.no_break
           $1148 = _neworder
           $1155 = _update_current_order
           $115c = _noreset
           $1161 = note_table
  SECTION: $11f1-$1672 ($0482 bytes) ["player"]
           $11f1 = InitializePlayer
           $1244 = UpdateBalloonPosition
           $1244 = UpdateBalloonPosition.balloonLeft
           $1251 = UpdateBalloonPosition.balloonRight
           $125c = UpdateCactusPosition
           $125c = UpdateCactusPosition.cactusLeft
           $1269 = UpdateCactusPosition.cactusRight
           $1274 = SpawnPlayer
           $1274 = SpawnPlayer.cactusLeft
           $1284 = SpawnPlayer.cactusRight
           $1294 = SpawnPlayer.balloonLeft
           $12a4 = SpawnPlayer.balloonRight
           $12b5 = ClearPlayerCactus
           $12c2 = ClearPlayerBalloon
           $12cf = RespawnPlayer
           $12e2 = MoveRight
           $12f2 = MoveRight.canCactusDriftLeft
           $1304 = MoveRight.cactusDriftLeft
           $1306 = MoveLeft
           $131a = MoveLeft.canCactusDriftRight
           $132b = MoveLeft.cactusDriftRight
           $132d = MoveDown
           $133d = MoveDown.canCactusDriftUp
           $134f = MoveDown.cactusDriftUp
           $1351 = ChargeBoost
           $1357 = ChargeBoost.isCharging
           $135e = ChargeBoost.resetBoost
           $1364 = ChargeAttack
           $136a = ChargeAttack.isCharging
           $136f = SpawnBullet
           $1389 = SpawnBullet.spawnFromLeft
           $1391 = SpawnBullet.leftOAM
           $139f = SpawnBullet.spawnFromRight
           $13a7 = SpawnBullet.rightOAM
           $13b5 = ClearBullet
           $13c1 = BulletUpdate
           $13c7 = BulletUpdate.isAlive
           $13d2 = BulletUpdate.offScreen
           $13d6 = BulletUpdate.onScreen
           $13dc = BulletUpdate.move
           $13e6 = BulletUpdate.moveLeft
           $13ea = BulletUpdate.moveRight
           $13ec = BulletUpdate.endMove
           $13f4 = PlayerControls
           $13f4 = PlayerControls.right
           $1407 = PlayerControls.moveRight
           $140f = PlayerControls.endRight
           $140f = PlayerControls.left
           $1422 = PlayerControls.moveLeft
           $1429 = PlayerControls.endLeft
           $1429 = PlayerControls.up
           $143c = PlayerControls.moveUp
           $1450 = PlayerControls.endUp
           $1450 = PlayerControls.down
           $1466 = PlayerControls.endDown
           $1466 = PlayerControls.canCactusDriftCenterX
           $1484 = PlayerControls.driftCenterXRight
           $1487 = PlayerControls.driftCenterXLeft
           $1488 = PlayerControls.endDriftToCenterX
           $1488 = PlayerControls.canCactusDriftCenterY
           $14a9 = PlayerControls.driftCenterYUp
           $14ac = PlayerControls.driftCenterYDown
           $14ad = PlayerControls.endDriftToCenterY
           $14ad = PlayerControls.start
           $14b8 = PlayerControls.endStart
           $14b8 = PlayerControls.AButton
           $14c5 = PlayerControls.activateAttack
           $14cd = PlayerControls.endA
           $14cd = PlayerControls.BButton
           $14da = PlayerControls.activateBoost
           $14e4 = PlayerControls.endB
           $14e5 = MovePlayer
           $14fa = MovePlayerAutoFlyUp
           $1513 = FallCactusDown
           $1528 = FallCactusDown.skipAcceleration
           $1531 = PopBalloonAnimation
           $1542 = PopBalloonAnimation.canSwitchFrames
           $154e = PopBalloonAnimation.frame0
           $1560 = PopBalloonAnimation.frame1
           $1572 = PopBalloonAnimation.clear
           $1582 = PopBalloonAnimation.endFrame
           $158a = CactusFalling
           $15a4 = CactusFalling.offScreen
           $15ac = CactusFalling.end
           $15ad = NoMoreLives
           $15b7 = PlayerUpdate
           $15be = PlayerUpdate.isAlive
           $15da = PlayerUpdate.popped
           $15e5 = PlayerUpdate.popping
           $15ed = PlayerUpdate.falling
           $15f6 = PlayerUpdate.respawning
           $15fd = PlayerUpdate.noMoreLives
           $1601 = PlayerUpdate.respawn
           $1605 = DeathOfPlayer
           $1629 = InvincibleBlink
           $162f = InvincibleBlink.isStillInvincible
           $163e = InvincibleBlink.blinkNormal
           $1645 = InvincibleBlink.blinkFast
           $1649 = InvincibleBlink.blinkEnd
           $165e = InvincibleBlink.defaultPalette
  SECTION: $1673-$1919 ($02a7 bytes) ["graphics"]
           $1673 = AddBGTiles8800Method
           $167d = AddBGTiles8800Method.tilesFitBlock
           $1682 = AddBGTiles8800Method.tilesExceedBlock
           $169c = AddBGTiles8800Method.end
           $169f = LoadPlayerTiles
           $16ac = LoadWindow
           $16ac = LoadWindow.loadTiles
           $16b8 = LoadWindow.loadMap
           $16c7 = LoadEnemyTiles
           $16ec = LoadParkGraphics
           $1717 = LoadGameGraphics
           $1717 = LoadGameGraphics.level1
           $1733 = LoadGameGraphics.level2
           $1734 = LoadGameGraphics.level3
           $1735 = LoadMenuOpeningGraphics
           $174b = LoadMenuGraphics
           $1764 = RefreshScore
           $179e = RefreshLives
           $17a7 = RefreshBoostBar
           $17b1 = RefreshBoostBar.isCharging
           $17bd = RefreshBoostBar.isEmpty
           $17c3 = RefreshBoostBar.is25Percent
           $17ca = RefreshBoostBar.is50Percent
           $17d1 = RefreshBoostBar.is75Percent
           $17d8 = RefreshBoostBar.isReady
           $17de = RefreshAttackBar
           $17e8 = RefreshAttackBar.isCharging
           $17f4 = RefreshAttackBar.isEmpty
           $17fa = RefreshAttackBar.is25Percent
           $1801 = RefreshAttackBar.is50Percent
           $1808 = RefreshAttackBar.is75Percent
           $180f = RefreshAttackBar.isReady
           $1815 = RefreshWindow
           $1828 = RefreshWindow.end
           $1829 = ClearAllTiles
           $1832 = ClearAllTiles.loop_u4
           $1841 = ClearAllTiles.loop_u5
           $1850 = ClearAllTiles.loop_u6
           $185b = ClearMap
           $1864 = ClearMap.loop_u7
           $186f = ReplaceTilemapHorizontal
           $1898 = ReplaceTilemapHorizontal.handleZero
           $189a = ReplaceTilemapHorizontal.handleZeroEnd
           $18a6 = ReplaceTilemapHorizontal.loop
           $18c4 = ReplaceTilemapHorizontal.end
           $18c9 = MoveToNextTilemap
           $18dc = MoveToNextTilemap.canUpdateTilemap
           $18ef = MoveToNextTilemap.clouds1
           $1904 = MoveToNextTilemap.clouds2
           $1917 = MoveToNextTilemap.end
  SECTION: $191a-$1a6c ($0153 bytes) ["level data"]
           $191a = Level1
           $1977 = Level2
           $198e = Level3
           $1995 = InitializeNewLevel
           $19b0 = InitializeNewLevel.level1
           $19b5 = InitializeNewLevel.level2
           $19ba = InitializeNewLevel.level3
           $19bf = InitializeNewLevel.level4
           $19c0 = InitializeNewLevel.setLevelDataAddress
           $19c8 = InitializeLevelVars
           $19d1 = LevelDataHandler
           $19f4 = LevelDataHandler.pointBalloon
           $19f8 = LevelDataHandler.balloonCactus
           $19fc = LevelDataHandler.bird
           $1a00 = LevelDataHandler.bomb
           $1a04 = LevelDataHandler.porcupine
           $1a08 = LevelDataManager
           $1a35 = LevelDataManager.spawn
           $1a42 = LevelDataManager.wait
           $1a4f = LevelDataManager.waitEnd
           $1a5c = LevelDataManager.end
  SECTION: $1a6d-$1b66 ($00fa bytes) ["rom"]
           $1a6d = Start
           $1aa7 = MenuLoopOpening
           $1aa7 = StartMenu
           $1abf = MenuLoop
           $1abf = StartGame
           $1af8 = ParkLoop
           $1b07 = SetupNextLevel
           $1b49 = GameCountdownLoop
           $1b58 = GameLoop
  SECTION: $1b67-$1c4d ($00e7 bytes) ["interrupts"]
           $1b67 = InitializeInterrupts
           $1b7d = VBlankInterrupt
           $1b8d = LCDInterrupt
           $1b97 = LCDInterruptEnd
           $1b9b = MenuLCDInterrupt
           $1bab = MenuLCDInterrupt.reset
           $1bb4 = MenuLCDInterrupt.far
           $1bc2 = MenuLCDInterrupt.close
           $1bce = MenuLCDInterrupt.end
           $1bd1 = SetMenuInterrupts
           $1bdf = ParkLCDInterrupt
           $1beb = ParkLCDInterrupt.clouds
           $1bf9 = ParkLCDInterrupt.ground
           $1bfe = ParkLCDInterrupt.end
           $1c01 = SetParkInterrupts
           $1c05 = GameLCDInterrupt
           $1c15 = GameLCDInterrupt.reset
           $1c23 = GameLCDInterrupt.far
           $1c31 = GameLCDInterrupt.close
           $1c3d = GameLCDInterrupt.end
           $1c40 = SetGameInterrupts
  SECTION: $1c4e-$1cc5 ($0078 bytes) ["controller"]
           $1c4e = InitializeController
           $1c53 = ReadInput
           $1c83 = JOY_RIGHT
           $1c8b = JOY_LEFT
           $1c93 = JOY_UP
           $1c9b = JOY_DOWN
           $1ca3 = JOY_A
           $1cab = JOY_B
           $1cb3 = JOY_SELECT
           $1cbb = JOY_START
           $1cc3 = JOY_FALSE
  SECTION: $1cc6-$1ce3 ($001e bytes) ["OAM DMA routine"]
           $1cc6 = CopyDMARoutine
           $1ccd = CopyDMARoutine.copy
           $1cd4 = DMARoutine
           $1cd8 = DMARoutine.wait
           $1cdc = DMARoutineEnd
           $1cdc = OAMDMA
    SLACK: $2347 bytes

ROMX bank #1:
  SECTION: $4000-$599f ($19a0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = OpeningCutsceneTiles
           $4720 = OpeningCutsceneTilesEnd
           $4720 = OpeningCutsceneSpriteTiles
           $4760 = Level1Tiles
           $4760 = OpeningCutsceneSpriteTilesEnd
           $4c40 = Level2Tiles
           $4c40 = Level1TilesEnd
           $4d10 = Level2TilesEnd
           $4d10 = CountdownTiles
           $4e10 = CountdownTilesEnd
           $4e10 = WindowTiles
           $5000 = WindowTilesEnd
           $5000 = MenuTiles
           $5020 = MenuTilesEnd
           $5020 = MenuTitleTiles
           $59a0 = MenuTitleTilesEnd
  SECTION: $59a0-$64dd ($0b3e bytes) ["Song Data2"]
           $59a0 = angryTheme
           $59b5 = order_cnt
           $59b6 = order1
           $59c0 = order2
           $59ca = order3
           $59d4 = order4
           $59de = P0
           $5a9e = P1
           $5b5e = P2
           $5c1e = P3
           $5cde = P4
           $5d9e = P5
           $5e5e = P6
           $5f1e = P7
           $5fde = P8
           $609e = P9
           $615e = P10
           $621e = P11
           $62de = duty_instruments
           $62de = itSquareinst1
           $62e2 = itSquareinst2
           $62e6 = itSquareinst3
           $62ea = itSquareinst4
           $62ee = itSquareinst5
           $62f2 = itSquareinst6
           $62f6 = itSquareinst7
           $62fa = itSquareinst8
           $62fe = itSquareinst9
           $6302 = itSquareinst10
           $6306 = itSquareinst11
           $630a = itSquareinst12
           $630e = itSquareinst13
           $6312 = itSquareinst14
           $6316 = itSquareinst15
           $631a = wave_instruments
           $631a = itWaveinst1
           $631e = itWaveinst2
           $6322 = itWaveinst3
           $6326 = itWaveinst4
           $632a = itWaveinst5
           $632e = itWaveinst6
           $6332 = itWaveinst7
           $6336 = itWaveinst8
           $633a = itWaveinst9
           $633e = itWaveinst10
           $6342 = itWaveinst11
           $6346 = itWaveinst12
           $634a = itWaveinst13
           $634e = itWaveinst14
           $6352 = itWaveinst15
           $6356 = noise_instruments
           $6356 = itNoiseinst1
           $635e = itNoiseinst2
           $6366 = itNoiseinst3
           $636e = itNoiseinst4
           $6376 = itNoiseinst5
           $637e = itNoiseinst6
           $6386 = itNoiseinst7
           $638e = itNoiseinst8
           $6396 = itNoiseinst9
           $639e = itNoiseinst10
           $63a6 = itNoiseinst11
           $63ae = itNoiseinst12
           $63b6 = itNoiseinst13
           $63be = itNoiseinst14
           $63c6 = itNoiseinst15
           $63ce = routines
           $63ce = __end_hUGE_Routine_0
           $63ce = __hUGE_Routine_0
           $63cf = __end_hUGE_Routine_1
           $63cf = __hUGE_Routine_1
           $63d0 = __end_hUGE_Routine_2
           $63d0 = __hUGE_Routine_2
           $63d1 = __end_hUGE_Routine_3
           $63d1 = __hUGE_Routine_3
           $63d2 = __end_hUGE_Routine_4
           $63d2 = __hUGE_Routine_4
           $63d3 = __end_hUGE_Routine_5
           $63d3 = __hUGE_Routine_5
           $63d4 = __end_hUGE_Routine_6
           $63d4 = __hUGE_Routine_6
           $63d5 = __end_hUGE_Routine_7
           $63d5 = __hUGE_Routine_7
           $63d6 = __hUGE_Routine_8
           $63d6 = __end_hUGE_Routine_8
           $63d7 = __hUGE_Routine_9
           $63d7 = __end_hUGE_Routine_9
           $63d8 = __hUGE_Routine_10
           $63d8 = __end_hUGE_Routine_10
           $63d9 = __hUGE_Routine_11
           $63d9 = __end_hUGE_Routine_11
           $63da = __hUGE_Routine_12
           $63da = __end_hUGE_Routine_12
           $63db = __hUGE_Routine_13
           $63db = __end_hUGE_Routine_13
           $63dc = __end_hUGE_Routine_14
           $63dc = __hUGE_Routine_14
           $63dd = __end_hUGE_Routine_15
           $63dd = __hUGE_Routine_15
           $63de = waves
           $63de = wave0
           $63ee = wave1
           $63fe = wave2
           $640e = wave3
           $641e = wave4
           $642e = wave5
           $643e = wave6
           $644e = wave7
           $645e = wave8
           $646e = wave9
           $647e = wave10
           $648e = wave11
           $649e = wave12
           $64ae = wave13
           $64be = wave14
           $64ce = wave15
  SECTION: $64de-$69fb ($051e bytes) ["Song Data"]
           $64de = menuTheme
           $64f3 = order_cnt
           $64f4 = order1
           $64f6 = order2
           $64f8 = order3
           $64fa = order4
           $64fc = P1
           $65bc = P2
           $667c = P3
           $673c = P6
           $67fc = duty_instruments
           $67fc = itSquareinst1
           $6800 = itSquareinst2
           $6804 = itSquareinst3
           $6808 = itSquareinst4
           $680c = itSquareinst5
           $6810 = itSquareinst6
           $6814 = itSquareinst7
           $6818 = itSquareinst8
           $681c = itSquareinst9
           $6820 = itSquareinst10
           $6824 = itSquareinst11
           $6828 = itSquareinst12
           $682c = itSquareinst13
           $6830 = itSquareinst14
           $6834 = itSquareinst15
           $6838 = wave_instruments
           $6838 = itWaveinst1
           $683c = itWaveinst2
           $6840 = itWaveinst3
           $6844 = itWaveinst4
           $6848 = itWaveinst5
           $684c = itWaveinst6
           $6850 = itWaveinst7
           $6854 = itWaveinst8
           $6858 = itWaveinst9
           $685c = itWaveinst10
           $6860 = itWaveinst11
           $6864 = itWaveinst12
           $6868 = itWaveinst13
           $686c = itWaveinst14
           $6870 = itWaveinst15
           $6874 = noise_instruments
           $6874 = itNoiseinst1
           $687c = itNoiseinst2
           $6884 = itNoiseinst3
           $688c = itNoiseinst4
           $6894 = itNoiseinst5
           $689c = itNoiseinst6
           $68a4 = itNoiseinst7
           $68ac = itNoiseinst8
           $68b4 = itNoiseinst9
           $68bc = itNoiseinst10
           $68c4 = itNoiseinst11
           $68cc = itNoiseinst12
           $68d4 = itNoiseinst13
           $68dc = itNoiseinst14
           $68e4 = itNoiseinst15
           $68ec = routines
           $68ec = __end_hUGE_Routine_0
           $68ec = __hUGE_Routine_0
           $68ed = __end_hUGE_Routine_1
           $68ed = __hUGE_Routine_1
           $68ee = __end_hUGE_Routine_2
           $68ee = __hUGE_Routine_2
           $68ef = __end_hUGE_Routine_3
           $68ef = __hUGE_Routine_3
           $68f0 = __end_hUGE_Routine_4
           $68f0 = __hUGE_Routine_4
           $68f1 = __end_hUGE_Routine_5
           $68f1 = __hUGE_Routine_5
           $68f2 = __end_hUGE_Routine_6
           $68f2 = __hUGE_Routine_6
           $68f3 = __end_hUGE_Routine_7
           $68f3 = __hUGE_Routine_7
           $68f4 = __hUGE_Routine_8
           $68f4 = __end_hUGE_Routine_8
           $68f5 = __hUGE_Routine_9
           $68f5 = __end_hUGE_Routine_9
           $68f6 = __hUGE_Routine_10
           $68f6 = __end_hUGE_Routine_10
           $68f7 = __hUGE_Routine_11
           $68f7 = __end_hUGE_Routine_11
           $68f8 = __hUGE_Routine_12
           $68f8 = __end_hUGE_Routine_12
           $68f9 = __hUGE_Routine_13
           $68f9 = __end_hUGE_Routine_13
           $68fa = __end_hUGE_Routine_14
           $68fa = __hUGE_Routine_14
           $68fb = __end_hUGE_Routine_15
           $68fb = __hUGE_Routine_15
           $68fc = waves
           $68fc = wave0
           $690c = wave1
           $691c = wave2
           $692c = wave3
           $693c = wave4
           $694c = wave5
           $695c = wave6
           $696c = wave7
           $697c = wave8
           $698c = wave9
           $699c = wave10
           $69ac = wave11
           $69bc = wave12
           $69cc = wave13
           $69dc = wave14
           $69ec = wave15
  SECTION: $69fc-$6dfe ($0403 bytes) ["balloon cactus"]
           $69fc = InitializeBalloonCactus
           $6a05 = InitializeBalloonCactus.loop_u1
           $6a10 = SetStruct
           $6a4d = SpawnBalloonCactus
           $6a60 = SpawnBalloonCactus.availableSpace
           $6a69 = SpawnBalloonCactus.availableOAMSpace
           $6a97 = SpawnBalloonCactus.isLeftside
           $6a97 = SpawnBalloonCactus.balloonLeft
           $6ab0 = SpawnBalloonCactus.balloonRight
           $6ac0 = SpawnBalloonCactus.cactusLeft
           $6ace = SpawnBalloonCactus.cactusRight
           $6ade = SpawnBalloonCactus.setStruct
           $6ae3 = SpawnBalloonCactus.end
           $6ae8 = ClearCactus
           $6afe = ClearBalloon
           $6b14 = Clear
           $6b1e = PopBalloonAnimation
           $6b2f = PopBalloonAnimation.canSwitchFrames
           $6b3d = PopBalloonAnimation.frame0
           $6b61 = PopBalloonAnimation.frame1
           $6b85 = PopBalloonAnimation.clear
           $6ba6 = PopBalloonAnimation.endFrame
           $6bad = PopBalloonAnimation.end
           $6bae = CactusFallingCollision
           $6baf = CactusFallingCollision.checkBird
           $6bb6 = CactusFallingCollision.birdLoop
           $6bc7 = CactusFallingCollision.isAlive
           $6bf7 = CactusFallingCollision.hitBird
           $6c05 = CactusFallingCollision.checkBirdLoop
           $6c12 = CactusFallingCollision.end
           $6c14 = CactusFalling
           $6c26 = CactusFalling.falling
           $6c3f = CactusFalling.skipAcceleration
           $6c4b = CactusFalling.offScreen
           $6c4f = UpdateBalloonPosition
           $6c4f = UpdateBalloonPosition.balloonLeft
           $6c65 = UpdateBalloonPosition.balloonRight
           $6c70 = UpdateCactusPosition
           $6c70 = UpdateCactusPosition.cactusLeft
           $6c86 = UpdateCactusPosition.cactusRight
           $6c91 = Move
           $6cac = Move.isLeftside
           $6cba = Move.updatePosition
           $6cc1 = DeathOfBalloonCactus
           $6cf2 = CollisionBalloonCactus
           $6cf2 = CollisionBalloonCactus.checkHit
           $6d0d = CollisionBalloonCactus.checkHitByBullet
           $6d2d = CollisionBalloonCactus.checkHitPlayer
           $6d4d = BalloonCactusUpdate
           $6d54 = BalloonCactusUpdate.loop
           $6dab = BalloonCactusUpdate.isAlive
           $6dc8 = BalloonCactusUpdate.offScreen
           $6dcd = BalloonCactusUpdate.popped
           $6dd7 = BalloonCactusUpdate.notPopping
           $6de1 = BalloonCactusUpdate.checkLoop
           $6df0 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6dff-$717a ($037c bytes) ["bird"]
           $6dff = InitializeBird
           $6e08 = InitializeBird.loop_u1
           $6e13 = SetStruct
           $6e38 = SpawnBird
           $6e4b = SpawnBird.availableSpace
           $6e55 = SpawnBird.availableOAMSpace
           $6e72 = SpawnBird.isRightside
           $6e77 = SpawnBird.birdLeft
           $6e90 = SpawnBird.birdMiddle
           $6ea0 = SpawnBird.birdRight
           $6eb2 = SpawnBird.isLeftside
           $6eb2 = SpawnBird.leftBirdLeft
           $6ecb = SpawnBird.leftBirdMiddle
           $6edb = SpawnBird.leftBirdRight
           $6eeb = SpawnBird.setStruct
           $6ef0 = SpawnBird.end
           $6ef5 = BirdRightsideFlap
           $6efc = BirdRightsideFlap.soaring
           $6f24 = BirdRightsideFlap.flapping
           $6f55 = BirdLeftsideFlap
           $6f5c = BirdLeftsideFlap.soaring
           $6f84 = BirdLeftsideFlap.flapping
           $6fb5 = Clear
           $6fd2 = UpdateBirdPosition
           $6fd2 = UpdateBirdPosition.birdLeft
           $6fe8 = UpdateBirdPosition.birdMiddle
           $6ff4 = UpdateBirdPosition.birdRight
           $6fff = Move
           $7006 = Move.isRightside
           $7014 = Move.isLeftside
           $701e = Move.moveDown
           $702c = Move.moveEnd
           $7030 = BirdFall
           $703b = BirdFall.checkOffscreenY
           $704d = BirdFall.end
           $704f = DeathOfBird
           $7067 = DeathOfBird.facingLeft
           $7092 = DeathOfBird.facingRight
           $70bd = CollisionBird
           $70bd = CollisionBird.checkHitPlayer
           $70dd = BirdUpdate
           $70e4 = BirdUpdate.loop
           $7122 = BirdUpdate.isAlive
           $7147 = BirdUpdate.offScreen
           $714c = BirdUpdate.isDead
           $715d = BirdUpdate.checkLoop
  SECTION: $717b-$743b ($02c1 bytes) ["bomb"]
           $717b = InitializeBomb
           $7184 = InitializeBomb.loop_u1
           $718f = SetStruct
           $71b0 = SpawnBomb
           $71c2 = SpawnBomb.availableSpace
           $71cb = SpawnBomb.availableOAMSpace
           $71e1 = SpawnBomb.balloonLeft
           $71fb = SpawnBomb.balloonRight
           $720c = SpawnBomb.bombSpace
           $7217 = SpawnBomb.setStruct
           $721c = SpawnBomb.end
           $7221 = Clear
           $723e = Move
           $7246 = Move.balloonLeft
           $725c = Move.balloonRight
           $7268 = Move.bombSpace
           $7273 = DeathOfBomb
           $727d = CollisionBomb
           $727d = CollisionBomb.checkHit
           $729b = CollisionBomb.checkHitByBullet
           $72bb = CollisionBomb.end
           $72bc = ExplosionAnimation
           $72cd = ExplosionAnimation.canSwitchFrames
           $72e5 = ExplosionAnimation.frame0
           $730a = ExplosionAnimation.frame1
           $734d = ExplosionAnimation.frame2
           $7379 = ExplosionAnimation.frame3
           $73a5 = ExplosionAnimation.clear
           $73a9 = ExplosionAnimation.endFrame
           $73b0 = ExplosionAnimation.end
           $73b1 = BombUpdate
           $73b8 = BombUpdate.loop
           $73f2 = BombUpdate.isAlive
           $740f = BombUpdate.offScreen
           $7414 = BombUpdate.popped
           $741e = BombUpdate.checkLoop
  SECTION: $743c-$76b9 ($027e bytes) ["game"]
           $743c = InitializeGame
           $7444 = UpdatePark.fadeIn
           $7444 = UpdatePark
           $744a = UpdatePark.hasFadedIn
           $7463 = UpdatePark.fadeOut
           $746b = UpdatePark.skipFade
           $746e = UpdatePark.moveUp
           $7477 = UpdatePark.flyUpNormal
           $747d = UpdatePark.flyUpFast
           $7481 = TryToUnpause
           $7498 = TryToUnpause.end
           $7499 = SpawnHandWave
           $74bd = SpawnHandWave.end
           $74be = HandWaveAnimation
           $74c5 = HandWaveAnimation.frame0
           $74e1 = HandWaveAnimation.frame1
           $74fc = HandWaveAnimation.end
           $74fd = SpawnCountdown
           $7528 = SpawnCountdown.end
           $7529 = Countdown
           $7530 = Countdown.hasCountedDown
           $7533 = Countdown.countdown
           $7544 = Countdown.balloonPop
           $754c = Countdown.frames
           $7575 = Countdown.frame0
           $7597 = Countdown.frame1
           $75b9 = Countdown.frame2
           $75da = Countdown.frame3
           $75fb = Countdown.frame4
           $761c = Countdown.frame5
           $763a = Countdown.remove
           $764f = Countdown.endFrame
           $7656 = Countdown.end
           $7658 = IncrementScrollOffset
           $7658 = IncrementScrollOffset.close
           $7666 = IncrementScrollOffset.far
           $7674 = IncrementScrollOffset.end
           $7675 = UpdateSprites
           $768b = UpdateGameCountdown
           $76a0 = UpdateGame
           $76b9 = UpdateGame.end
  SECTION: $76ba-$78dd ($0224 bytes) ["point balloon"]
           $76ba = InitializePointBalloon
           $76c3 = InitializePointBalloon.loop_u1
           $76ce = SetStruct
           $76ef = SpawnPointBalloon
           $7701 = SpawnPointBalloon.availableSpace
           $770a = SpawnPointBalloon.availableOAMSpace
           $7720 = SpawnPointBalloon.balloonLeft
           $7739 = SpawnPointBalloon.balloonRight
           $7749 = SpawnPointBalloon.setStruct
           $774e = SpawnPointBalloon.end
           $7753 = PopBalloonAnimation
           $7764 = PopBalloonAnimation.canSwitchFrames
           $7770 = PopBalloonAnimation.frame0
           $7794 = PopBalloonAnimation.frame1
           $77b8 = PopBalloonAnimation.clear
           $77bc = PopBalloonAnimation.endFrame
           $77c4 = Clear
           $77dd = Move
           $77e4 = Move.balloonLeft
           $77fa = Move.balloonRight
           $7805 = DeathOfPointBalloon
           $7817 = CollisionPointBalloon
           $7817 = CollisionPointBalloon.checkHit
           $7832 = CollisionPointBalloon.checkHitByBullet
           $7852 = CollisionPointBalloon.end
           $7853 = PointBalloonUpdate
           $785a = PointBalloonUpdate.loop
           $7894 = PointBalloonUpdate.isAlive
           $78b1 = PointBalloonUpdate.offScreen
           $78b6 = PointBalloonUpdate.popped
           $78c0 = PointBalloonUpdate.checkLoop
           $78cf = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $78de-$7a26 ($0149 bytes) ["porcupine"]
           $78de = InitializePorcupine
           $78e7 = InitializePorcupine.loop_u1
           $78f2 = SetStruct
           $7907 = SpawnPorcupine
           $791a = SpawnPorcupine.availableSpace
           $7924 = SpawnPorcupine.availableOAMSpace
           $793a = SpawnPorcupine.topLeft
           $7953 = SpawnPorcupine.topMiddle
           $7963 = SpawnPorcupine.topMiddle2
           $7973 = SpawnPorcupine.topRight
           $7983 = SpawnPorcupine.bottomLeft
           $7993 = SpawnPorcupine.bottomMiddle
           $79a5 = SpawnPorcupine.bottomMiddle2
           $79b7 = SpawnPorcupine.bottomRight
           $79c9 = SpawnPorcupine.setStruct
           $79ce = SpawnPorcupine.end
           $79d3 = PorcupineUpdate
           $79da = PorcupineUpdate.loop
           $7a08 = PorcupineUpdate.offScreen
           $7a08 = PorcupineUpdate.isAlive
           $7a0a = PorcupineUpdate.isDead
           $7a0a = PorcupineUpdate.checkLoop
           $7a19 = PorcupineUpdate.checkLoopSkipSet
  SECTION: $7a27-$7b1e ($00f8 bytes) ["menu"]
           $7a27 = InitializeMenu
           $7a33 = SpawnMenuCursor
           $7a3c = SpawnMenuCursor.availableSpace
           $7a57 = SpawnMenuCursor.end
           $7a58 = BlinkMenuCursor
           $7a60 = BlinkMenuCursor.blink
           $7a71 = BlinkMenuCursor.show
           $7a75 = BlinkMenuCursor.empty
           $7a79 = MoveCursor
           $7a7a = SelectMode
           $7a83 = MenuInput
           $7a8d = MenuInput.moveSelected
           $7a96 = MenuInput.selectMode
           $7a9f = MenuInput.end
           $7aa0 = UpdateMenuOpening
           $7abc = UpdateMenuOpening.startSound
           $7ac1 = UpdateMenuOpening.scrollUpTitle
           $7acd = UpdateMenuOpening.endSound
           $7ad2 = UpdateMenuOpening.scrollDownTitle
           $7ade = UpdateMenuOpening.scrollUpTitle2
           $7aea = UpdateMenuOpening.fadeOut
           $7af0 = UpdateMenuOpening.next
           $7af4 = UpdateMenuOpening.endFrame
           $7afb = UpdateMenuOpening.end
           $7afc = UpdateMenu
           $7afc = UpdateMenu.fadeIn
           $7b02 = UpdateMenu.hasFadedIn
           $7b16 = UpdateMenu.fadeOut
  SECTION: $7b1f-$7bec ($00ce bytes) ["palettes"]
           $7b1f = ResetFading
           $7b2d = InitializePalettes
           $7b3f = FadeOutPalettes
           $7b46 = FadeOutPalettes.hasFadedIn
           $7b49 = FadeOutPalettes.fadeOut
           $7b69 = FadeOutPalettes.fade1
           $7b71 = FadeOutPalettes.fade2
           $7b79 = FadeOutPalettes.fade3
           $7b81 = FadeOutPalettes.fade4
           $7b87 = FadeOutPalettes.fadePalettes
           $7b8d = FadeOutPalettes.increaseFrame
           $7b94 = FadeOutPalettes.end
           $7b96 = FadeInPalettes
           $7b9d = FadeInPalettes.hasFadedIn
           $7ba0 = FadeInPalettes.fadeIn
           $7bc0 = FadeInPalettes.fade1
           $7bc8 = FadeInPalettes.fade2
           $7bd0 = FadeInPalettes.fade3
           $7bd8 = FadeInPalettes.fade4
           $7bde = FadeInPalettes.fadePalettes
           $7be4 = FadeInPalettes.increaseFrame
           $7beb = FadeInPalettes.end
  SECTION: $7bed-$7ca6 ($00ba bytes) ["sound"]
           $7bed = AUDIO_OFF
           $7bf1 = AUDIO_ON
           $7bf6 = PopSound
           $7c09 = ExplosionSound
           $7c16 = WaveSound
           $7c23 = FallingSound
           $7c38 = RisingSound
           $7c4d = StopSweepSound
           $7c52 = CollectSound
           $7c67 = WrongAnswerSound
           $7c7e = PercussionSound
           $7c8b = BassSound
           $7c9c = ClearSound
  SECTION: $7ca7-$7d40 ($009a bytes) ["memory"]
           $7ca7 = MEMCPY.memcpy_loop
           $7ca7 = MEMCPY
           $7cab = MEMCPY.memcpy_check_limit
           $7cb1 = MEMCPY_WITH_OFFSET
           $7cb2 = MEMCPY_WITH_OFFSET.memcpy_loop
           $7cbd = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $7cc4 = ClearOAM
           $7ccb = ClearOAM.loop_u1
           $7cd4 = ClearRAM
           $7cdb = ClearRAM.loop_u2
           $7ce4 = RequestOAMSpace
           $7ced = RequestOAMSpace.loop
           $7d04 = RequestOAMSpace.availableSpace
           $7d09 = RequestOAMSpace.sufficientSpace
           $7d19 = RequestOAMSpace.isNotZero4
           $7d1a = RequestOAMSpace.isNotZero3
           $7d1b = RequestOAMSpace.isNotZero2
           $7d1c = RequestOAMSpace.isNotZero1
           $7d1e = RequestOAMSpace.notEnoughSprites
           $7d26 = RequestOAMSpace.end
           $7d29 = RequestRAMSpace
           $7d29 = RequestRAMSpace.loop
           $7d2e = RequestRAMSpace.availableSpace
           $7d32 = RequestRAMSpace.checkLoop
           $7d3f = RequestRAMSpace.noFreeSpace
           $7d40 = RequestRAMSpace.end
  SECTION: $7d41-$7d7a ($003a bytes) ["math"]
           $7d41 = MODULO
           $7d43 = MODULO.loop
           $7d48 = DIVISION
           $7d4e = DIVISION.loop
           $7d53 = DIVISION.end
           $7d56 = ToBCD
           $7d6c = MULTIPLY
           $7d6e = MULTIPLY.loop
           $7d79 = MULTIPLY.end
  SECTION: $7d7b-$7dac ($0032 bytes) ["lcd"]
           $7d7b = LCD_OFF
           $7d82 = LCD_ON
           $7d89 = LCD_ON_NO_WINDOW
           $7d90 = WaitVBlank
           $7d97 = WaitVBlank.loop
           $7da2 = SetupWindow
  SECTION: $7dad-$7dd1 ($0025 bytes) ["score"]
           $7dad = InitializeScore
           $7db5 = AddPoints
           $7dbe = AddPoints.isAlive
           $7dc5 = AddPoints.carry
           $7dcf = AddPoints.end
  SECTION: $7dd2-$7dec ($001b bytes) ["general initialization"]
           $7dd2 = InitializeGeneralVars
  SECTION: $7ded-$7df4 ($0008 bytes) ["timer"]
           $7ded = UpdateGlobalTimer
    SLACK: $020b bytes

WRAM0 bank #0:
  SECTION: $c000-$c009 ($000a bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wParallaxClose
           $c003 = wParallaxFar
           $c004 = wUpdateTilemapAddress
           $c006 = wUpdateTilemapOffset
           $c007 = wUpdateTilemapIndex
           $c008 = wHasUpdatedNextTilemapAddress
           $c009 = wLastUpdatedSCX
  SECTION: $c00a-$c04f ($0046 bytes) ["Playback variables"]
           $c00a = _start_vars
           $c00a = order_cnt
           $c00b = order1
           $c00b = _start_song_descriptor_pointers
           $c00d = order2
           $c00f = order3
           $c011 = order4
           $c013 = duty_instruments
           $c015 = wave_instruments
           $c017 = noise_instruments
           $c019 = routines
           $c01b = waves
           $c01d = mute_channels
           $c01d = _end_song_descriptor_pointers
           $c01e = pattern1
           $c020 = pattern2
           $c022 = pattern3
           $c024 = pattern4
           $c026 = ticks_per_row
           $c027 = current_order
           $c028 = next_order
           $c029 = row_break
           $c02a = temp_note_value
           $c02c = row
           $c02d = tick
           $c02e = counter
           $c02f = current_wave
           $c02f = _hUGE_current_wave
           $c030 = channel_period1
           $c030 = channels
           $c030 = channel1
           $c032 = toneporta_target1
           $c034 = channel_note1
           $c035 = vibrato_tremolo_phase1
           $c036 = envelope1
           $c037 = highmask1
           $c038 = channel_period2
           $c038 = channel2
           $c03a = toneporta_target2
           $c03c = channel_note2
           $c03d = vibrato_tremolo_phase2
           $c03e = envelope2
           $c03f = highmask2
           $c040 = channel_period3
           $c040 = channel3
           $c042 = toneporta_target3
           $c044 = channel_note3
           $c045 = vibrato_tremolo_phase3
           $c046 = envelope3
           $c047 = highmask3
           $c048 = channel_period4
           $c048 = channel4
           $c04a = toneporta_target4
           $c04c = channel_note4
           $c04d = vibrato_tremolo_phase4
           $c04e = envelope4
           $c04f = highmask4
           $c050 = _end_vars
  SECTION: $c050-$c06f ($0020 bytes) ["point balloon vars"]
           $c050 = pointBalloon
  SECTION: $c070-$c08d ($001e bytes) ["balloon cactus vars"]
           $c070 = balloonCactus
  SECTION: $c08e-$c0a4 ($0017 bytes) ["player vars"]
           $c08e = wPlayerY
           $c08f = wPlayerX
           $c090 = wPlayerY2
           $c091 = wPlayerX2
           $c092 = wPlayerAlive
           $c093 = wPlayerPopping
           $c094 = wPlayerPoppingFrame
           $c095 = wPlayerPoppingTimer
           $c096 = wPlayerFalling
           $c097 = wPlayerFallSpeed
           $c098 = wPlayerFallingTimer
           $c099 = wPlayerDelayFallingTimer
           $c09a = wPlayerRespawnTimer
           $c09b = wPlayerSpeed
           $c09c = wPlayerLives
           $c09d = wPlayerRight
           $c09e = wPlayerBulletY
           $c09f = wPlayerBulletX
           $c0a0 = wPlayerBulletAlive
           $c0a1 = wPlayerBulletRight
           $c0a2 = wPlayerInvincible
           $c0a3 = wPlayerBoost
           $c0a4 = wPlayerAttack
  SECTION: $c0a5-$c0b6 ($0012 bytes) ["bird vars"]
           $c0a5 = bird
  SECTION: $c0b7-$c0c8 ($0012 bytes) ["enemy struct vars"]
           $c0b7 = wEnemyOffset
           $c0b8 = wEnemyOffset2
           $c0b9 = wEnemyY
           $c0ba = wEnemyX
           $c0bb = wEnemyActive
           $c0bc = wEnemyOAM
           $c0bd = wEnemyAlive
           $c0be = wEnemyPopping
           $c0bf = wEnemyPoppingFrame
           $c0c0 = wEnemyPoppingTimer
           $c0c1 = wEnemyRightside
           $c0c2 = wEnemyY2
           $c0c3 = wEnemyX2
           $c0c4 = wEnemyFalling
           $c0c5 = wEnemyFallingSpeed
           $c0c6 = wEnemyFallingTimer
           $c0c7 = wEnemyDelayFallingTimer
           $c0c8 = wEnemyToDie
  SECTION: $c0c9-$c0d8 ($0010 bytes) ["bomb vars"]
           $c0c9 = bomb
  SECTION: $c0d9-$c0dd ($0005 bytes) ["porcupine vars"]
           $c0d9 = porcupine
  SECTION: $c0de-$c0e2 ($0005 bytes) ["level vars"]
           $c0de = wLevel
           $c0df = wLevelPointer
           $c0e0 = wLevelPointerWaitCounter
           $c0e1 = wLevelDataAddress
  SECTION: $c0e3-$c0e6 ($0004 bytes) ["palettes vars"]
           $c0e3 = wFadeInFrame
           $c0e4 = wFadeOutFrame
           $c0e5 = wTriggerFadeIn
           $c0e6 = wTriggerFadeOut
  SECTION: $c0e7-$c0e9 ($0003 bytes) ["controller vars"]
           $c0e7 = wControllerDown
           $c0e8 = wControllerPressed
           $c0e9 = wPaused
  SECTION: $c0ea-$c0ec ($0003 bytes) ["score vars"]
           $c0ea = wScore
  SECTION: $c0ed-$c0ef ($0003 bytes) ["interrupts vars"]
           $c0ed = wVBlankFlag
           $c0ee = wLCDInterrupt
  SECTION: $c0f0-$c0f1 ($0002 bytes) ["menu vars"]
           $c0f0 = wMenuFrame
           $c0f1 = wSelectedMode
  SECTION: $c0f2-$c0f3 ($0002 bytes) ["game vars"]
           $c0f2 = wHandWavingFrame
           $c0f3 = wCountdownFrame
  SECTION: $c0f4-$c0f4 ($0001 byte) ["timer vars"]
           $c0f4 = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e6b bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1cb9 bytes in 1 bank
    ROMX: $3df5 bytes in 1 bank
    WRAM0: $0195 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
