ROM0 bank #0:
  SECTION: $0000-$0030 ($0031 bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d9 ($008f bytes) ["interrupts"]
           $004b = VBlankInterrupt
           $005b = LCDInterrupt
           $0065 = LCDInterruptEnd
           $0069 = SetBaseInterrupts
           $007b = ParkLCDInterrupt
           $0087 = ParkLCDInterrupt.clouds
           $0095 = ParkLCDInterrupt.ground
           $009a = ParkLCDInterrupt.end
           $009d = SetParkInterrupts
           $00aa = ClassicLCDInterrupt
           $00cc = SetClassicInterrupts
  SECTION: $00da-$00f7 ($001e bytes) ["OAM DMA routine"]
           $00da = CopyDMARoutine
           $00e1 = CopyDMARoutine.copy
           $00e8 = DMARoutine
           $00ec = DMARoutine.wait
           $00f0 = DMARoutineEnd
           $00f0 = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$159d ($03ed bytes) ["player"]
           $11b1 = UpdateBalloonPosition
           $11ca = UpdateCactusPosition
           $11e3 = UpdatePlayerPosition
           $11ea = InitializePlayer
           $1268 = ClearPlayerCactus
           $1275 = ClearPlayerBalloon
           $1282 = SpawnPlayer
           $1292 = MoveCactusDriftLeft
           $12a7 = MoveCactusDriftLeft.end
           $12a8 = MoveCactusDriftRight
           $12bc = MoveCactusDriftRight.end
           $12bd = MoveCactusDriftCenterX
           $12cf = MoveCactusDriftCenterX.moveRight
           $12d1 = MoveCactusDriftCenterX.moveLeft
           $12d2 = MoveCactusDriftCenterX.end
           $12d3 = MoveCactusDriftUp
           $12e8 = MoveCactusDriftUp.end
           $12e9 = MoveCactusDriftCenterY
           $12fe = MoveCactusDriftCenterY.moveUp
           $1300 = MoveCactusDriftCenterY.moveDown
           $1301 = MoveCactusDriftCenterY.end
           $1302 = MoveRight
           $1316 = MoveLeft
           $132e = MoveDown
           $1342 = MoveUp
           $1357 = SpeedUp
           $135d = ResetSpeedUp
           $1363 = PlayerControls
           $137b = PlayerControls.endRight
           $1391 = PlayerControls.endLeft
           $13a7 = PlayerControls.endUp
           $13bd = PlayerControls.endDown
           $13cc = PlayerControls.endDriftToCenterX
           $13db = PlayerControls.endDriftToCenterY
           $13e6 = PlayerControls.endStart
           $13ec = PlayerControls.endA
           $13f7 = PlayerControls.endB
           $13fa = PlayerControls.end
           $1400 = MovePlayer
           $140f = MovePlayerAutoMiddle
           $141c = MovePlayerAutoMiddle.moveRight
           $1420 = MovePlayerAutoMiddle.moveLeft
           $1422 = MovePlayerAutoMiddle.end
           $1426 = MovePlayerAutoFlyUp
           $143c = FallCactusDown
           $1451 = FallCactusDown.skipAcceleration
           $145a = PopBalloonAnimation
           $147b = PopBalloonAnimation.frame0
           $1491 = PopBalloonAnimation.frame1
           $14a7 = PopBalloonAnimation.clear
           $14b6 = PopBalloonAnimation.end
           $14b7 = CactusFalling
           $14d1 = CactusFalling.offScreen
           $14d9 = CactusFalling.end
           $14da = NoMoreLives
           $14e1 = PlayerUpdate
           $14fc = PlayerUpdate.popped
           $1511 = PlayerUpdate.respawn
           $1514 = PlayerUpdate.respawnSkip
           $151e = PlayerUpdate.notPopping
           $1528 = PlayerUpdate.end
           $1529 = DeathOfPlayer
           $154d = InvincibleBlink
           $1566 = InvincibleBlink.blinkNormal
           $156f = InvincibleBlink.blinkFast
           $1574 = InvincibleBlink.blinkEnd
           $1589 = InvincibleBlink.defaultPalette
           $159d = InvincibleBlink.end
  SECTION: $159e-$178d ($01f0 bytes) ["graphics"]
           $159e = LoadClassicGameData
           $1605 = LoadMenuData
           $1630 = RefreshScore
           $166e = RefreshLives
           $1679 = RefreshLevel
           $168c = RefreshWindow
           $169c = RefreshWindow.end
           $169d = ClearAllTiles
           $16a6 = ClearAllTiles.loop_u1
           $16b5 = ClearAllTiles.loop_u2
           $16c4 = ClearAllTiles.loop_u3
           $16cf = ClearMap
           $16d8 = ClearMap.loop_u4
           $16e3 = ReplaceTilemapHorizontal
           $170c = ReplaceTilemapHorizontal.handleZero
           $170e = ReplaceTilemapHorizontal.handleZeroEnd
           $171a = ReplaceTilemapHorizontal.loop
           $1738 = ReplaceTilemapHorizontal.end
           $173d = MoveToNextTilemap
           $1750 = MoveToNextTilemap.canUpdateTilemap
           $1763 = MoveToNextTilemap.clouds1
           $1778 = MoveToNextTilemap.clouds2
           $178b = MoveToNextTilemap.end
  SECTION: $178e-$193c ($01af bytes) ["collision"]
           $178e = CollisionCheck
           $179b = CollisionCheck.tryOtherY
           $17a3 = CollisionCheck.skip8x8Adjustment
           $17af = CollisionCheck.checkX
           $17bc = CollisionCheck.tryOtherX
           $17c9 = CollisionCheck.collision
           $17cd = CollisionCheck.end
           $17d1 = CollisionWithPlayer
           $17dc = CollisionFallingEnemy
           $17dd = CollisionEnemy2
           $1816 = CollisionEnemy2.birdCollision
           $1846 = CollisionEnemy2.end
           $1847 = CollisionFallingEnemy2
           $184e = CollisionFallingEnemy2.birdCollision
           $1877 = CollisionFallingEnemy2.pointBalloonCollision
           $189c = CollisionFallingEnemy2.end
           $189c = CollisionFallingEnemy2.bombCollision
           $189c = CollisionFallingEnemy2.enemy2Collision
           $189d = CollisionBomb
           $18c0 = CollisionBomb.end
           $18c1 = CollisionBird
           $18e0 = CollisionBird.end
           $18e1 = CollisionUpdate
           $1900 = CollisionUpdate.end
           $1901 = OffScreenXEnemies
           $1912 = OffScreenXEnemies.end
           $1914 = OffScreenYEnemies
           $1925 = OffScreenYEnemies.end
           $1927 = OffScreenX
           $192f = OffScreenX.end
           $1931 = OffScreenY
           $193b = OffScreenY.end
  SECTION: $193d-$1a00 ($00c4 bytes) ["rom"]
           $193d = Start
           $1971 = StartClassic
           $19c2 = PreGameLoop
           $19e3 = GameLoopCountdown
           $19f2 = GameLoop
  SECTION: $1a01-$1abb ($00bb bytes) ["level data"]
           $1a01 = W1L1W1
           $1a04 = W1L1W2
           $1a04 = W1L1W3
           $1a04 = W1L1W4
           $1a04 = W1L1W2End
           $1a04 = W1L2
           $1a04 = W1L1W3End
           $1a04 = W1L2End
           $1a04 = W2L1
           $1a04 = W1L1W4End
           $1a04 = W1L1W1End
           $1a08 = W2L1End
           $1a08 = InitializeLevelVars
           $1a14 = LevelDataHandler
           $1a14 = LevelDataHandler.loop
           $1a2b = LevelDataHandler.pointBalloon
           $1a34 = LevelDataHandler.balloonCactus
           $1a3d = LevelDataHandler.bird
           $1a3f = LevelDataHandler.bomb
           $1a41 = LevelDataHandler.empty
           $1a43 = LevelDataHandler.loopCheck
           $1a49 = LevelDataHandler.end
           $1a4a = LevelDataManager
           $1a62 = LevelDataManager.w1
           $1a6f = LevelDataManager.w1_l1
           $1a84 = LevelDataManager.w1_l1_w1
           $1a8c = LevelDataManager.w1_l1_w2
           $1a94 = LevelDataManager.w1_l1_w3
           $1a9c = LevelDataManager.w1_l1_w4
           $1aab = LevelDataManager.w1_l2
           $1aad = LevelDataManager.w2
           $1aaf = LevelDataManager.w3
           $1ab1 = LevelDataManager.handle
           $1abb = LevelDataManager.end
  SECTION: $1abc-$1b2e ($0073 bytes) ["joypad"]
           $1abc = ReadInput
           $1aec = JOY_RIGHT
           $1af4 = JOY_LEFT
           $1afc = JOY_UP
           $1b04 = JOY_DOWN
           $1b0c = JOY_A
           $1b14 = JOY_B
           $1b1c = JOY_SELECT
           $1b24 = JOY_START
           $1b2c = JOY_FALSE
  SECTION: $1b2f-$1b43 ($0015 bytes) ["scroll"]
           $1b2f = HorizontalScroll
           $1b3c = HorizontalScroll.end
           $1b3e = ResetScroll
    SLACK: $24d8 bytes

ROMX bank #1:
  SECTION: $4000-$4b3d ($0b3e bytes) ["Song Data2"]
           $4000 = angryTheme
           $4015 = order_cnt
           $4016 = order1
           $4020 = order2
           $402a = order3
           $4034 = order4
           $403e = P0
           $40fe = P1
           $41be = P2
           $427e = P3
           $433e = P4
           $43fe = P5
           $44be = P6
           $457e = P7
           $463e = P8
           $46fe = P9
           $47be = P10
           $487e = P11
           $493e = duty_instruments
           $493e = itSquareinst1
           $4942 = itSquareinst2
           $4946 = itSquareinst3
           $494a = itSquareinst4
           $494e = itSquareinst5
           $4952 = itSquareinst6
           $4956 = itSquareinst7
           $495a = itSquareinst8
           $495e = itSquareinst9
           $4962 = itSquareinst10
           $4966 = itSquareinst11
           $496a = itSquareinst12
           $496e = itSquareinst13
           $4972 = itSquareinst14
           $4976 = itSquareinst15
           $497a = wave_instruments
           $497a = itWaveinst1
           $497e = itWaveinst2
           $4982 = itWaveinst3
           $4986 = itWaveinst4
           $498a = itWaveinst5
           $498e = itWaveinst6
           $4992 = itWaveinst7
           $4996 = itWaveinst8
           $499a = itWaveinst9
           $499e = itWaveinst10
           $49a2 = itWaveinst11
           $49a6 = itWaveinst12
           $49aa = itWaveinst13
           $49ae = itWaveinst14
           $49b2 = itWaveinst15
           $49b6 = noise_instruments
           $49b6 = itNoiseinst1
           $49be = itNoiseinst2
           $49c6 = itNoiseinst3
           $49ce = itNoiseinst4
           $49d6 = itNoiseinst5
           $49de = itNoiseinst6
           $49e6 = itNoiseinst7
           $49ee = itNoiseinst8
           $49f6 = itNoiseinst9
           $49fe = itNoiseinst10
           $4a06 = itNoiseinst11
           $4a0e = itNoiseinst12
           $4a16 = itNoiseinst13
           $4a1e = itNoiseinst14
           $4a26 = itNoiseinst15
           $4a2e = routines
           $4a2e = __end_hUGE_Routine_0
           $4a2e = __hUGE_Routine_0
           $4a2f = __end_hUGE_Routine_1
           $4a2f = __hUGE_Routine_1
           $4a30 = __end_hUGE_Routine_2
           $4a30 = __hUGE_Routine_2
           $4a31 = __end_hUGE_Routine_3
           $4a31 = __hUGE_Routine_3
           $4a32 = __end_hUGE_Routine_4
           $4a32 = __hUGE_Routine_4
           $4a33 = __end_hUGE_Routine_5
           $4a33 = __hUGE_Routine_5
           $4a34 = __end_hUGE_Routine_6
           $4a34 = __hUGE_Routine_6
           $4a35 = __end_hUGE_Routine_7
           $4a35 = __hUGE_Routine_7
           $4a36 = __hUGE_Routine_8
           $4a36 = __end_hUGE_Routine_8
           $4a37 = __hUGE_Routine_9
           $4a37 = __end_hUGE_Routine_9
           $4a38 = __hUGE_Routine_10
           $4a38 = __end_hUGE_Routine_10
           $4a39 = __hUGE_Routine_11
           $4a39 = __end_hUGE_Routine_11
           $4a3a = __hUGE_Routine_12
           $4a3a = __end_hUGE_Routine_12
           $4a3b = __hUGE_Routine_13
           $4a3b = __end_hUGE_Routine_13
           $4a3c = __end_hUGE_Routine_14
           $4a3c = __hUGE_Routine_14
           $4a3d = __end_hUGE_Routine_15
           $4a3d = __hUGE_Routine_15
           $4a3e = waves
           $4a3e = wave0
           $4a4e = wave1
           $4a5e = wave2
           $4a6e = wave3
           $4a7e = wave4
           $4a8e = wave5
           $4a9e = wave6
           $4aae = wave7
           $4abe = wave8
           $4ace = wave9
           $4ade = wave10
           $4aee = wave11
           $4afe = wave12
           $4b0e = wave13
           $4b1e = wave14
           $4b2e = wave15
  SECTION: $4b3e-$559d ($0a60 bytes) ["tilesets"]
           $4b3e = CactusTiles
           $4dfe = CactusTilesEnd
           $4dfe = PropellerCactusTiles
           $4eee = PropellerCactusTilesEnd
           $4eee = BackgroundTiles
           $532e = BackgroundTilesEnd
           $532e = ClassicParkTiles
           $536e = CountdownTiles
           $536e = ClassicParkTilesEnd
           $546e = CountdownTilesEnd
           $546e = WindowTiles
           $559e = WindowTilesEnd
  SECTION: $559e-$5b9d ($0600 bytes) ["menu title tiles"]
           $559e = MenuTitleTiles
           $5b9e = MenuTitleTilesEnd
  SECTION: $5b9e-$60bb ($051e bytes) ["Song Data"]
           $5b9e = menuTheme
           $5bb3 = order_cnt
           $5bb4 = order1
           $5bb6 = order2
           $5bb8 = order3
           $5bba = order4
           $5bbc = P1
           $5c7c = P2
           $5d3c = P3
           $5dfc = P6
           $5ebc = duty_instruments
           $5ebc = itSquareinst1
           $5ec0 = itSquareinst2
           $5ec4 = itSquareinst3
           $5ec8 = itSquareinst4
           $5ecc = itSquareinst5
           $5ed0 = itSquareinst6
           $5ed4 = itSquareinst7
           $5ed8 = itSquareinst8
           $5edc = itSquareinst9
           $5ee0 = itSquareinst10
           $5ee4 = itSquareinst11
           $5ee8 = itSquareinst12
           $5eec = itSquareinst13
           $5ef0 = itSquareinst14
           $5ef4 = itSquareinst15
           $5ef8 = wave_instruments
           $5ef8 = itWaveinst1
           $5efc = itWaveinst2
           $5f00 = itWaveinst3
           $5f04 = itWaveinst4
           $5f08 = itWaveinst5
           $5f0c = itWaveinst6
           $5f10 = itWaveinst7
           $5f14 = itWaveinst8
           $5f18 = itWaveinst9
           $5f1c = itWaveinst10
           $5f20 = itWaveinst11
           $5f24 = itWaveinst12
           $5f28 = itWaveinst13
           $5f2c = itWaveinst14
           $5f30 = itWaveinst15
           $5f34 = noise_instruments
           $5f34 = itNoiseinst1
           $5f3c = itNoiseinst2
           $5f44 = itNoiseinst3
           $5f4c = itNoiseinst4
           $5f54 = itNoiseinst5
           $5f5c = itNoiseinst6
           $5f64 = itNoiseinst7
           $5f6c = itNoiseinst8
           $5f74 = itNoiseinst9
           $5f7c = itNoiseinst10
           $5f84 = itNoiseinst11
           $5f8c = itNoiseinst12
           $5f94 = itNoiseinst13
           $5f9c = itNoiseinst14
           $5fa4 = itNoiseinst15
           $5fac = routines
           $5fac = __end_hUGE_Routine_0
           $5fac = __hUGE_Routine_0
           $5fad = __end_hUGE_Routine_1
           $5fad = __hUGE_Routine_1
           $5fae = __end_hUGE_Routine_2
           $5fae = __hUGE_Routine_2
           $5faf = __end_hUGE_Routine_3
           $5faf = __hUGE_Routine_3
           $5fb0 = __end_hUGE_Routine_4
           $5fb0 = __hUGE_Routine_4
           $5fb1 = __end_hUGE_Routine_5
           $5fb1 = __hUGE_Routine_5
           $5fb2 = __end_hUGE_Routine_6
           $5fb2 = __hUGE_Routine_6
           $5fb3 = __end_hUGE_Routine_7
           $5fb3 = __hUGE_Routine_7
           $5fb4 = __hUGE_Routine_8
           $5fb4 = __end_hUGE_Routine_8
           $5fb5 = __hUGE_Routine_9
           $5fb5 = __end_hUGE_Routine_9
           $5fb6 = __hUGE_Routine_10
           $5fb6 = __end_hUGE_Routine_10
           $5fb7 = __hUGE_Routine_11
           $5fb7 = __end_hUGE_Routine_11
           $5fb8 = __hUGE_Routine_12
           $5fb8 = __end_hUGE_Routine_12
           $5fb9 = __hUGE_Routine_13
           $5fb9 = __end_hUGE_Routine_13
           $5fba = __end_hUGE_Routine_14
           $5fba = __hUGE_Routine_14
           $5fbb = __end_hUGE_Routine_15
           $5fbb = __hUGE_Routine_15
           $5fbc = waves
           $5fbc = wave0
           $5fcc = wave1
           $5fdc = wave2
           $5fec = wave3
           $5ffc = wave4
           $600c = wave5
           $601c = wave6
           $602c = wave7
           $603c = wave8
           $604c = wave9
           $605c = wave10
           $606c = wave11
           $607c = wave12
           $608c = wave13
           $609c = wave14
           $60ac = wave15
  SECTION: $60bc-$641b ($0360 bytes) ["balloon cactus"]
           $60bc = InitializeBalloonCactus
           $60c5 = InitializeBalloonCactus.loop_u1
           $60d0 = RequestBalloonCactusSpace
           $60d7 = RequestBalloonCactusSpace.loop
           $60dc = RequestBalloonCactusSpace.availableSpace
           $60e0 = RequestBalloonCactusSpace.checkLoop
           $60ef = RequestBalloonCactusSpace.noFreeSpace
           $60f0 = RequestBalloonCactusSpace.end
           $60f2 = GetBalloonCactusStruct
           $612d = SetBalloonCactusStruct
           $6168 = SpawnBalloonCactus
           $6175 = SpawnBalloonCactus.availableSpace
           $6186 = SpawnBalloonCactus.availableOAMSpace
           $61a5 = SpawnBalloonCactus.balloonLeft
           $61bd = SpawnBalloonCactus.balloonRight
           $61cd = SpawnBalloonCactus.cactusLeft
           $61db = SpawnBalloonCactus.cactusRight
           $61eb = SpawnBalloonCactus.setStruct
           $61f0 = SpawnBalloonCactus.end
           $61f4 = ClearEnemyCactus
           $6209 = ClearEnemyBalloon
           $621e = FallCactusDown
           $6233 = FallCactusDown.skipAcceleration
           $623c = PopBalloonAnimation
           $625d = PopBalloonAnimation.frame0
           $6283 = PopBalloonAnimation.frame1
           $62a9 = PopBalloonAnimation.clear
           $62b8 = PopBalloonAnimation.end
           $62b9 = CactusFalling
           $62d3 = CactusFalling.offScreen
           $62db = CactusFalling.end
           $62dc = UpdateBalloonPosition
           $6305 = UpdateCactusPosition
           $632e = MoveBalloonDown
           $6336 = MoveDown
           $6345 = MoveBalloonCactus
           $635a = DeathOfBalloonCactus
           $6389 = CollisionBalloonCactus
           $63c2 = CollisionBalloonCactus.end
           $63c3 = BalloonCactusUpdate
           $63ca = BalloonCactusUpdate.loop
           $63de = BalloonCactusUpdate.isAlive
           $63ea = BalloonCactusUpdate.popped
           $63f1 = BalloonCactusUpdate.notPopping
           $63f8 = BalloonCactusUpdate.checkLoop
           $6413 = BalloonCactusUpdate.end
  SECTION: $641c-$671f ($0304 bytes) ["bird"]
           $641c = UpdateBirdPosition
           $645e = SetSpawnPoint
           $6478 = SetSpawnPoint.spawnA
           $647c = SetSpawnPoint.spawnB
           $6480 = SetSpawnPoint.spawnC
           $6484 = SetSpawnPoint.spawnD
           $6486 = SetSpawnPoint.end
           $6489 = InitializeBird
           $64a7 = SpawnBirdRight
           $6506 = SpawnBirdLeft
           $6565 = SpawnBird
           $6577 = BirdAnimate
           $6580 = BirdAnimate.frame0
           $65a9 = BirdAnimate.frame0FacingLeft
           $65b4 = BirdAnimate.frame0FacingEnd
           $65bd = BirdAnimate.frame1
           $65e6 = BirdAnimate.frame1FacingLeft
           $65f1 = BirdAnimate.frame1FacingEnd
           $6601 = BirdAnimate.end
           $6604 = ClearBird
           $661d = BirdMovement
           $662b = BirdMovement.moveLeft
           $6637 = BirdMovement.moveRight
           $663f = BirdMovement.moveDown
           $664d = BirdMovement.moveEnd
           $6653 = BirdMovement.end
           $6654 = BirdFalling
           $666c = BirdFalling.checkOffscreenY
           $667e = BirdFalling.end
           $667f = BirdUpdate
           $6682 = BirdUpdate.checkAlive
           $668c = BirdUpdate.checkOffscreenX
           $66a0 = BirdUpdate.isDead
           $66a3 = BirdUpdate.respawning
           $66b8 = BirdUpdate.end
           $66bc = DeathOfBird
           $66cf = DeathOfBird.facingLeft
           $66f8 = DeathOfBird.facingRight
           $671f = DeathOfBird.end
  SECTION: $6720-$69e8 ($02c9 bytes) ["enemy 2"]
           $6720 = UpdateBalloonPosition
           $6749 = UpdateCactusPosition
           $6772 = UpdateEnemyPosition
           $6779 = InitializeEnemy2
           $67b3 = InitializeEnemy2.nextSpawnPoint
           $67cf = InitializeEnemy2.spawnA
           $67d8 = InitializeEnemy2.spawnB
           $67e1 = InitializeEnemy2.spawnC
           $67ea = InitializeEnemy2.spawnD
           $67f1 = InitializeEnemy2.endNextSpawnPoint
           $67f2 = ClearEnemy2Cactus
           $6807 = ClearEnemy2Balloon
           $681c = SpawnEnemy
           $689b = MoveLeft
           $68ae = MoveDown
           $68bd = MoveEnemy
           $68c4 = FallCactusDown
           $68d9 = FallCactusDown.skipAcceleration
           $68e2 = PopBalloonAnimation
           $6903 = PopBalloonAnimation.frame0
           $6929 = PopBalloonAnimation.frame1
           $694f = PopBalloonAnimation.clear
           $695e = PopBalloonAnimation.end
           $695f = CactusFalling
           $6979 = CactusFalling.offScreen
           $6981 = CactusFalling.end
           $6982 = Enemy2Update
           $6994 = Enemy2Update.popped
           $69a2 = Enemy2Update.respawnSkip
           $69ac = Enemy2Update.notPopping
           $69b6 = Enemy2Update.end
           $69b7 = DeathOfEnemy2
  SECTION: $69e9-$6c6f ($0287 bytes) ["classic"]
           $69e9 = InitializeClassicVars
           $69ee = ParkFadeOut
           $6a01 = ParkFadeOut.startFadeOut
           $6a07 = ParkFadeOut.fadeOut
           $6a12 = ParkFadeOut.hasFadedOut
           $6a16 = UpdatePark
           $6a1f = UpdatePark.moveUp
           $6a28 = UpdatePark.flyUpNormal
           $6a2f = UpdatePark.flyUpFast
           $6a32 = UpdatePark.end
           $6a33 = TryToUnpause
           $6a4a = TryToUnpause.end
           $6a4b = ParkEnteredClassic
           $6a53 = StartedClassic
           $6a5b = SpawnHandWave
           $6a7e = SpawnHandWave.end
           $6a7f = HandWaveAnimation
           $6a86 = HandWaveAnimation.frame0
           $6aa1 = HandWaveAnimation.frame1
           $6abb = HandWaveAnimation.end
           $6abc = SpawnCountdown
           $6aeb = SpawnCountdown.end
           $6aec = CountdownAnimation
           $6af3 = CountdownAnimation.countdown
           $6afd = CountdownAnimation.balloonPop
           $6b05 = CountdownAnimation.frames
           $6b2c = CountdownAnimation.frame0
           $6b4f = CountdownAnimation.frame1
           $6b72 = CountdownAnimation.frame2
           $6b95 = CountdownAnimation.frame3
           $6bb8 = CountdownAnimation.frame4
           $6bdb = CountdownAnimation.frame5
           $6bfb = CountdownAnimation.remove
           $6c14 = CountdownAnimation.end
           $6c15 = IncrementScrollOffset
           $6c23 = IncrementScrollOffset.end
           $6c24 = SetClassicMapStartPoint
           $6c29 = ClassicGameManager
           $6c32 = UpdateClassicCountdown
           $6c4a = UpdateClassic
           $6c6f = UpdateClassic.end
  SECTION: $6c70-$6ebf ($0250 bytes) ["point balloon"]
           $6c70 = InitializePointBalloon
           $6c79 = InitializePointBalloon.loop_u1
           $6c84 = RequestPointBalloonSpace
           $6c8b = RequestPointBalloonSpace.loop
           $6c90 = RequestPointBalloonSpace.availableSpace
           $6c94 = RequestPointBalloonSpace.checkLoop
           $6ca3 = RequestPointBalloonSpace.noFreeSpace
           $6ca4 = RequestPointBalloonSpace.end
           $6ca6 = GetPointBalloonStruct
           $6cc9 = SetPointBalloonStruct
           $6cec = SpawnPointBalloon
           $6cf8 = SpawnPointBalloon.availableSpace
           $6d09 = SpawnPointBalloon.availableOAMSpace
           $6d1d = SpawnPointBalloon.balloonLeft
           $6d35 = SpawnPointBalloon.balloonRight
           $6d45 = SpawnPointBalloon.setStruct
           $6d4a = SpawnPointBalloon.end
           $6d4e = PopBalloonAnimation
           $6d6f = PopBalloonAnimation.frame0
           $6d95 = PopBalloonAnimation.frame1
           $6dbb = PopBalloonAnimation.clear
           $6dbe = PopBalloonAnimation.end
           $6dbf = ClearPointBalloon
           $6dec = UpdateBalloonPosition
           $6e15 = MovePointBalloon
           $6e20 = DeathOfPointBalloon
           $6e32 = CollisionPointBalloon
           $6e50 = PointBalloonUpdate
           $6e57 = PointBalloonUpdate.loop
           $6e73 = PointBalloonUpdate.isAlive
           $6e8d = PointBalloonUpdate.offScreen
           $6e92 = PointBalloonUpdate.popped
           $6e9c = PointBalloonUpdate.checkLoop
           $6eb7 = PointBalloonUpdate.end
  SECTION: $6ec0-$7108 ($0249 bytes) ["bomb"]
           $6ec0 = UpdateBombPosition
           $6f02 = SetSpawnPoint
           $6f1c = SetSpawnPoint.spawnA
           $6f20 = SetSpawnPoint.spawnB
           $6f24 = SetSpawnPoint.spawnC
           $6f28 = SetSpawnPoint.spawnD
           $6f2a = SetSpawnPoint.end
           $6f2d = InitializeBomb
           $6f4f = SpawnBomb
           $6f63 = SpawnBomb.balloonLeft
           $6f7c = SpawnBomb.balloonRight
           $6f8d = SpawnBomb.bombSpace
           $6f98 = SpawnBomb.end
           $6f9a = FloatBombUp
           $6fa7 = ClearBomb
           $6fc0 = BombUpdate
           $6fd1 = BombUpdate.checkOffscreen
           $6fe4 = BombUpdate.popped
           $6ff2 = BombUpdate.respawnSkip
           $6ffa = BombUpdate.end
           $6ffb = DeathOfBomb
           $7006 = ExplosionAnimation
           $7031 = ExplosionAnimation.frame0
           $7057 = ExplosionAnimation.frame1
           $709f = ExplosionAnimation.frame2
           $70cc = ExplosionAnimation.frame3
           $70f9 = ExplosionAnimation.clear
           $7108 = ExplosionAnimation.end
  SECTION: $7109-$71e7 ($00df bytes) ["propellerCactus"]
           $7109 = InitializePropellerCactus
           $7129 = SpawnPropellerCactus
           $7135 = SpawnPropellerCactus.topLeft
           $7145 = SpawnPropellerCactus.topMiddle
           $7157 = SpawnPropellerCactus.topMiddle2
           $7169 = SpawnPropellerCactus.topRight
           $717b = SpawnPropellerCactus.bottomLeft
           $718d = SpawnPropellerCactus.bottomMiddle
           $71a1 = SpawnPropellerCactus.bottomMiddle2
           $71b5 = SpawnPropellerCactus.bottomRight
           $71ca = PropellerCactusUpdate
           $71d9 = PropellerCactusUpdate.popped
           $71e7 = PropellerCactusUpdate.end
           $71e7 = PropellerCactusUpdate.respawnSkip
           $71e7 = PropellerCactusUpdate.notPopping
  SECTION: $71e8-$7296 ($00af bytes) ["menu"]
           $71e8 = SpawnMenuCursor
           $7207 = BlinkMenuCursor
           $720f = BlinkMenuCursor.blink
           $721f = BlinkMenuCursor.show
           $7223 = BlinkMenuCursor.empty
           $7227 = MoveCursor
           $7237 = MoveCursor.classicMode
           $7246 = MoveCursor.storyMode
           $7255 = SelectMode
           $725c = SelectMode.classicMode
           $7265 = SelectMode.storyMode
           $7266 = MenuInput
           $7270 = MenuInput.selectMode
           $7270 = MenuInput.moveSelected
           $7279 = MenuInput.end
           $727a = UpdateMenu
           $7288 = UpdateMenu.fadeOut
           $7293 = UpdateMenu.hasFadedOut
  SECTION: $7297-$7340 ($00aa bytes) ["palettes"]
           $7297 = SetupPalettes
           $72a8 = SetupParkPalettes
           $72b7 = FadeOutPalettes
           $72bf = FadeOutPalettes.fadeOut
           $72d3 = FadeOutPalettes.fade1
           $72d7 = FadeOutPalettes.fade2
           $72db = FadeOutPalettes.fade3
           $72df = FadeOutPalettes.fade4
           $72e1 = FadeOutPalettes.end
           $72f1 = FadeInPalettes
           $72f9 = FadeInPalettes.fadeIn
           $730d = FadeInPalettes.fade1
           $7311 = FadeInPalettes.fade2
           $7315 = FadeInPalettes.fade3
           $7319 = FadeInPalettes.fade4
           $731b = FadeInPalettes.end
           $732b = HasFadedOut
           $7331 = HasFadedOut.false
           $7333 = HasFadedOut.true
           $7336 = HasFadedIn
           $733c = HasFadedIn.false
           $733e = HasFadedIn.true
  SECTION: $7341-$73de ($009e bytes) ["sound"]
           $7341 = AUDIO_OFF
           $7345 = AUDIO_ON
           $734a = PopSound
           $735d = ExplosionSound
           $7370 = FallingSound
           $7385 = StopFallingSound
           $738a = CollectSound
           $739f = WrongAnswerSound
           $73b6 = PercussionSound
           $73c3 = BassSound
           $73d4 = ClearSound
  SECTION: $73df-$744d ($006f bytes) ["memory"]
           $73df = MEMCPY.memcpy_loop
           $73df = MEMCPY
           $73e3 = MEMCPY.memcpy_check_limit
           $73e9 = ClearOAM
           $73f0 = ClearOAM.loop_u1
           $73f9 = ClearRAM
           $7400 = ClearRAM.loop_u2
           $7409 = RequestOAMSpace
           $7412 = RequestOAMSpace.loop
           $7429 = RequestOAMSpace.availableSpace
           $742e = RequestOAMSpace.sufficientSpace
           $743e = RequestOAMSpace.isNotZero4
           $743f = RequestOAMSpace.isNotZero3
           $7440 = RequestOAMSpace.isNotZero2
           $7441 = RequestOAMSpace.isNotZero1
           $7443 = RequestOAMSpace.notEnoughSprites
           $744b = RequestOAMSpace.end
  SECTION: $744e-$749d ($0050 bytes) ["menu tiles"]
           $744e = MenuTiles
           $749e = MenuTilesEnd
  SECTION: $749e-$74e6 ($0049 bytes) ["math"]
           $749e = MODULO
           $74a0 = MODULO.loop
           $74a5 = RANDOM
           $74ae = DIVISION
           $74b4 = DIVISION.loop
           $74b9 = DIVISION.end
           $74bc = ToBCD
           $74d3 = ToBCD.end
           $74d6 = MULTIPLY
           $74d9 = MULTIPLY.loop
           $74e4 = MULTIPLY.end
  SECTION: $74e7-$7518 ($0032 bytes) ["lcd"]
           $74e7 = LCD_OFF
           $74ee = LCD_ON
           $74f5 = LCD_ON_BG_ONLY
           $74fc = WaitVBlank
           $7503 = WaitVBlank.loop
           $750e = SetupWindow
  SECTION: $7519-$7545 ($002d bytes) ["general initialization"]
           $7519 = InitializeGameVars
  SECTION: $7546-$756a ($0025 bytes) ["score"]
           $7546 = InitializeScore
           $754e = AddPoints
           $755e = AddPoints.carry
           $7568 = AddPoints.end
  SECTION: $756b-$7572 ($0008 bytes) ["timer"]
           $756b = UpdateGlobalTimer
    SLACK: $0a8d bytes

WRAM0 bank #0:
  SECTION: $c000-$c017 ($0018 bytes) ["general RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = selected_mode
           $c009 = hand_waving_frame
           $c00a = countdown_frame
           $c00b = cloud_scroll_offset
           $c00c = classic_mode_stage
           $c00d = fade_frame
           $c00e = wOAMGeneral1
           $c00f = wOAMGeneral2
           $c010 = wLCDInterrupt
           $c012 = wUpdateTilemapAddress
           $c014 = wUpdateTilemapOffset
           $c015 = wUpdateTilemapIndex
           $c016 = wHasUpdatedNextTilemapAddress
           $c017 = wLastUpdatedSCX
  SECTION: $c018-$c05d ($0046 bytes) ["Playback variables"]
           $c018 = _start_vars
           $c018 = order_cnt
           $c019 = order1
           $c019 = _start_song_descriptor_pointers
           $c01b = order2
           $c01d = order3
           $c01f = order4
           $c021 = duty_instruments
           $c023 = wave_instruments
           $c025 = noise_instruments
           $c027 = routines
           $c029 = waves
           $c02b = mute_channels
           $c02b = _end_song_descriptor_pointers
           $c02c = pattern1
           $c02e = pattern2
           $c030 = pattern3
           $c032 = pattern4
           $c034 = ticks_per_row
           $c035 = current_order
           $c036 = next_order
           $c037 = row_break
           $c038 = temp_note_value
           $c03a = row
           $c03b = tick
           $c03c = counter
           $c03d = current_wave
           $c03d = _hUGE_current_wave
           $c03e = channel_period1
           $c03e = channels
           $c03e = channel1
           $c040 = toneporta_target1
           $c042 = channel_note1
           $c043 = vibrato_tremolo_phase1
           $c044 = envelope1
           $c045 = highmask1
           $c046 = channel_period2
           $c046 = channel2
           $c048 = toneporta_target2
           $c04a = channel_note2
           $c04b = vibrato_tremolo_phase2
           $c04c = envelope2
           $c04d = highmask2
           $c04e = channel_period3
           $c04e = channel3
           $c050 = toneporta_target3
           $c052 = channel_note3
           $c053 = vibrato_tremolo_phase3
           $c054 = envelope3
           $c055 = highmask3
           $c056 = channel_period4
           $c056 = channel4
           $c058 = toneporta_target4
           $c05a = channel_note4
           $c05b = vibrato_tremolo_phase4
           $c05c = envelope4
           $c05d = highmask4
           $c05e = _end_vars
  SECTION: $c05e-$c07d ($0020 bytes) ["point balloon vars"]
           $c05e = pointBalloon
           $c05e = PointBalloonStart
           $c07e = PointBalloonEnd
  SECTION: $c07e-$c099 ($001c bytes) ["balloon cactus vars"]
           $c07e = balloonCactus
           $c07e = BalloonCactusStart
           $c09a = BalloonCactusEnd
  SECTION: $c09a-$c0aa ($0011 bytes) ["player vars"]
           $c09a = player_x
           $c09b = player_y
           $c09c = player_cactus_x
           $c09d = player_cactus_y
           $c09e = player_alive
           $c09f = player_popping
           $c0a0 = player_popping_frame
           $c0a1 = player_falling
           $c0a2 = player_fall_speed
           $c0a3 = player_falling_timer
           $c0a4 = player_pop_timer
           $c0a5 = player_delay_falling_timer
           $c0a6 = player_respawn_timer
           $c0a7 = player_speed
           $c0a8 = player_lives
           $c0a9 = player_invincible
           $c0aa = player_cant_move
  SECTION: $c0ab-$c0b9 ($000f bytes) ["enemy struct vars"]
           $c0ab = wEnemyOffset
           $c0ac = wEnemyActive
           $c0ad = wEnemyY
           $c0ae = wEnemyX
           $c0af = wEnemyOAM
           $c0b0 = wEnemyAlive
           $c0b1 = wEnemyPopping
           $c0b2 = wEnemyPoppingFrame
           $c0b3 = wEnemyPoppingTimer
           $c0b4 = wEnemyY2
           $c0b5 = wEnemyX2
           $c0b6 = wEnemyFalling
           $c0b7 = wEnemyFallingSpeed
           $c0b8 = wEnemyFallingTimer
           $c0b9 = wEnemyDelayFallingTimer
  SECTION: $c0ba-$c0c8 ($000f bytes) ["enemy 2 vars"]
           $c0ba = wEnemy2CactusOAM
           $c0bb = wEnemy2BalloonOAM
           $c0bc = enemy2_balloon_x
           $c0bd = enemy2_balloon_y
           $c0be = enemy2_cactus_x
           $c0bf = enemy2_cactus_y
           $c0c0 = enemy2_alive
           $c0c1 = enemy2_popping
           $c0c2 = enemy2_popping_frame
           $c0c3 = enemy2_falling
           $c0c4 = enemy2_fall_speed
           $c0c5 = enemy2_falling_timer
           $c0c6 = enemy2_pop_timer
           $c0c7 = enemy2_delay_falling_timer
           $c0c8 = enemy2_respawn_timer
  SECTION: $c0c9-$c0d1 ($0009 bytes) ["bird vars"]
           $c0c9 = wBirdOAM
           $c0ca = bird_x
           $c0cb = bird_y
           $c0cc = bird_flapping_frame
           $c0cd = bird_respawn_timer
           $c0ce = bird_falling
           $c0cf = bird_alive
           $c0d0 = bird_spawn_right
           $c0d1 = bird_speed
  SECTION: $c0d2-$c0da ($0009 bytes) ["bomb vars"]
           $c0d2 = wBombOAM
           $c0d3 = bomb_x
           $c0d4 = bomb_y
           $c0d5 = bomb_respawn_timer
           $c0d6 = bomb_alive
           $c0d7 = bomb_speed
           $c0d8 = bomb_popping
           $c0d9 = bomb_popping_frame
           $c0da = bomb_pop_timer
  SECTION: $c0db-$c0e2 ($0008 bytes) ["propellerCactus vars"]
           $c0db = wPropellerCactus
           $c0dc = wPropeller_x
           $c0dd = wPropeller_y
           $c0de = wPropeller_frame
           $c0df = wPropeller_respawn_timer
           $c0e0 = wPropeller_alive
           $c0e1 = wPropeller_spawn_right
           $c0e2 = wPropeller_speed
  SECTION: $c0e3-$c0e5 ($0003 bytes) ["level vars"]
           $c0e3 = wWorld
           $c0e4 = wLevel
           $c0e5 = wWave
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e7a bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1b28 bytes in 1 bank
    ROMX: $3573 bytes in 1 bank
    WRAM0: $0186 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
