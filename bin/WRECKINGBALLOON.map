ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $002b-$003f ($0015 bytes) ["scroll"]
           $002b = HorizontalScroll
           $0038 = HorizontalScroll.end
           $003a = ResetScroll
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d9 ($008f bytes) ["interrupts"]
           $004b = VBlankInterrupt
           $005b = LCDInterrupt
           $0065 = LCDInterruptEnd
           $0069 = SetBaseInterrupts
           $007b = ParkLCDInterrupt
           $0087 = ParkLCDInterrupt.clouds
           $0095 = ParkLCDInterrupt.ground
           $009a = ParkLCDInterrupt.end
           $009d = SetParkInterrupts
           $00aa = ClassicLCDInterrupt
           $00cc = SetClassicInterrupts
  SECTION: $00da-$00f7 ($001e bytes) ["OAM DMA routine"]
           $00da = CopyDMARoutine
           $00e1 = CopyDMARoutine.copy
           $00e8 = DMARoutine
           $00ec = DMARoutine.wait
           $00f0 = DMARoutineEnd
           $00f0 = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$1592 ($03e2 bytes) ["player"]
           $11b1 = UpdateBalloonPosition
           $11ca = UpdateCactusPosition
           $11e3 = UpdatePlayerPosition
           $11ea = InitializePlayer
           $1265 = ClearPlayerCactus
           $1272 = ClearPlayerBalloon
           $127f = SpawnPlayer
           $128f = MoveCactusDriftLeft
           $12a4 = MoveCactusDriftLeft.end
           $12a5 = MoveCactusDriftRight
           $12b9 = MoveCactusDriftRight.end
           $12ba = MoveCactusDriftCenterX
           $12cc = MoveCactusDriftCenterX.moveRight
           $12ce = MoveCactusDriftCenterX.moveLeft
           $12cf = MoveCactusDriftCenterX.end
           $12d0 = MoveCactusDriftUp
           $12e5 = MoveCactusDriftUp.end
           $12e6 = MoveCactusDriftCenterY
           $12fb = MoveCactusDriftCenterY.moveUp
           $12fd = MoveCactusDriftCenterY.moveDown
           $12fe = MoveCactusDriftCenterY.end
           $12ff = MoveRight
           $1313 = MoveLeft
           $132b = MoveDown
           $133f = MoveUp
           $1354 = SpeedUp
           $135a = ResetSpeedUp
           $1360 = PlayerControls
           $1378 = PlayerControls.endRight
           $138e = PlayerControls.endLeft
           $13a4 = PlayerControls.endUp
           $13ba = PlayerControls.endDown
           $13c9 = PlayerControls.endDriftToCenterX
           $13d8 = PlayerControls.endDriftToCenterY
           $13e3 = PlayerControls.endStart
           $13e9 = PlayerControls.endA
           $13f4 = PlayerControls.endB
           $13f7 = PlayerControls.end
           $13fd = MovePlayer
           $140c = MovePlayerAutoMiddle
           $1419 = MovePlayerAutoMiddle.moveRight
           $141d = MovePlayerAutoMiddle.moveLeft
           $141f = MovePlayerAutoMiddle.end
           $1423 = MovePlayerAutoFlyUp
           $1439 = FallCactusDown
           $144e = FallCactusDown.skipAcceleration
           $1457 = PopBalloonAnimation
           $1478 = PopBalloonAnimation.frame0
           $148e = PopBalloonAnimation.frame1
           $14a4 = PopBalloonAnimation.clear
           $14b3 = PopBalloonAnimation.end
           $14b4 = CactusFalling
           $14ce = CactusFalling.offScreen
           $14d6 = CactusFalling.end
           $14d7 = NoMoreLives
           $14de = PlayerUpdate
           $14f1 = PlayerUpdate.popped
           $1506 = PlayerUpdate.respawn
           $1509 = PlayerUpdate.respawnSkip
           $1513 = PlayerUpdate.notPopping
           $151d = PlayerUpdate.end
           $151e = DeathOfPlayer
           $1542 = InvincibleBlink
           $155b = InvincibleBlink.blinkNormal
           $1564 = InvincibleBlink.blinkFast
           $1569 = InvincibleBlink.blinkEnd
           $157e = InvincibleBlink.defaultPalette
           $1592 = InvincibleBlink.end
  SECTION: $1593-$1782 ($01f0 bytes) ["graphics"]
           $1593 = LoadClassicGameData
           $15fa = LoadMenuData
           $1625 = RefreshScore
           $1663 = RefreshLives
           $166e = RefreshLevel
           $1681 = RefreshWindow
           $1691 = RefreshWindow.end
           $1692 = ClearAllTiles
           $169b = ClearAllTiles.loop_u1
           $16aa = ClearAllTiles.loop_u2
           $16b9 = ClearAllTiles.loop_u3
           $16c4 = ClearMap
           $16cd = ClearMap.loop_u4
           $16d8 = ReplaceTilemapHorizontal
           $1701 = ReplaceTilemapHorizontal.handleZero
           $1703 = ReplaceTilemapHorizontal.handleZeroEnd
           $170f = ReplaceTilemapHorizontal.loop
           $172d = ReplaceTilemapHorizontal.end
           $1732 = MoveToNextTilemap
           $1745 = MoveToNextTilemap.canUpdateTilemap
           $1758 = MoveToNextTilemap.clouds1
           $176d = MoveToNextTilemap.clouds2
           $1780 = MoveToNextTilemap.end
  SECTION: $1783-$18dd ($015b bytes) ["level data"]
           $1783 = W1L1W1
           $1786 = W1L1W2
           $1786 = W1L1W1End
           $178c = W1L1W3
           $178c = W1L1W2End
           $1795 = W1L1W4
           $1795 = W1L1W3End
           $179b = W1L2W1
           $179b = W1L1W4End
           $17a4 = W1L2W2
           $17a4 = W1L2W1End
           $17aa = W1L2W3
           $17aa = W1L2W2End
           $17b0 = W1L2W4
           $17b0 = W1L2W3End
           $17bc = W1L2W4End
           $17bc = W2L1
           $17bf = W2L1End
           $17bf = InitializeLevelVars
           $17cb = LevelDataHandler
           $17cb = LevelDataHandler.loop
           $17e6 = LevelDataHandler.pointBalloon
           $17f5 = LevelDataHandler.balloonCactus
           $1804 = LevelDataHandler.bird
           $180d = LevelDataHandler.bomb
           $1816 = LevelDataHandler.porcupine
           $1825 = LevelDataHandler.empty
           $1827 = LevelDataHandler.loopCheck
           $182d = LevelDataHandler.end
           $182e = LevelDataManager
           $184b = LevelDataManager.w1
           $1859 = LevelDataManager.w1_l1
           $186f = LevelDataManager.w1_l1_w1
           $1877 = LevelDataManager.w1_l1_w2
           $187f = LevelDataManager.w1_l1_w3
           $1887 = LevelDataManager.w1_l1_w4
           $189a = LevelDataManager.w1_l2
           $18af = LevelDataManager.w1_l2_w1
           $18b7 = LevelDataManager.w1_l2_w2
           $18bf = LevelDataManager.w1_l2_w3
           $18c7 = LevelDataManager.w1_l2_w4
           $18cf = LevelDataManager.w2
           $18d1 = LevelDataManager.w3
           $18d3 = LevelDataManager.handle
           $18dd = LevelDataManager.end
  SECTION: $18de-$199e ($00c1 bytes) ["rom"]
           $18de = Start
           $1912 = StartClassic
           $1960 = PreGameLoop
           $1981 = GameLoopCountdown
           $1990 = GameLoop
  SECTION: $199f-$1a29 ($008b bytes) ["collision"]
           $199f = CollisionCheck
           $19ac = CollisionCheck.tryOtherY
           $19b4 = CollisionCheck.skip8x8Adjustment
           $19c0 = CollisionCheck.checkX
           $19cd = CollisionCheck.tryOtherX
           $19da = CollisionCheck.collision
           $19de = CollisionCheck.end
           $19e2 = CollisionWithPlayer
           $19ed = CollisionFallingEnemy
           $19ee = OffScreenXEnemies
           $19ff = OffScreenXEnemies.end
           $1a01 = OffScreenYEnemies
           $1a12 = OffScreenYEnemies.end
           $1a14 = OffScreenX
           $1a1c = OffScreenX.end
           $1a1e = OffScreenY
           $1a28 = OffScreenY.end
  SECTION: $1a2a-$1a9c ($0073 bytes) ["joypad"]
           $1a2a = ReadInput
           $1a5a = JOY_RIGHT
           $1a62 = JOY_LEFT
           $1a6a = JOY_UP
           $1a72 = JOY_DOWN
           $1a7a = JOY_A
           $1a82 = JOY_B
           $1a8a = JOY_SELECT
           $1a92 = JOY_START
           $1a9a = JOY_FALSE
    SLACK: $2570 bytes

ROMX bank #1:
  SECTION: $4000-$4b3d ($0b3e bytes) ["Song Data2"]
           $4000 = angryTheme
           $4015 = order_cnt
           $4016 = order1
           $4020 = order2
           $402a = order3
           $4034 = order4
           $403e = P0
           $40fe = P1
           $41be = P2
           $427e = P3
           $433e = P4
           $43fe = P5
           $44be = P6
           $457e = P7
           $463e = P8
           $46fe = P9
           $47be = P10
           $487e = P11
           $493e = duty_instruments
           $493e = itSquareinst1
           $4942 = itSquareinst2
           $4946 = itSquareinst3
           $494a = itSquareinst4
           $494e = itSquareinst5
           $4952 = itSquareinst6
           $4956 = itSquareinst7
           $495a = itSquareinst8
           $495e = itSquareinst9
           $4962 = itSquareinst10
           $4966 = itSquareinst11
           $496a = itSquareinst12
           $496e = itSquareinst13
           $4972 = itSquareinst14
           $4976 = itSquareinst15
           $497a = wave_instruments
           $497a = itWaveinst1
           $497e = itWaveinst2
           $4982 = itWaveinst3
           $4986 = itWaveinst4
           $498a = itWaveinst5
           $498e = itWaveinst6
           $4992 = itWaveinst7
           $4996 = itWaveinst8
           $499a = itWaveinst9
           $499e = itWaveinst10
           $49a2 = itWaveinst11
           $49a6 = itWaveinst12
           $49aa = itWaveinst13
           $49ae = itWaveinst14
           $49b2 = itWaveinst15
           $49b6 = noise_instruments
           $49b6 = itNoiseinst1
           $49be = itNoiseinst2
           $49c6 = itNoiseinst3
           $49ce = itNoiseinst4
           $49d6 = itNoiseinst5
           $49de = itNoiseinst6
           $49e6 = itNoiseinst7
           $49ee = itNoiseinst8
           $49f6 = itNoiseinst9
           $49fe = itNoiseinst10
           $4a06 = itNoiseinst11
           $4a0e = itNoiseinst12
           $4a16 = itNoiseinst13
           $4a1e = itNoiseinst14
           $4a26 = itNoiseinst15
           $4a2e = routines
           $4a2e = __end_hUGE_Routine_0
           $4a2e = __hUGE_Routine_0
           $4a2f = __end_hUGE_Routine_1
           $4a2f = __hUGE_Routine_1
           $4a30 = __end_hUGE_Routine_2
           $4a30 = __hUGE_Routine_2
           $4a31 = __end_hUGE_Routine_3
           $4a31 = __hUGE_Routine_3
           $4a32 = __end_hUGE_Routine_4
           $4a32 = __hUGE_Routine_4
           $4a33 = __end_hUGE_Routine_5
           $4a33 = __hUGE_Routine_5
           $4a34 = __end_hUGE_Routine_6
           $4a34 = __hUGE_Routine_6
           $4a35 = __end_hUGE_Routine_7
           $4a35 = __hUGE_Routine_7
           $4a36 = __hUGE_Routine_8
           $4a36 = __end_hUGE_Routine_8
           $4a37 = __hUGE_Routine_9
           $4a37 = __end_hUGE_Routine_9
           $4a38 = __hUGE_Routine_10
           $4a38 = __end_hUGE_Routine_10
           $4a39 = __hUGE_Routine_11
           $4a39 = __end_hUGE_Routine_11
           $4a3a = __hUGE_Routine_12
           $4a3a = __end_hUGE_Routine_12
           $4a3b = __hUGE_Routine_13
           $4a3b = __end_hUGE_Routine_13
           $4a3c = __end_hUGE_Routine_14
           $4a3c = __hUGE_Routine_14
           $4a3d = __end_hUGE_Routine_15
           $4a3d = __hUGE_Routine_15
           $4a3e = waves
           $4a3e = wave0
           $4a4e = wave1
           $4a5e = wave2
           $4a6e = wave3
           $4a7e = wave4
           $4a8e = wave5
           $4a9e = wave6
           $4aae = wave7
           $4abe = wave8
           $4ace = wave9
           $4ade = wave10
           $4aee = wave11
           $4afe = wave12
           $4b0e = wave13
           $4b1e = wave14
           $4b2e = wave15
  SECTION: $4b3e-$558d ($0a50 bytes) ["tilesets"]
           $4b3e = CactusTiles
           $4dfe = CactusTilesEnd
           $4dfe = PropellerCactusTiles
           $4ede = PropellerCactusTilesEnd
           $4ede = BackgroundTiles
           $531e = BackgroundTilesEnd
           $531e = ClassicParkTiles
           $535e = CountdownTiles
           $535e = ClassicParkTilesEnd
           $545e = CountdownTilesEnd
           $545e = WindowTiles
           $558e = WindowTilesEnd
  SECTION: $558e-$5b8d ($0600 bytes) ["menu title tiles"]
           $558e = MenuTitleTiles
           $5b8e = MenuTitleTilesEnd
  SECTION: $5b8e-$60ab ($051e bytes) ["Song Data"]
           $5b8e = menuTheme
           $5ba3 = order_cnt
           $5ba4 = order1
           $5ba6 = order2
           $5ba8 = order3
           $5baa = order4
           $5bac = P1
           $5c6c = P2
           $5d2c = P3
           $5dec = P6
           $5eac = duty_instruments
           $5eac = itSquareinst1
           $5eb0 = itSquareinst2
           $5eb4 = itSquareinst3
           $5eb8 = itSquareinst4
           $5ebc = itSquareinst5
           $5ec0 = itSquareinst6
           $5ec4 = itSquareinst7
           $5ec8 = itSquareinst8
           $5ecc = itSquareinst9
           $5ed0 = itSquareinst10
           $5ed4 = itSquareinst11
           $5ed8 = itSquareinst12
           $5edc = itSquareinst13
           $5ee0 = itSquareinst14
           $5ee4 = itSquareinst15
           $5ee8 = wave_instruments
           $5ee8 = itWaveinst1
           $5eec = itWaveinst2
           $5ef0 = itWaveinst3
           $5ef4 = itWaveinst4
           $5ef8 = itWaveinst5
           $5efc = itWaveinst6
           $5f00 = itWaveinst7
           $5f04 = itWaveinst8
           $5f08 = itWaveinst9
           $5f0c = itWaveinst10
           $5f10 = itWaveinst11
           $5f14 = itWaveinst12
           $5f18 = itWaveinst13
           $5f1c = itWaveinst14
           $5f20 = itWaveinst15
           $5f24 = noise_instruments
           $5f24 = itNoiseinst1
           $5f2c = itNoiseinst2
           $5f34 = itNoiseinst3
           $5f3c = itNoiseinst4
           $5f44 = itNoiseinst5
           $5f4c = itNoiseinst6
           $5f54 = itNoiseinst7
           $5f5c = itNoiseinst8
           $5f64 = itNoiseinst9
           $5f6c = itNoiseinst10
           $5f74 = itNoiseinst11
           $5f7c = itNoiseinst12
           $5f84 = itNoiseinst13
           $5f8c = itNoiseinst14
           $5f94 = itNoiseinst15
           $5f9c = routines
           $5f9c = __end_hUGE_Routine_0
           $5f9c = __hUGE_Routine_0
           $5f9d = __end_hUGE_Routine_1
           $5f9d = __hUGE_Routine_1
           $5f9e = __end_hUGE_Routine_2
           $5f9e = __hUGE_Routine_2
           $5f9f = __end_hUGE_Routine_3
           $5f9f = __hUGE_Routine_3
           $5fa0 = __end_hUGE_Routine_4
           $5fa0 = __hUGE_Routine_4
           $5fa1 = __end_hUGE_Routine_5
           $5fa1 = __hUGE_Routine_5
           $5fa2 = __end_hUGE_Routine_6
           $5fa2 = __hUGE_Routine_6
           $5fa3 = __end_hUGE_Routine_7
           $5fa3 = __hUGE_Routine_7
           $5fa4 = __hUGE_Routine_8
           $5fa4 = __end_hUGE_Routine_8
           $5fa5 = __hUGE_Routine_9
           $5fa5 = __end_hUGE_Routine_9
           $5fa6 = __hUGE_Routine_10
           $5fa6 = __end_hUGE_Routine_10
           $5fa7 = __hUGE_Routine_11
           $5fa7 = __end_hUGE_Routine_11
           $5fa8 = __hUGE_Routine_12
           $5fa8 = __end_hUGE_Routine_12
           $5fa9 = __hUGE_Routine_13
           $5fa9 = __end_hUGE_Routine_13
           $5faa = __end_hUGE_Routine_14
           $5faa = __hUGE_Routine_14
           $5fab = __end_hUGE_Routine_15
           $5fab = __hUGE_Routine_15
           $5fac = waves
           $5fac = wave0
           $5fbc = wave1
           $5fcc = wave2
           $5fdc = wave3
           $5fec = wave4
           $5ffc = wave5
           $600c = wave6
           $601c = wave7
           $602c = wave8
           $603c = wave9
           $604c = wave10
           $605c = wave11
           $606c = wave12
           $607c = wave13
           $608c = wave14
           $609c = wave15
  SECTION: $60ac-$6416 ($036b bytes) ["balloon cactus"]
           $60ac = InitializeBalloonCactus
           $60b5 = InitializeBalloonCactus.loop_u1
           $60c0 = GetStruct
           $60ff = SetStruct
           $613e = SpawnBalloonCactus
           $6151 = SpawnBalloonCactus.availableSpace
           $615a = SpawnBalloonCactus.availableOAMSpace
           $6188 = SpawnBalloonCactus.isLeftside
           $6188 = SpawnBalloonCactus.balloonLeft
           $61a0 = SpawnBalloonCactus.balloonRight
           $61b0 = SpawnBalloonCactus.cactusLeft
           $61be = SpawnBalloonCactus.cactusRight
           $61ce = SpawnBalloonCactus.setStruct
           $61d3 = SpawnBalloonCactus.end
           $61d8 = ClearCactus
           $61ed = ClearBalloon
           $6201 = Clear
           $620b = PopBalloonAnimation
           $621c = PopBalloonAnimation.canSwitchFrames
           $622a = PopBalloonAnimation.frame0
           $624c = PopBalloonAnimation.frame1
           $626e = PopBalloonAnimation.clear
           $628d = PopBalloonAnimation.endFrame
           $6291 = PopBalloonAnimation.end
           $6292 = CactusFalling
           $62a4 = CactusFalling.falling
           $62ba = CactusFalling.skipAcceleration
           $62c6 = CactusFalling.offScreen
           $62c9 = CactusFalling.end
           $62ca = UpdateBalloonPosition
           $62ca = UpdateBalloonPosition.balloonLeft
           $62df = UpdateBalloonPosition.balloonRight
           $62ea = UpdateCactusPosition
           $62ea = UpdateCactusPosition.cactusLeft
           $62ff = UpdateCactusPosition.cactusRight
           $630a = Move
           $6325 = Move.isLeftside
           $6333 = Move.updatePosition
           $633a = DeathOfBalloonCactus
           $6369 = CollisionBalloonCactus
           $6369 = CollisionBalloonCactus.checkHit
           $6380 = CollisionBalloonCactus.checkHitPlayer
           $639e = BalloonCactusUpdate
           $63a5 = BalloonCactusUpdate.loop
           $63c1 = BalloonCactusUpdate.isAlive
           $63de = BalloonCactusUpdate.offScreen
           $63e3 = BalloonCactusUpdate.popped
           $63ed = BalloonCactusUpdate.notPopping
           $63f7 = BalloonCactusUpdate.checkLoop
           $6412 = BalloonCactusUpdate.end
  SECTION: $6417-$6775 ($035f bytes) ["bird"]
           $6417 = InitializeBird
           $6420 = InitializeBird.loop_u1
           $642b = GetStruct
           $644e = SetStruct
           $6471 = SpawnBird
           $6485 = SpawnBird.availableSpace
           $6497 = SpawnBird.availableOAMSpace
           $64af = SpawnBird.isRightside
           $64ee = SpawnBird.isLeftside
           $6526 = SpawnBird.setStruct
           $652b = SpawnBird.end
           $652f = BirdAnimate
           $6538 = BirdAnimate.frame0
           $6561 = BirdAnimate.frame0FacingLeft
           $656c = BirdAnimate.frame0FacingEnd
           $6575 = BirdAnimate.frame1
           $659e = BirdAnimate.frame1FacingLeft
           $65a9 = BirdAnimate.frame1FacingEnd
           $65b9 = BirdAnimate.end
           $65bc = Clear
           $65d8 = UpdateBirdPosition
           $661a = Move
           $6623 = Move.moveLeft
           $662e = Move.moveRight
           $6635 = Move.moveDown
           $6643 = Move.moveEnd
           $6649 = Move.end
           $664c = BirdFall
           $6658 = BirdFall.checkOffscreenY
           $666a = BirdFall.end
           $666d = DeathOfBird
           $6685 = DeathOfBird.facingLeft
           $66ad = DeathOfBird.facingRight
           $66d5 = CollisionBird
           $66d8 = CollisionBird.checkHitPlayer
           $66f7 = CollisionBird.end
           $66fb = BirdUpdate
           $6706 = BirdUpdate.loop
           $6722 = BirdUpdate.isAlive
           $673c = BirdUpdate.offScreen
           $6741 = BirdUpdate.isDead
           $6752 = BirdUpdate.checkLoop
           $676d = BirdUpdate.end
  SECTION: $6776-$6a47 ($02d2 bytes) ["bomb"]
           $6776 = InitializeBomb
           $677f = InitializeBomb.loop_u1
           $678a = GetStruct
           $67ad = SetStruct
           $67d0 = SpawnBomb
           $67e3 = SpawnBomb.availableSpace
           $67f4 = SpawnBomb.availableOAMSpace
           $6808 = SpawnBomb.balloonLeft
           $6821 = SpawnBomb.balloonRight
           $6832 = SpawnBomb.bombSpace
           $683d = SpawnBomb.setStruct
           $6842 = SpawnBomb.end
           $6846 = Clear
           $6862 = UpdateBombPosition
           $68a4 = Move
           $68b0 = DeathOfBomb
           $68ba = CollisionBomb
           $68dd = ExplosionAnimation
           $6908 = ExplosionAnimation.frame0
           $692e = ExplosionAnimation.frame1
           $6976 = ExplosionAnimation.frame2
           $69a3 = ExplosionAnimation.frame3
           $69d0 = ExplosionAnimation.clear
           $69d3 = ExplosionAnimation.end
           $69d4 = BombUpdate
           $69df = BombUpdate.loop
           $69fb = BombUpdate.isAlive
           $6a15 = BombUpdate.offScreen
           $6a1a = BombUpdate.popped
           $6a24 = BombUpdate.checkLoop
           $6a3f = BombUpdate.end
  SECTION: $6a48-$6cd2 ($028b bytes) ["classic"]
           $6a48 = InitializeClassicVars
           $6a4d = ParkFadeOut
           $6a60 = ParkFadeOut.startFadeOut
           $6a66 = ParkFadeOut.fadeOut
           $6a71 = ParkFadeOut.hasFadedOut
           $6a75 = UpdatePark
           $6a7e = UpdatePark.moveUp
           $6a87 = UpdatePark.flyUpNormal
           $6a8e = UpdatePark.flyUpFast
           $6a91 = UpdatePark.end
           $6a92 = TryToUnpause
           $6aa9 = TryToUnpause.end
           $6aaa = ParkEnteredClassic
           $6ab2 = StartedClassic
           $6aba = SpawnHandWave
           $6add = SpawnHandWave.end
           $6ade = HandWaveAnimation
           $6ae5 = HandWaveAnimation.frame0
           $6b00 = HandWaveAnimation.frame1
           $6b1a = HandWaveAnimation.end
           $6b1b = SpawnCountdown
           $6b4a = SpawnCountdown.end
           $6b4b = CountdownAnimation
           $6b52 = CountdownAnimation.countdown
           $6b5c = CountdownAnimation.balloonPop
           $6b64 = CountdownAnimation.frames
           $6b8b = CountdownAnimation.frame0
           $6bae = CountdownAnimation.frame1
           $6bd1 = CountdownAnimation.frame2
           $6bf4 = CountdownAnimation.frame3
           $6c17 = CountdownAnimation.frame4
           $6c3a = CountdownAnimation.frame5
           $6c5a = CountdownAnimation.remove
           $6c73 = CountdownAnimation.end
           $6c74 = IncrementScrollOffset
           $6c82 = IncrementScrollOffset.end
           $6c83 = SetClassicMapStartPoint
           $6c88 = UpdateSprites
           $6c9b = UpdateClassicCountdown
           $6cb3 = UpdateClassic
           $6cd2 = UpdateClassic.end
  SECTION: $6cd3-$6ed1 ($01ff bytes) ["point balloon"]
           $6cd3 = InitializePointBalloon
           $6cdc = InitializePointBalloon.loop_u1
           $6ce7 = GetStruct
           $6d0a = SetStruct
           $6d2d = SpawnPointBalloon
           $6d3f = SpawnPointBalloon.availableSpace
           $6d48 = SpawnPointBalloon.availableOAMSpace
           $6d5e = SpawnPointBalloon.balloonLeft
           $6d76 = SpawnPointBalloon.balloonRight
           $6d86 = SpawnPointBalloon.setStruct
           $6d8b = SpawnPointBalloon.end
           $6d90 = PopBalloonAnimation
           $6da1 = PopBalloonAnimation.canSwitchFrames
           $6dad = PopBalloonAnimation.frame0
           $6dcf = PopBalloonAnimation.frame1
           $6df1 = PopBalloonAnimation.clear
           $6df5 = PopBalloonAnimation.endFrame
           $6df9 = PopBalloonAnimation.end
           $6dfa = Clear
           $6e12 = Move
           $6e19 = Move.balloonLeft
           $6e2e = Move.balloonRight
           $6e39 = DeathOfPointBalloon
           $6e4b = CollisionPointBalloon
           $6e63 = PointBalloonUpdate
           $6e6a = PointBalloonUpdate.loop
           $6e86 = PointBalloonUpdate.isAlive
           $6ea3 = PointBalloonUpdate.offScreen
           $6ea8 = PointBalloonUpdate.popped
           $6eb2 = PointBalloonUpdate.checkLoop
           $6ecd = PointBalloonUpdate.end
  SECTION: $6ed2-$7024 ($0153 bytes) ["porcupine"]
           $6ed2 = InitializePorcupine
           $6edb = InitializePorcupine.loop_u1
           $6ee6 = GetStruct
           $6efe = SetStruct
           $6f15 = SpawnPorcupine
           $6f28 = SpawnPorcupine.availableSpace
           $6f32 = SpawnPorcupine.availableOAMSpace
           $6f48 = SpawnPorcupine.topLeft
           $6f60 = SpawnPorcupine.topMiddle
           $6f70 = SpawnPorcupine.topMiddle2
           $6f80 = SpawnPorcupine.topRight
           $6f90 = SpawnPorcupine.bottomLeft
           $6fa0 = SpawnPorcupine.bottomMiddle
           $6fb2 = SpawnPorcupine.bottomMiddle2
           $6fc4 = SpawnPorcupine.bottomRight
           $6fd6 = SpawnPorcupine.setStruct
           $6fdb = SpawnPorcupine.end
           $6fe0 = PorcupineUpdate
           $6fe7 = PorcupineUpdate.loop
           $7003 = PorcupineUpdate.offScreen
           $7003 = PorcupineUpdate.isAlive
           $7005 = PorcupineUpdate.checkLoop
           $7005 = PorcupineUpdate.isDead
           $7020 = PorcupineUpdate.end
  SECTION: $7025-$70d3 ($00af bytes) ["menu"]
           $7025 = SpawnMenuCursor
           $7044 = BlinkMenuCursor
           $704c = BlinkMenuCursor.blink
           $705c = BlinkMenuCursor.show
           $7060 = BlinkMenuCursor.empty
           $7064 = MoveCursor
           $7074 = MoveCursor.classicMode
           $7083 = MoveCursor.storyMode
           $7092 = SelectMode
           $7099 = SelectMode.classicMode
           $70a2 = SelectMode.storyMode
           $70a3 = MenuInput
           $70ad = MenuInput.selectMode
           $70ad = MenuInput.moveSelected
           $70b6 = MenuInput.end
           $70b7 = UpdateMenu
           $70c5 = UpdateMenu.fadeOut
           $70d0 = UpdateMenu.hasFadedOut
  SECTION: $70d4-$717d ($00aa bytes) ["palettes"]
           $70d4 = SetupPalettes
           $70e5 = SetupParkPalettes
           $70f4 = FadeOutPalettes
           $70fc = FadeOutPalettes.fadeOut
           $7110 = FadeOutPalettes.fade1
           $7114 = FadeOutPalettes.fade2
           $7118 = FadeOutPalettes.fade3
           $711c = FadeOutPalettes.fade4
           $711e = FadeOutPalettes.end
           $712e = FadeInPalettes
           $7136 = FadeInPalettes.fadeIn
           $714a = FadeInPalettes.fade1
           $714e = FadeInPalettes.fade2
           $7152 = FadeInPalettes.fade3
           $7156 = FadeInPalettes.fade4
           $7158 = FadeInPalettes.end
           $7168 = HasFadedOut
           $716e = HasFadedOut.false
           $7170 = HasFadedOut.true
           $7173 = HasFadedIn
           $7179 = HasFadedIn.false
           $717b = HasFadedIn.true
  SECTION: $717e-$721b ($009e bytes) ["sound"]
           $717e = AUDIO_OFF
           $7182 = AUDIO_ON
           $7187 = PopSound
           $719a = ExplosionSound
           $71ad = FallingSound
           $71c2 = StopFallingSound
           $71c7 = CollectSound
           $71dc = WrongAnswerSound
           $71f3 = PercussionSound
           $7200 = BassSound
           $7211 = ClearSound
  SECTION: $721c-$72a4 ($0089 bytes) ["memory"]
           $721c = MEMCPY.memcpy_loop
           $721c = MEMCPY
           $7220 = MEMCPY.memcpy_check_limit
           $7226 = ClearOAM
           $722d = ClearOAM.loop_u1
           $7236 = ClearRAM
           $723d = ClearRAM.loop_u2
           $7246 = RequestOAMSpace
           $724f = RequestOAMSpace.loop
           $7266 = RequestOAMSpace.availableSpace
           $726b = RequestOAMSpace.sufficientSpace
           $727b = RequestOAMSpace.isNotZero4
           $727c = RequestOAMSpace.isNotZero3
           $727d = RequestOAMSpace.isNotZero2
           $727e = RequestOAMSpace.isNotZero1
           $7280 = RequestOAMSpace.notEnoughSprites
           $7288 = RequestOAMSpace.end
           $728b = RequestRAMSpace
           $728b = RequestRAMSpace.loop
           $7290 = RequestRAMSpace.availableSpace
           $7294 = RequestRAMSpace.checkLoop
           $72a3 = RequestRAMSpace.noFreeSpace
           $72a4 = RequestRAMSpace.end
  SECTION: $72a5-$72f4 ($0050 bytes) ["menu tiles"]
           $72a5 = MenuTiles
           $72f5 = MenuTilesEnd
  SECTION: $72f5-$733d ($0049 bytes) ["math"]
           $72f5 = MODULO
           $72f7 = MODULO.loop
           $72fc = RANDOM
           $7305 = DIVISION
           $730b = DIVISION.loop
           $7310 = DIVISION.end
           $7313 = ToBCD
           $732a = ToBCD.end
           $732d = MULTIPLY
           $7330 = MULTIPLY.loop
           $733b = MULTIPLY.end
  SECTION: $733e-$736f ($0032 bytes) ["lcd"]
           $733e = LCD_OFF
           $7345 = LCD_ON
           $734c = LCD_ON_BG_ONLY
           $7353 = WaitVBlank
           $735a = WaitVBlank.loop
           $7365 = SetupWindow
  SECTION: $7370-$739c ($002d bytes) ["general initialization"]
           $7370 = InitializeGameVars
  SECTION: $739d-$73c1 ($0025 bytes) ["score"]
           $739d = InitializeScore
           $73a5 = AddPoints
           $73b5 = AddPoints.carry
           $73bf = AddPoints.end
  SECTION: $73c2-$73c9 ($0008 bytes) ["timer"]
           $73c2 = UpdateGlobalTimer
    SLACK: $0c36 bytes

WRAM0 bank #0:
  SECTION: $c000-$c017 ($0018 bytes) ["general RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = selected_mode
           $c009 = hand_waving_frame
           $c00a = countdown_frame
           $c00b = cloud_scroll_offset
           $c00c = classic_mode_stage
           $c00d = fade_frame
           $c00e = wOAMGeneral1
           $c00f = wOAMGeneral2
           $c010 = wLCDInterrupt
           $c012 = wUpdateTilemapAddress
           $c014 = wUpdateTilemapOffset
           $c015 = wUpdateTilemapIndex
           $c016 = wHasUpdatedNextTilemapAddress
           $c017 = wLastUpdatedSCX
  SECTION: $c018-$c05d ($0046 bytes) ["Playback variables"]
           $c018 = _start_vars
           $c018 = order_cnt
           $c019 = order1
           $c019 = _start_song_descriptor_pointers
           $c01b = order2
           $c01d = order3
           $c01f = order4
           $c021 = duty_instruments
           $c023 = wave_instruments
           $c025 = noise_instruments
           $c027 = routines
           $c029 = waves
           $c02b = mute_channels
           $c02b = _end_song_descriptor_pointers
           $c02c = pattern1
           $c02e = pattern2
           $c030 = pattern3
           $c032 = pattern4
           $c034 = ticks_per_row
           $c035 = current_order
           $c036 = next_order
           $c037 = row_break
           $c038 = temp_note_value
           $c03a = row
           $c03b = tick
           $c03c = counter
           $c03d = current_wave
           $c03d = _hUGE_current_wave
           $c03e = channel_period1
           $c03e = channels
           $c03e = channel1
           $c040 = toneporta_target1
           $c042 = channel_note1
           $c043 = vibrato_tremolo_phase1
           $c044 = envelope1
           $c045 = highmask1
           $c046 = channel_period2
           $c046 = channel2
           $c048 = toneporta_target2
           $c04a = channel_note2
           $c04b = vibrato_tremolo_phase2
           $c04c = envelope2
           $c04d = highmask2
           $c04e = channel_period3
           $c04e = channel3
           $c050 = toneporta_target3
           $c052 = channel_note3
           $c053 = vibrato_tremolo_phase3
           $c054 = envelope3
           $c055 = highmask3
           $c056 = channel_period4
           $c056 = channel4
           $c058 = toneporta_target4
           $c05a = channel_note4
           $c05b = vibrato_tremolo_phase4
           $c05c = envelope4
           $c05d = highmask4
           $c05e = _end_vars
  SECTION: $c05e-$c07d ($0020 bytes) ["point balloon vars"]
           $c05e = pointBalloon
  SECTION: $c07e-$c09b ($001e bytes) ["balloon cactus vars"]
           $c07e = balloonCactus
  SECTION: $c09c-$c0ab ($0010 bytes) ["bird vars"]
           $c09c = bird
  SECTION: $c0ac-$c0bb ($0010 bytes) ["enemy struct vars"]
           $c0ac = wEnemyOffset
           $c0ad = wEnemyY
           $c0ae = wEnemyX
           $c0af = wEnemyActive
           $c0b0 = wEnemyOAM
           $c0b1 = wEnemyAlive
           $c0b2 = wEnemyPopping
           $c0b3 = wEnemyPoppingFrame
           $c0b4 = wEnemyPoppingTimer
           $c0b5 = wEnemyRightside
           $c0b6 = wEnemyY2
           $c0b7 = wEnemyX2
           $c0b8 = wEnemyFalling
           $c0b9 = wEnemyFallingSpeed
           $c0ba = wEnemyFallingTimer
           $c0bb = wEnemyDelayFallingTimer
  SECTION: $c0bc-$c0cb ($0010 bytes) ["bomb vars"]
           $c0bc = bomb
  SECTION: $c0cc-$c0db ($0010 bytes) ["player vars"]
           $c0cc = wPlayerY
           $c0cd = wPlayerX
           $c0ce = wPlayerY2
           $c0cf = wPlayerX2
           $c0d0 = wPlayerAlive
           $c0d1 = wPlayerPopping
           $c0d2 = wPlayerPoppingFrame
           $c0d3 = wPlayerPoppingTimer
           $c0d4 = wPlayerFalling
           $c0d5 = wPlayerFallSpeed
           $c0d6 = wPlayerFallingTimer
           $c0d7 = wPlayerDelayFallingTimer
           $c0d8 = wPlayerRespawnTimer
           $c0d9 = wPlayerSpeed
           $c0da = wPlayerLives
           $c0db = wPlayerInvincible
  SECTION: $c0dc-$c0e0 ($0005 bytes) ["porcupine vars"]
           $c0dc = porcupine
  SECTION: $c0e1-$c0e3 ($0003 bytes) ["level vars"]
           $c0e1 = wWorld
           $c0e2 = wLevel
           $c0e3 = wWave
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e7c bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1a90 bytes in 1 bank
    ROMX: $33ca bytes in 1 bank
    WRAM0: $0184 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
