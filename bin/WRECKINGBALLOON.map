ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0c6f ($0b20 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = StageClearMap
           $0420 = StageClearMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = Level3Map
           $0820 = Level2MapEnd
           $0aa0 = MenuMap
           $0aa0 = Level3MapEnd
           $0c08 = WindowMap
           $0c08 = MenuMapEnd
           $0c30 = WindowMapEnd
           $0c30 = CloudsMap
           $0c70 = CloudsMapEnd
  SECTION: $0c70-$143f ($07d0 bytes) ["tilesets"]
           $0c70 = PlayerSpriteTiles
           $0d70 = EnemyTiles
           $0d70 = PlayerSpriteTilesEnd
           $0f30 = Level1Tiles
           $0f30 = EnemyTilesEnd
           $13c0 = CloudsTiles
           $13c0 = Level1TilesEnd
           $1440 = CloudsTilesEnd
  SECTION: $1440-$1be0 ($07a1 bytes) ["Sound Driver"]
           $1440 = _hUGE_init_banked
           $1444 = _hUGE_init
           $1446 = continue_init
           $144f = _hUGE_mute_channel_banked
           $1453 = _hUGE_mute_channel
           $1455 = continue_mute
           $1460 = hUGE_mute_channel
           $1466 = hUGE_mute_channel.enable_loop
           $146d = hUGE_mute_channel.enable_cut
           $147a = _hUGE_set_position_banked
           $147e = _hUGE_set_position
           $1480 = continue_set_position
           $1487 = hUGE_init
           $148e = hUGE_init.fill_loop
           $14b2 = hUGE_init.copy_song_descriptor_loop
           $14bc = _refresh_patterns
           $14d6 = _refresh_patterns.load_pattern
           $14e6 = _load_note_data
           $14f8 = _lookup_note
           $1502 = _convert_note
           $1510 = _convert_ch4_note
           $1527 = _update_channel
           $1531 = _update_channel1
           $153f = _update_channel2
           $154d = _update_channel3
           $155b = _update_channel4
           $156b = _playnote1
           $1586 = _playnote2
           $15a1 = _playnote3
           $15c2 = _playnote4
           $15d6 = _doeffect
           $15eb = _doeffect.jump
           $161b = setup_channel_pointer
           $1629 = fx_set_master_volume
           $162e = fx_call_routine
           $1650 = fx_call_routine.call_hl
           $1651 = fx_set_pan
           $1656 = fx_set_duty
           $165b = fx_set_duty.chan2
           $1665 = fx_set_duty.chan1
           $166f = fx_vol_slide
           $1676 = fx_vol_slide.loop
           $167b = fx_vol_slide.cont
           $16ad = fx_vol_slide.cont1
           $16b4 = fx_vol_slide.cont2
           $16c8 = _envelope_registers
           $16d0 = fx_note_delay
           $16e9 = fx_note_delay.play_note
           $1707 = _play_note_routines
           $1713 = fx_set_speed
           $1719 = hUGE_set_position
           $1719 = fx_pos_jump
           $1723 = fx_pattern_break
           $1728 = fx_note_cut
           $1730 = fx_note_cut.loop
           $1735 = fx_note_cut.cont
           $173a = note_cut
           $1751 = fx_set_volume
           $1752 = set_channel_volume
           $175d = set_chn_3_vol
           $176f = set_chn_3_vol.three
           $1773 = set_chn_3_vol.two
           $1777 = set_chn_3_vol.one
           $177b = set_chn_3_vol.zero
           $177c = set_chn_3_vol.done
           $177f = set_chn_2_vol
           $178f = set_chn_1_vol
           $179f = set_chn_4_vol
           $17ab = fx_vibrato
           $17be = fx_vibrato.restore
           $17c3 = fx_vibrato.go_up
           $17ce = fx_vibrato.finish_vibrato
           $17d4 = fx_arpeggio
           $17e0 = fx_arpeggio.greater_than_two
           $17e2 = fx_arpeggio.test_greater_than_two
           $17f1 = fx_arpeggio.arp_options
           $17f7 = fx_arpeggio.reset_arp
           $17fa = fx_arpeggio.set_arp2
           $17ff = fx_arpeggio.set_arp1
           $1800 = fx_arpeggio.finish_arp
           $1803 = fx_arpeggio.finish_skip_add
           $180c = fx_porta_up
           $181b = fx_porta_up.finish
           $1822 = fx_porta_down
           $1834 = fx_toneporta
           $1846 = fx_toneporta.return_skip
           $1850 = fx_toneporta.do_toneporta
           $1865 = fx_toneporta.high_byte_same
           $186b = fx_toneporta.add
           $187d = fx_toneporta.subtract
           $1893 = fx_toneporta.set_exact
           $1895 = fx_toneporta.done
           $18a8 = _setup_instrument_pointer_ch4
           $18b3 = _setup_instrument_pointer
           $18ba = _setup_instrument_pointer.finish
           $18c3 = _hUGE_dosound_banked
           $18c3 = _hUGE_dosound
           $1902 = _hUGE_dosound.write_mask1
           $1905 = _hUGE_dosound.do_setvol1
           $1918 = _hUGE_dosound.after_note1
           $194d = _hUGE_dosound.write_mask2
           $1950 = _hUGE_dosound.do_setvol2
           $1963 = _hUGE_dosound.after_note2
           $19ea = _hUGE_dosound.no_wave_copy
           $19eb = _hUGE_dosound.write_mask3
           $19ee = _hUGE_dosound.do_setvol3
           $19f9 = _hUGE_dosound.after_note3
           $1a4a = _hUGE_dosound.write_mask4
           $1a4d = _hUGE_dosound.do_setvol4
           $1a58 = _hUGE_dosound.after_note4
           $1a5b = _hUGE_dosound.process_effects
           $1a77 = _hUGE_dosound.after_effect1
           $1a93 = _hUGE_dosound.after_effect2
           $1aaf = _hUGE_dosound.after_effect3
           $1afa = _hUGE_dosound.done_macro
           $1b03 = process_tick
           $1b03 = _hUGE_dosound.after_effect4
           $1b15 = _newrow
           $1b2d = _newrow.no_break
           $1b38 = _neworder
           $1b45 = _update_current_order
           $1b4c = _noreset
           $1b51 = note_table
  SECTION: $1be1-$2076 ($0496 bytes) ["player"]
           $1be1 = InitializePlayer
           $1c20 = UpdateBalloonPosition
           $1c20 = UpdateBalloonPosition.balloonLeft
           $1c2d = UpdateBalloonPosition.balloonRight
           $1c38 = UpdateCactusPosition
           $1c38 = UpdateCactusPosition.cactusLeft
           $1c45 = UpdateCactusPosition.cactusRight
           $1c50 = SetPlayerPosition
           $1c67 = SetPlayerPositionOpeningDefault
           $1c6f = SetPlayerPositionOpeningCutscene
           $1c77 = SpawnPlayer
           $1c77 = SpawnPlayer.cactusLeft
           $1c87 = SpawnPlayer.cactusRight
           $1c97 = SpawnPlayer.balloonLeft
           $1ca7 = SpawnPlayer.balloonRight
           $1cb8 = ClearPlayerCactus
           $1cc5 = ClearPlayerBalloon
           $1cd2 = RespawnPlayer
           $1ce5 = MoveRight
           $1cf5 = MoveRight.canCactusDriftLeft
           $1d07 = MoveRight.cactusDriftLeft
           $1d09 = MoveLeft
           $1d1d = MoveLeft.canCactusDriftRight
           $1d2e = MoveLeft.cactusDriftRight
           $1d30 = MoveDown
           $1d40 = MoveDown.canCactusDriftUp
           $1d52 = MoveDown.cactusDriftUp
           $1d54 = ChargeBoost
           $1d5a = ChargeBoost.isCharging
           $1d61 = ChargeBoost.resetBoost
           $1d67 = ChargeAttack
           $1d6d = ChargeAttack.isCharging
           $1d72 = SpawnBullet
           $1d8c = SpawnBullet.spawnFromLeft
           $1d94 = SpawnBullet.leftOAM
           $1da2 = SpawnBullet.spawnFromRight
           $1daa = SpawnBullet.rightOAM
           $1db8 = ClearBullet
           $1dc4 = BulletUpdate
           $1dca = BulletUpdate.isAlive
           $1dd5 = BulletUpdate.offScreen
           $1dd9 = BulletUpdate.onScreen
           $1ddf = BulletUpdate.move
           $1de9 = BulletUpdate.moveLeft
           $1ded = BulletUpdate.moveRight
           $1def = BulletUpdate.endMove
           $1df7 = PlayerControls
           $1df7 = PlayerControls.right
           $1e0f = PlayerControls.moveRight
           $1e17 = PlayerControls.endRight
           $1e17 = PlayerControls.left
           $1e2f = PlayerControls.moveLeft
           $1e36 = PlayerControls.endLeft
           $1e36 = PlayerControls.up
           $1e4e = PlayerControls.moveUp
           $1e62 = PlayerControls.endUp
           $1e62 = PlayerControls.down
           $1e7a = PlayerControls.moveDown
           $1e7d = PlayerControls.endDown
           $1e7d = PlayerControls.canCactusDriftCenterX
           $1e9b = PlayerControls.driftCenterXRight
           $1e9e = PlayerControls.driftCenterXLeft
           $1e9f = PlayerControls.endDriftToCenterX
           $1e9f = PlayerControls.canCactusDriftCenterY
           $1ec0 = PlayerControls.driftCenterYUp
           $1ec3 = PlayerControls.driftCenterYDown
           $1ec4 = PlayerControls.endDriftToCenterY
           $1ec4 = PlayerControls.start
           $1ecf = PlayerControls.endStart
           $1ecf = PlayerControls.AButton
           $1edc = PlayerControls.activateAttack
           $1ee4 = PlayerControls.endA
           $1ee4 = PlayerControls.BButton
           $1ef1 = PlayerControls.activateBoost
           $1efb = PlayerControls.endB
           $1efc = MovePlayer
           $1f06 = MovePlayerWithInput
           $1f17 = FallCactusDown
           $1f2c = FallCactusDown.skipAcceleration
           $1f35 = PopBalloonAnimation
           $1f46 = PopBalloonAnimation.canSwitchFrames
           $1f52 = PopBalloonAnimation.frame0
           $1f64 = PopBalloonAnimation.frame1
           $1f76 = PopBalloonAnimation.clear
           $1f86 = PopBalloonAnimation.endFrame
           $1f8e = CactusFalling
           $1fa8 = CactusFalling.offScreen
           $1fb0 = CactusFalling.end
           $1fb1 = NoMoreLives
           $1fbb = PlayerUpdate
           $1fc2 = PlayerUpdate.isAlive
           $1fde = PlayerUpdate.popped
           $1fe9 = PlayerUpdate.popping
           $1ff1 = PlayerUpdate.falling
           $1ffa = PlayerUpdate.respawning
           $2001 = PlayerUpdate.noMoreLives
           $2005 = PlayerUpdate.respawn
           $2009 = DeathOfPlayer
           $202d = InvincibleBlink
           $2033 = InvincibleBlink.isStillInvincible
           $2042 = InvincibleBlink.blinkNormal
           $2049 = InvincibleBlink.blinkFast
           $204d = InvincibleBlink.blinkEnd
           $2062 = InvincibleBlink.defaultPalette
  SECTION: $2077-$234c ($02d6 bytes) ["level data"]
           $2077 = Level1
           $20d4 = Level2
           $218b = Level3
           $227c = InitializeNewLevel
           $2294 = InitializeNewLevel.level1
           $2299 = InitializeNewLevel.level2
           $229e = InitializeNewLevel.level3
           $22a3 = InitializeNewLevel.level4
           $22a4 = InitializeNewLevel.setLevelDataAddress
           $22ac = InitializeLevelVars
           $22b5 = LevelDataHandler
           $22bd = LevelDataHandler.notEmpty
           $22dc = LevelDataHandler.pointBalloon
           $22e0 = LevelDataHandler.balloonCactus
           $22e4 = LevelDataHandler.bird
           $22e8 = LevelDataHandler.bomb
           $22ec = LevelDataHandler.porcupine
           $22f0 = LevelDataManager
           $2314 = LevelDataManager.spawn
           $2321 = LevelDataManager.wait
           $232e = LevelDataManager.waitEnd
           $233c = LevelDataManager.end
  SECTION: $234d-$2571 ($0225 bytes) ["game"]
           $234d = InitializeGame
           $2355 = LoadLevel1Graphics
           $2378 = LoadLevel2Graphics
           $239a = LoadLevel3Graphics
           $23bb = TryToUnpause
           $23d2 = TryToUnpause.end
           $23d3 = SpawnCountdown
           $23fe = SpawnCountdown.end
           $23ff = Countdown
           $2406 = Countdown.hasCountedDown
           $2409 = Countdown.countdown
           $241a = Countdown.balloonPop
           $2422 = Countdown.frames
           $244b = Countdown.frame0
           $246d = Countdown.frame1
           $248f = Countdown.frame2
           $24b0 = Countdown.frame3
           $24d1 = Countdown.frame4
           $24f2 = Countdown.frame5
           $2510 = Countdown.remove
           $2525 = Countdown.endFrame
           $252c = Countdown.end
           $252e = UpdateSprites
           $2544 = UpdateGameCountdown
           $2559 = UpdateGame
  SECTION: $2572-$26ec ($017b bytes) ["interrupts"]
           $2572 = InitializeInterrupts
           $2588 = VBlankInterrupt
           $2598 = LCDInterrupt
           $25a2 = LCDInterruptEnd
           $25a6 = MenuLCDInterrupt
           $25b6 = MenuLCDInterrupt.reset
           $25bf = MenuLCDInterrupt.far
           $25ca = MenuLCDInterrupt.close
           $25d3 = MenuLCDInterrupt.end
           $25d6 = SetMenuInterrupts
           $25e4 = OpeningCutsceneLCDInterrupt
           $25f0 = OpeningCutsceneLCDInterrupt.hide
           $25fb = OpeningCutsceneLCDInterrupt.show
           $2604 = OpeningCutsceneLCDInterrupt.end
           $2607 = SetOpeningCutsceneInterrupts
           $2615 = Level1LCDInterrupt
           $2629 = Level1LCDInterrupt.reset
           $2637 = Level1LCDInterrupt.far
           $2642 = Level1LCDInterrupt.middle
           $264d = Level1LCDInterrupt.close2
           $2656 = Level1LCDInterrupt.end
           $2659 = SetLevel1Interrupts
           $2667 = Level2LCDInterrupt
           $267b = Level2LCDInterrupt.reset
           $2689 = Level2LCDInterrupt.far
           $2694 = Level2LCDInterrupt.middle
           $269f = Level2LCDInterrupt.close
           $26a8 = Level2LCDInterrupt.end
           $26ab = SetLevel2Interrupts
           $26b9 = Level3LCDInterrupt
           $26c5 = Level3LCDInterrupt.reset
           $26d3 = Level3LCDInterrupt.top
           $26dc = Level3LCDInterrupt.end
           $26df = SetLevel3Interrupts
  SECTION: $26ed-$2852 ($0166 bytes) ["rom"]
           $26ed = Start
           $272a = MenuLoopOpening
           $272a = StartMenu
           $2742 = MenuLoop
           $2742 = StartGame
           $277e = OpeningCutsceneLoop
           $278d = SetupNextLevel
           $27b1 = SetupNextLevel.level1
           $27b9 = SetupNextLevel.level2
           $27c1 = SetupNextLevel.level3
           $27c9 = SetupNextLevel.endLevelSetup
           $27c9 = SetupNextLevel.level6
           $27c9 = SetupNextLevel.level5
           $27c9 = SetupNextLevel.level4
           $27f9 = GameCountdownLoop
           $2808 = GameLoop
           $2817 = StageClear
           $2844 = StageClearLoop
  SECTION: $2853-$2973 ($0121 bytes) ["window"]
           $2853 = RefreshScore
           $288a = RefreshTotal
           $28c1 = RefreshLives
           $28ca = RefreshBoostBar
           $28d4 = RefreshBoostBar.isCharging
           $28e0 = RefreshBoostBar.isEmpty
           $28e6 = RefreshBoostBar.is25Percent
           $28ed = RefreshBoostBar.is50Percent
           $28f4 = RefreshBoostBar.is75Percent
           $28fb = RefreshBoostBar.isReady
           $2901 = RefreshAttackBar
           $290b = RefreshAttackBar.isCharging
           $2917 = RefreshAttackBar.isEmpty
           $291d = RefreshAttackBar.is25Percent
           $2924 = RefreshAttackBar.is50Percent
           $292b = RefreshAttackBar.is75Percent
           $2932 = RefreshAttackBar.isReady
           $2938 = LoadWindow.loadTiles
           $2938 = LoadWindow
           $2944 = LoadWindow.drawMap
           $295e = RefreshWindow
  SECTION: $2974-$29f5 ($0082 bytes) ["collision"]
           $2974 = CollisionCheck
           $297f = CollisionCheck.tryOtherY
           $298b = CollisionCheck.checkX
           $2998 = CollisionCheck.tryOtherX
           $29a5 = CollisionCheck.collision
           $29a8 = CollisionCheck.noCollision
           $29aa = CollisionWithPlayer
           $29ba = OffScreenXEnemies
           $29cb = OffScreenXEnemies.end
           $29cd = OffScreenYEnemies
           $29de = OffScreenYEnemies.end
           $29e0 = OffScreenX
           $29e8 = OffScreenX.end
           $29ea = OffScreenY
           $29f4 = OffScreenY.end
  SECTION: $29f6-$2a6d ($0078 bytes) ["controller"]
           $29f6 = InitializeController
           $29fb = ReadInput
           $2a2b = JOY_RIGHT
           $2a33 = JOY_LEFT
           $2a3b = JOY_UP
           $2a43 = JOY_DOWN
           $2a4b = JOY_A
           $2a53 = JOY_B
           $2a5b = JOY_SELECT
           $2a63 = JOY_START
           $2a6b = JOY_FALSE
  SECTION: $2a6e-$2acd ($0060 bytes) ["scroll"]
           $2a6e = InitializeParallaxScrolling
           $2a7c = IncrementScrollOffset
           $2a7c = IncrementScrollOffset.close
           $2a8a = IncrementScrollOffset.middle
           $2a98 = IncrementScrollOffset.far
           $2aa6 = IncrementScrollOffset.rain
           $2ab3 = IncrementScrollOffset.resetRain
           $2ab8 = IncrementScrollOffset.end
           $2ab9 = HorizontalScroll
           $2ac6 = HorizontalScroll.end
           $2ac8 = ResetScroll
  SECTION: $2ace-$2aeb ($001e bytes) ["OAM DMA routine"]
           $2ace = CopyDMARoutine
           $2ad5 = CopyDMARoutine.copy
           $2adc = DMARoutine
           $2ae0 = DMARoutine.wait
           $2ae4 = DMARoutineEnd
           $2ae4 = OAMDMA
    SLACK: $1530 bytes

ROMX bank #1:
  SECTION: $4000-$557f ($1580 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4590 = OpeningCutsceneTilesEnd
           $4590 = OpeningCutsceneSpriteTiles
           $45d0 = StageClearTiles
           $45d0 = OpeningCutsceneSpriteTilesEnd
           $4780 = StageClearTilesEnd
           $4780 = Level2Tiles
           $4c40 = Level2TilesEnd
           $4c40 = Level3Tiles
           $4ce0 = CountdownTiles
           $4ce0 = Level3TilesEnd
           $4de0 = CountdownTilesEnd
           $4de0 = WindowTiles
           $4fe0 = WindowTilesEnd
           $4fe0 = MenuTiles
           $5000 = MenuTilesEnd
           $5000 = MenuTitleTiles
           $5580 = MenuTitleTilesEnd
  SECTION: $5580-$60bd ($0b3e bytes) ["Song Data2"]
           $5580 = angryTheme
           $5595 = order_cnt
           $5596 = order1
           $55a0 = order2
           $55aa = order3
           $55b4 = order4
           $55be = P0
           $567e = P1
           $573e = P2
           $57fe = P3
           $58be = P4
           $597e = P5
           $5a3e = P6
           $5afe = P7
           $5bbe = P8
           $5c7e = P9
           $5d3e = P10
           $5dfe = P11
           $5ebe = duty_instruments
           $5ebe = itSquareinst1
           $5ec2 = itSquareinst2
           $5ec6 = itSquareinst3
           $5eca = itSquareinst4
           $5ece = itSquareinst5
           $5ed2 = itSquareinst6
           $5ed6 = itSquareinst7
           $5eda = itSquareinst8
           $5ede = itSquareinst9
           $5ee2 = itSquareinst10
           $5ee6 = itSquareinst11
           $5eea = itSquareinst12
           $5eee = itSquareinst13
           $5ef2 = itSquareinst14
           $5ef6 = itSquareinst15
           $5efa = wave_instruments
           $5efa = itWaveinst1
           $5efe = itWaveinst2
           $5f02 = itWaveinst3
           $5f06 = itWaveinst4
           $5f0a = itWaveinst5
           $5f0e = itWaveinst6
           $5f12 = itWaveinst7
           $5f16 = itWaveinst8
           $5f1a = itWaveinst9
           $5f1e = itWaveinst10
           $5f22 = itWaveinst11
           $5f26 = itWaveinst12
           $5f2a = itWaveinst13
           $5f2e = itWaveinst14
           $5f32 = itWaveinst15
           $5f36 = noise_instruments
           $5f36 = itNoiseinst1
           $5f3e = itNoiseinst2
           $5f46 = itNoiseinst3
           $5f4e = itNoiseinst4
           $5f56 = itNoiseinst5
           $5f5e = itNoiseinst6
           $5f66 = itNoiseinst7
           $5f6e = itNoiseinst8
           $5f76 = itNoiseinst9
           $5f7e = itNoiseinst10
           $5f86 = itNoiseinst11
           $5f8e = itNoiseinst12
           $5f96 = itNoiseinst13
           $5f9e = itNoiseinst14
           $5fa6 = itNoiseinst15
           $5fae = routines
           $5fae = __end_hUGE_Routine_0
           $5fae = __hUGE_Routine_0
           $5faf = __end_hUGE_Routine_1
           $5faf = __hUGE_Routine_1
           $5fb0 = __end_hUGE_Routine_2
           $5fb0 = __hUGE_Routine_2
           $5fb1 = __end_hUGE_Routine_3
           $5fb1 = __hUGE_Routine_3
           $5fb2 = __end_hUGE_Routine_4
           $5fb2 = __hUGE_Routine_4
           $5fb3 = __end_hUGE_Routine_5
           $5fb3 = __hUGE_Routine_5
           $5fb4 = __end_hUGE_Routine_6
           $5fb4 = __hUGE_Routine_6
           $5fb5 = __end_hUGE_Routine_7
           $5fb5 = __hUGE_Routine_7
           $5fb6 = __hUGE_Routine_8
           $5fb6 = __end_hUGE_Routine_8
           $5fb7 = __hUGE_Routine_9
           $5fb7 = __end_hUGE_Routine_9
           $5fb8 = __hUGE_Routine_10
           $5fb8 = __end_hUGE_Routine_10
           $5fb9 = __hUGE_Routine_11
           $5fb9 = __end_hUGE_Routine_11
           $5fba = __hUGE_Routine_12
           $5fba = __end_hUGE_Routine_12
           $5fbb = __hUGE_Routine_13
           $5fbb = __end_hUGE_Routine_13
           $5fbc = __end_hUGE_Routine_14
           $5fbc = __hUGE_Routine_14
           $5fbd = __end_hUGE_Routine_15
           $5fbd = __hUGE_Routine_15
           $5fbe = waves
           $5fbe = wave0
           $5fce = wave1
           $5fde = wave2
           $5fee = wave3
           $5ffe = wave4
           $600e = wave5
           $601e = wave6
           $602e = wave7
           $603e = wave8
           $604e = wave9
           $605e = wave10
           $606e = wave11
           $607e = wave12
           $608e = wave13
           $609e = wave14
           $60ae = wave15
  SECTION: $60be-$65db ($051e bytes) ["Song Data"]
           $60be = menuTheme
           $60d3 = order_cnt
           $60d4 = order1
           $60d6 = order2
           $60d8 = order3
           $60da = order4
           $60dc = P1
           $619c = P2
           $625c = P3
           $631c = P6
           $63dc = duty_instruments
           $63dc = itSquareinst1
           $63e0 = itSquareinst2
           $63e4 = itSquareinst3
           $63e8 = itSquareinst4
           $63ec = itSquareinst5
           $63f0 = itSquareinst6
           $63f4 = itSquareinst7
           $63f8 = itSquareinst8
           $63fc = itSquareinst9
           $6400 = itSquareinst10
           $6404 = itSquareinst11
           $6408 = itSquareinst12
           $640c = itSquareinst13
           $6410 = itSquareinst14
           $6414 = itSquareinst15
           $6418 = wave_instruments
           $6418 = itWaveinst1
           $641c = itWaveinst2
           $6420 = itWaveinst3
           $6424 = itWaveinst4
           $6428 = itWaveinst5
           $642c = itWaveinst6
           $6430 = itWaveinst7
           $6434 = itWaveinst8
           $6438 = itWaveinst9
           $643c = itWaveinst10
           $6440 = itWaveinst11
           $6444 = itWaveinst12
           $6448 = itWaveinst13
           $644c = itWaveinst14
           $6450 = itWaveinst15
           $6454 = noise_instruments
           $6454 = itNoiseinst1
           $645c = itNoiseinst2
           $6464 = itNoiseinst3
           $646c = itNoiseinst4
           $6474 = itNoiseinst5
           $647c = itNoiseinst6
           $6484 = itNoiseinst7
           $648c = itNoiseinst8
           $6494 = itNoiseinst9
           $649c = itNoiseinst10
           $64a4 = itNoiseinst11
           $64ac = itNoiseinst12
           $64b4 = itNoiseinst13
           $64bc = itNoiseinst14
           $64c4 = itNoiseinst15
           $64cc = routines
           $64cc = __end_hUGE_Routine_0
           $64cc = __hUGE_Routine_0
           $64cd = __end_hUGE_Routine_1
           $64cd = __hUGE_Routine_1
           $64ce = __end_hUGE_Routine_2
           $64ce = __hUGE_Routine_2
           $64cf = __end_hUGE_Routine_3
           $64cf = __hUGE_Routine_3
           $64d0 = __end_hUGE_Routine_4
           $64d0 = __hUGE_Routine_4
           $64d1 = __end_hUGE_Routine_5
           $64d1 = __hUGE_Routine_5
           $64d2 = __end_hUGE_Routine_6
           $64d2 = __hUGE_Routine_6
           $64d3 = __end_hUGE_Routine_7
           $64d3 = __hUGE_Routine_7
           $64d4 = __hUGE_Routine_8
           $64d4 = __end_hUGE_Routine_8
           $64d5 = __hUGE_Routine_9
           $64d5 = __end_hUGE_Routine_9
           $64d6 = __hUGE_Routine_10
           $64d6 = __end_hUGE_Routine_10
           $64d7 = __hUGE_Routine_11
           $64d7 = __end_hUGE_Routine_11
           $64d8 = __hUGE_Routine_12
           $64d8 = __end_hUGE_Routine_12
           $64d9 = __hUGE_Routine_13
           $64d9 = __end_hUGE_Routine_13
           $64da = __end_hUGE_Routine_14
           $64da = __hUGE_Routine_14
           $64db = __end_hUGE_Routine_15
           $64db = __hUGE_Routine_15
           $64dc = waves
           $64dc = wave0
           $64ec = wave1
           $64fc = wave2
           $650c = wave3
           $651c = wave4
           $652c = wave5
           $653c = wave6
           $654c = wave7
           $655c = wave8
           $656c = wave9
           $657c = wave10
           $658c = wave11
           $659c = wave12
           $65ac = wave13
           $65bc = wave14
           $65cc = wave15
  SECTION: $65dc-$69d8 ($03fd bytes) ["balloon cactus"]
           $65dc = InitializeBalloonCactus
           $65e5 = InitializeBalloonCactus.loop_u1
           $65f0 = SetStruct
           $662d = SpawnBalloonCactus
           $6640 = SpawnBalloonCactus.availableSpace
           $6649 = SpawnBalloonCactus.availableOAMSpace
           $6677 = SpawnBalloonCactus.isLeftside
           $6677 = SpawnBalloonCactus.balloonLeft
           $6690 = SpawnBalloonCactus.balloonRight
           $66a0 = SpawnBalloonCactus.cactusLeft
           $66ae = SpawnBalloonCactus.cactusRight
           $66be = SpawnBalloonCactus.setStruct
           $66c3 = SpawnBalloonCactus.end
           $66c8 = ClearCactus
           $66de = ClearBalloon
           $66f4 = Clear
           $66fe = PopBalloonAnimation
           $670f = PopBalloonAnimation.canSwitchFrames
           $671d = PopBalloonAnimation.frame0
           $6741 = PopBalloonAnimation.frame1
           $6765 = PopBalloonAnimation.clear
           $6786 = PopBalloonAnimation.endFrame
           $678d = PopBalloonAnimation.end
           $678e = CactusFallingCollision
           $678f = CactusFallingCollision.checkBird
           $6796 = CactusFallingCollision.birdLoop
           $67a7 = CactusFallingCollision.isAlive
           $67d7 = CactusFallingCollision.hitBird
           $67e5 = CactusFallingCollision.checkBirdLoop
           $67f2 = CactusFallingCollision.end
           $67f4 = CactusFalling
           $6806 = CactusFalling.falling
           $681f = CactusFalling.skipAcceleration
           $682b = CactusFalling.offScreen
           $682f = UpdateBalloonPosition
           $682f = UpdateBalloonPosition.balloonLeft
           $6845 = UpdateBalloonPosition.balloonRight
           $6850 = UpdateCactusPosition
           $6850 = UpdateCactusPosition.cactusLeft
           $6866 = UpdateCactusPosition.cactusRight
           $6871 = Move
           $688c = Move.isLeftside
           $689a = Move.updatePosition
           $68a1 = DeathOfBalloonCactus
           $68d2 = CollisionBalloonCactus
           $68d2 = CollisionBalloonCactus.checkHit
           $68ed = CollisionBalloonCactus.checkHitByBullet
           $690d = CollisionBalloonCactus.checkHitPlayer
           $6927 = BalloonCactusUpdate
           $692e = BalloonCactusUpdate.loop
           $6985 = BalloonCactusUpdate.isAlive
           $69a2 = BalloonCactusUpdate.offScreen
           $69a7 = BalloonCactusUpdate.popped
           $69b1 = BalloonCactusUpdate.notPopping
           $69bb = BalloonCactusUpdate.checkLoop
           $69ca = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $69d9-$6d4e ($0376 bytes) ["bird"]
           $69d9 = InitializeBird
           $69e2 = InitializeBird.loop_u1
           $69ed = SetStruct
           $6a12 = SpawnBird
           $6a25 = SpawnBird.availableSpace
           $6a2f = SpawnBird.availableOAMSpace
           $6a4c = SpawnBird.isRightside
           $6a51 = SpawnBird.birdLeft
           $6a6a = SpawnBird.birdMiddle
           $6a7a = SpawnBird.birdRight
           $6a8c = SpawnBird.isLeftside
           $6a8c = SpawnBird.leftBirdLeft
           $6aa5 = SpawnBird.leftBirdMiddle
           $6ab5 = SpawnBird.leftBirdRight
           $6ac5 = SpawnBird.setStruct
           $6aca = SpawnBird.end
           $6acf = BirdRightsideFlap
           $6ad6 = BirdRightsideFlap.soaring
           $6afe = BirdRightsideFlap.flapping
           $6b2f = BirdLeftsideFlap
           $6b36 = BirdLeftsideFlap.soaring
           $6b5e = BirdLeftsideFlap.flapping
           $6b8f = Clear
           $6bac = UpdateBirdPosition
           $6bac = UpdateBirdPosition.birdLeft
           $6bc2 = UpdateBirdPosition.birdMiddle
           $6bce = UpdateBirdPosition.birdRight
           $6bd9 = Move
           $6be0 = Move.isRightside
           $6bee = Move.isLeftside
           $6bf8 = Move.moveDown
           $6c06 = Move.moveEnd
           $6c0a = BirdFall
           $6c15 = BirdFall.checkOffscreenY
           $6c27 = BirdFall.end
           $6c29 = DeathOfBird
           $6c41 = DeathOfBird.facingLeft
           $6c6c = DeathOfBird.facingRight
           $6c97 = CollisionBird
           $6c97 = CollisionBird.checkHitPlayer
           $6cb1 = BirdUpdate
           $6cb8 = BirdUpdate.loop
           $6cf6 = BirdUpdate.isAlive
           $6d1b = BirdUpdate.offScreen
           $6d20 = BirdUpdate.isDead
           $6d31 = BirdUpdate.checkLoop
  SECTION: $6d4f-$700f ($02c1 bytes) ["bomb"]
           $6d4f = InitializeBomb
           $6d58 = InitializeBomb.loop_u1
           $6d63 = SetStruct
           $6d84 = SpawnBomb
           $6d96 = SpawnBomb.availableSpace
           $6d9f = SpawnBomb.availableOAMSpace
           $6db5 = SpawnBomb.balloonLeft
           $6dcf = SpawnBomb.balloonRight
           $6de0 = SpawnBomb.bombSpace
           $6deb = SpawnBomb.setStruct
           $6df0 = SpawnBomb.end
           $6df5 = Clear
           $6e12 = Move
           $6e1a = Move.balloonLeft
           $6e30 = Move.balloonRight
           $6e3c = Move.bombSpace
           $6e47 = DeathOfBomb
           $6e51 = CollisionBomb
           $6e51 = CollisionBomb.checkHit
           $6e6f = CollisionBomb.checkHitByBullet
           $6e8f = CollisionBomb.end
           $6e90 = ExplosionAnimation
           $6ea1 = ExplosionAnimation.canSwitchFrames
           $6eb9 = ExplosionAnimation.frame0
           $6ede = ExplosionAnimation.frame1
           $6f21 = ExplosionAnimation.frame2
           $6f4d = ExplosionAnimation.frame3
           $6f79 = ExplosionAnimation.clear
           $6f7d = ExplosionAnimation.endFrame
           $6f84 = ExplosionAnimation.end
           $6f85 = BombUpdate
           $6f8c = BombUpdate.loop
           $6fc6 = BombUpdate.isAlive
           $6fe3 = BombUpdate.offScreen
           $6fe8 = BombUpdate.popped
           $6ff2 = BombUpdate.checkLoop
  SECTION: $7010-$7233 ($0224 bytes) ["point balloon"]
           $7010 = InitializePointBalloon
           $7019 = InitializePointBalloon.loop_u1
           $7024 = SetStruct
           $7045 = SpawnPointBalloon
           $7057 = SpawnPointBalloon.availableSpace
           $7060 = SpawnPointBalloon.availableOAMSpace
           $7076 = SpawnPointBalloon.balloonLeft
           $708f = SpawnPointBalloon.balloonRight
           $709f = SpawnPointBalloon.setStruct
           $70a4 = SpawnPointBalloon.end
           $70a9 = PopBalloonAnimation
           $70ba = PopBalloonAnimation.canSwitchFrames
           $70c6 = PopBalloonAnimation.frame0
           $70ea = PopBalloonAnimation.frame1
           $710e = PopBalloonAnimation.clear
           $7112 = PopBalloonAnimation.endFrame
           $711a = Clear
           $7133 = Move
           $713a = Move.balloonLeft
           $7150 = Move.balloonRight
           $715b = DeathOfPointBalloon
           $716d = CollisionPointBalloon
           $716d = CollisionPointBalloon.checkHit
           $7188 = CollisionPointBalloon.checkHitByBullet
           $71a8 = CollisionPointBalloon.end
           $71a9 = PointBalloonUpdate
           $71b0 = PointBalloonUpdate.loop
           $71ea = PointBalloonUpdate.isAlive
           $7207 = PointBalloonUpdate.offScreen
           $720c = PointBalloonUpdate.popped
           $7216 = PointBalloonUpdate.checkLoop
           $7225 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $7234-$737c ($0149 bytes) ["porcupine"]
           $7234 = InitializePorcupine
           $723d = InitializePorcupine.loop_u1
           $7248 = SetStruct
           $725d = SpawnPorcupine
           $7270 = SpawnPorcupine.availableSpace
           $727a = SpawnPorcupine.availableOAMSpace
           $7290 = SpawnPorcupine.topLeft
           $72a9 = SpawnPorcupine.topMiddle
           $72b9 = SpawnPorcupine.topMiddle2
           $72c9 = SpawnPorcupine.topRight
           $72d9 = SpawnPorcupine.bottomLeft
           $72e9 = SpawnPorcupine.bottomMiddle
           $72fb = SpawnPorcupine.bottomMiddle2
           $730d = SpawnPorcupine.bottomRight
           $731f = SpawnPorcupine.setStruct
           $7324 = SpawnPorcupine.end
           $7329 = PorcupineUpdate
           $7330 = PorcupineUpdate.loop
           $735e = PorcupineUpdate.offScreen
           $735e = PorcupineUpdate.isAlive
           $7360 = PorcupineUpdate.isDead
           $7360 = PorcupineUpdate.checkLoop
           $736f = PorcupineUpdate.checkLoopSkipSet
  SECTION: $737d-$74ba ($013e bytes) ["menu"]
           $737d = InitializeMenu
           $7389 = LoadMenuOpeningGraphics
           $73a1 = LoadMenuGraphics
           $73d3 = SpawnMenuCursor
           $73dc = SpawnMenuCursor.availableSpace
           $73f7 = SpawnMenuCursor.end
           $73f8 = BlinkMenuCursor
           $7400 = BlinkMenuCursor.blink
           $7411 = BlinkMenuCursor.show
           $7415 = BlinkMenuCursor.empty
           $7419 = SelectMode
           $7422 = MenuInput
           $742c = MenuInput.moveSelected
           $7432 = MenuInput.selectMode
           $743b = MenuInput.end
           $743c = UpdateMenuOpening
           $7458 = UpdateMenuOpening.startSound
           $745d = UpdateMenuOpening.scrollUpTitle
           $7469 = UpdateMenuOpening.endSound
           $746e = UpdateMenuOpening.scrollDownTitle
           $747a = UpdateMenuOpening.scrollUpTitle2
           $7486 = UpdateMenuOpening.fadeOut
           $748c = UpdateMenuOpening.next
           $7490 = UpdateMenuOpening.endFrame
           $7497 = UpdateMenuOpening.end
           $7498 = UpdateMenu
           $7498 = UpdateMenu.fadeIn
           $749e = UpdateMenu.hasFadedIn
           $74b2 = UpdateMenu.fadeOut
  SECTION: $74bb-$7599 ($00df bytes) ["opening cutscene"]
           $74bb = InitializeOpeningCutscene
           $74c0 = LoadParkGraphics
           $74ea = SpawnHandWave
           $750e = HandWaveAnimation
           $7515 = HandWaveAnimation.frame0
           $7531 = HandWaveAnimation.frame1
           $754c = HandWaveAnimation.end
           $754d = UpdatePark.fadeIn
           $754d = UpdatePark
           $7553 = UpdatePark.hasFadedIn
           $756c = UpdatePark.fadeOut
           $7574 = UpdatePark.skipFade
           $7577 = UpdatePark.moveUp
           $7583 = UpdatePark.flyUpNormal
           $7588 = UpdatePark.flyUpFast
           $758b = UpdatePark.flyUp
  SECTION: $759a-$7678 ($00df bytes) ["stage clear"]
           $759a = InitializeStageClear
           $75a7 = LoadStageClearGraphics
           $75c2 = RefreshAddLives
           $75d1 = RefreshAddLives.hasLivesToAdd
           $75de = RefreshStageClear
           $75f6 = UpdateStageClear
           $7626 = UpdateStageClear.pause
           $7637 = UpdateStageClear.copyFirstDigitToTotal
           $764b = UpdateStageClear.copyPointsToTotal
           $765b = UpdateStageClear.addGainedLives
           $7671 = UpdateStageClear.endFrame
  SECTION: $7679-$7746 ($00ce bytes) ["palettes"]
           $7679 = ResetFading
           $7687 = InitializePalettes
           $7699 = FadeOutPalettes
           $76a0 = FadeOutPalettes.hasFadedIn
           $76a3 = FadeOutPalettes.fadeOut
           $76c3 = FadeOutPalettes.fade1
           $76cb = FadeOutPalettes.fade2
           $76d3 = FadeOutPalettes.fade3
           $76db = FadeOutPalettes.fade4
           $76e1 = FadeOutPalettes.fadePalettes
           $76e7 = FadeOutPalettes.increaseFrame
           $76ee = FadeOutPalettes.end
           $76f0 = FadeInPalettes
           $76f7 = FadeInPalettes.hasFadedIn
           $76fa = FadeInPalettes.fadeIn
           $771a = FadeInPalettes.fade1
           $7722 = FadeInPalettes.fade2
           $772a = FadeInPalettes.fade3
           $7732 = FadeInPalettes.fade4
           $7738 = FadeInPalettes.fadePalettes
           $773e = FadeInPalettes.increaseFrame
           $7745 = FadeInPalettes.end
  SECTION: $7747-$7800 ($00ba bytes) ["sound"]
           $7747 = AUDIO_OFF
           $774b = AUDIO_ON
           $7750 = PopSound
           $7763 = ExplosionSound
           $7770 = WaveSound
           $777d = FallingSound
           $7792 = RisingSound
           $77a7 = StopSweepSound
           $77ac = CollectSound
           $77c1 = WrongAnswerSound
           $77d8 = PercussionSound
           $77e5 = BassSound
           $77f6 = ClearSound
  SECTION: $7801-$78b4 ($00b4 bytes) ["memory"]
           $7801 = MEMCPY
           $7801 = MEMCPY.loop
           $7805 = MEMCPY.checkLoop
           $780a = MEMCPY_WITH_OFFSET
           $780b = MEMCPY_WITH_OFFSET.loop
           $7816 = MEMCPY_WITH_OFFSET.checkLoop
           $781c = MEMCPY_SINGLE_SCREEN
           $781e = MEMCPY_SINGLE_SCREEN.loop
           $7832 = MEMCPY_SINGLE_SCREEN.checkLoop
           $7838 = ClearOAM
           $783f = ClearOAM.loop_u2
           $7848 = ClearRAM
           $784f = ClearRAM.loop_u3
           $7858 = RequestOAMSpace
           $7861 = RequestOAMSpace.loop
           $7878 = RequestOAMSpace.availableSpace
           $787d = RequestOAMSpace.sufficientSpace
           $788d = RequestOAMSpace.isNotZero4
           $788e = RequestOAMSpace.isNotZero3
           $788f = RequestOAMSpace.isNotZero2
           $7890 = RequestOAMSpace.isNotZero1
           $7892 = RequestOAMSpace.notEnoughSprites
           $789a = RequestOAMSpace.end
           $789d = RequestRAMSpace
           $789d = RequestRAMSpace.loop
           $78a2 = RequestRAMSpace.availableSpace
           $78a6 = RequestRAMSpace.checkLoop
           $78b3 = RequestRAMSpace.noFreeSpace
           $78b4 = RequestRAMSpace.end
  SECTION: $78b5-$7930 ($007c bytes) ["score"]
           $78b5 = InitializeScore
           $78bd = InitializeTotal
           $78c5 = AddPoints
           $78cc = AddPoints.carry
           $78d5 = DecrementPoints
           $78de = DecrementPoints.carry
           $78e5 = DecrementPoints.checkCapAtZero
           $78ee = DecrementPoints.noCap
           $78f3 = IsScoreZero
           $7902 = AddTotal
           $7905 = AddTotal.saveFourthDigit
           $790d = AddTotal.toBCD
           $7911 = AddTotal.carry
           $7915 = AddTotal.checkAddLife
           $791f = AddTotal.addLife
           $792a = AddTotal.checkLoop
  SECTION: $7931-$796a ($003a bytes) ["math"]
           $7931 = MODULO
           $7933 = MODULO.loop
           $7938 = DIVISION
           $793e = DIVISION.loop
           $7943 = DIVISION.end
           $7946 = ToBCD
           $795c = MULTIPLY
           $795e = MULTIPLY.loop
           $7969 = MULTIPLY.end
  SECTION: $796b-$799c ($0032 bytes) ["lcd"]
           $796b = LCD_OFF
           $7972 = LCD_ON
           $7979 = LCD_ON_NO_WINDOW
           $7980 = WaitVBlank
           $7987 = WaitVBlank.loop
           $7992 = SetupWindow
  SECTION: $799d-$79b1 ($0015 bytes) ["general initialization"]
           $799d = InitializeGeneralVars
  SECTION: $79b2-$79b9 ($0008 bytes) ["timer"]
           $79b2 = UpdateGlobalTimer
    SLACK: $0646 bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["scroll vars"]
           $c0f6 = wParallaxClose
           $c0f7 = wParallaxMiddle
           $c0f8 = wParallaxFar
           $c0f9 = wRain
  SECTION: $c0fa-$c0fd ($0004 bytes) ["level vars"]
           $c0fa = wLevel
           $c0fb = wLevelWaitCounter
           $c0fc = wLevelDataAddress
  SECTION: $c0fe-$c0ff ($0002 bytes) ["menu vars"]
           $c0fe = wMenuFrame
           $c0ff = wSelectedMode
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["stage clear vars"]
           $c1a0 = wStageClearTimer
           $c1a1 = wStageClearFrame
           $c1a2 = wLivesToAdd
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["controller vars"]
           $c1a3 = wControllerDown
           $c1a4 = wControllerPressed
           $c1a5 = wPaused
  SECTION: $c1a6-$c1a8 ($0003 bytes) ["interrupts vars"]
           $c1a6 = wVBlankFlag
           $c1a7 = wLCDInterrupt
  SECTION: $c1a9-$c1a9 ($0001 byte) ["timer vars"]
           $c1a9 = wGlobalTimer
  SECTION: $c1aa-$c1aa ($0001 byte) ["game vars"]
           $c1aa = wCountdownFrame
  SECTION: $c1ab-$c1ab ($0001 byte) ["opening cutscene vars"]
           $c1ab = wHandWavingFrame
    SLACK: $0e54 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $2ad0 bytes in 1 bank
    ROMX: $39ba bytes in 1 bank
    WRAM0: $01ac bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
