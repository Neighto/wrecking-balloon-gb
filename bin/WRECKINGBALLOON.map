ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $002b-$003f ($0015 bytes) ["scroll"]
           $002b = HorizontalScroll
           $0038 = HorizontalScroll.end
           $003a = ResetScroll
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d9 ($008f bytes) ["interrupts"]
           $004b = VBlankInterrupt
           $005b = LCDInterrupt
           $0065 = LCDInterruptEnd
           $0069 = SetBaseInterrupts
           $007b = ParkLCDInterrupt
           $0087 = ParkLCDInterrupt.clouds
           $0095 = ParkLCDInterrupt.ground
           $009a = ParkLCDInterrupt.end
           $009d = SetParkInterrupts
           $00aa = ClassicLCDInterrupt
           $00cc = SetClassicInterrupts
  SECTION: $00da-$00f7 ($001e bytes) ["OAM DMA routine"]
           $00da = CopyDMARoutine
           $00e1 = CopyDMARoutine.copy
           $00e8 = DMARoutine
           $00ec = DMARoutine.wait
           $00f0 = DMARoutineEnd
           $00f0 = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$1592 ($03e2 bytes) ["player"]
           $11b1 = UpdateBalloonPosition
           $11ca = UpdateCactusPosition
           $11e3 = UpdatePlayerPosition
           $11ea = InitializePlayer
           $1265 = ClearPlayerCactus
           $1272 = ClearPlayerBalloon
           $127f = SpawnPlayer
           $128f = MoveCactusDriftLeft
           $12a4 = MoveCactusDriftLeft.end
           $12a5 = MoveCactusDriftRight
           $12b9 = MoveCactusDriftRight.end
           $12ba = MoveCactusDriftCenterX
           $12cc = MoveCactusDriftCenterX.moveRight
           $12ce = MoveCactusDriftCenterX.moveLeft
           $12cf = MoveCactusDriftCenterX.end
           $12d0 = MoveCactusDriftUp
           $12e5 = MoveCactusDriftUp.end
           $12e6 = MoveCactusDriftCenterY
           $12fb = MoveCactusDriftCenterY.moveUp
           $12fd = MoveCactusDriftCenterY.moveDown
           $12fe = MoveCactusDriftCenterY.end
           $12ff = MoveRight
           $1313 = MoveLeft
           $132b = MoveDown
           $133f = MoveUp
           $1354 = SpeedUp
           $135a = ResetSpeedUp
           $1360 = PlayerControls
           $1378 = PlayerControls.endRight
           $138e = PlayerControls.endLeft
           $13a4 = PlayerControls.endUp
           $13ba = PlayerControls.endDown
           $13c9 = PlayerControls.endDriftToCenterX
           $13d8 = PlayerControls.endDriftToCenterY
           $13e3 = PlayerControls.endStart
           $13e9 = PlayerControls.endA
           $13f4 = PlayerControls.endB
           $13f7 = PlayerControls.end
           $13fd = MovePlayer
           $140c = MovePlayerAutoMiddle
           $1419 = MovePlayerAutoMiddle.moveRight
           $141d = MovePlayerAutoMiddle.moveLeft
           $141f = MovePlayerAutoMiddle.end
           $1423 = MovePlayerAutoFlyUp
           $1439 = FallCactusDown
           $144e = FallCactusDown.skipAcceleration
           $1457 = PopBalloonAnimation
           $1478 = PopBalloonAnimation.frame0
           $148e = PopBalloonAnimation.frame1
           $14a4 = PopBalloonAnimation.clear
           $14b3 = PopBalloonAnimation.end
           $14b4 = CactusFalling
           $14ce = CactusFalling.offScreen
           $14d6 = CactusFalling.end
           $14d7 = NoMoreLives
           $14de = PlayerUpdate
           $14f1 = PlayerUpdate.popped
           $1506 = PlayerUpdate.respawn
           $1509 = PlayerUpdate.respawnSkip
           $1513 = PlayerUpdate.notPopping
           $151d = PlayerUpdate.end
           $151e = DeathOfPlayer
           $1542 = InvincibleBlink
           $155b = InvincibleBlink.blinkNormal
           $1564 = InvincibleBlink.blinkFast
           $1569 = InvincibleBlink.blinkEnd
           $157e = InvincibleBlink.defaultPalette
           $1592 = InvincibleBlink.end
  SECTION: $1593-$1782 ($01f0 bytes) ["graphics"]
           $1593 = LoadClassicGameData
           $15fa = LoadMenuData
           $1625 = RefreshScore
           $1663 = RefreshLives
           $166e = RefreshLevel
           $1681 = RefreshWindow
           $1691 = RefreshWindow.end
           $1692 = ClearAllTiles
           $169b = ClearAllTiles.loop_u1
           $16aa = ClearAllTiles.loop_u2
           $16b9 = ClearAllTiles.loop_u3
           $16c4 = ClearMap
           $16cd = ClearMap.loop_u4
           $16d8 = ReplaceTilemapHorizontal
           $1701 = ReplaceTilemapHorizontal.handleZero
           $1703 = ReplaceTilemapHorizontal.handleZeroEnd
           $170f = ReplaceTilemapHorizontal.loop
           $172d = ReplaceTilemapHorizontal.end
           $1732 = MoveToNextTilemap
           $1745 = MoveToNextTilemap.canUpdateTilemap
           $1758 = MoveToNextTilemap.clouds1
           $176d = MoveToNextTilemap.clouds2
           $1780 = MoveToNextTilemap.end
  SECTION: $1783-$18ca ($0148 bytes) ["level data"]
           $1783 = W1L1W1
           $1786 = W1L1W2
           $1786 = W1L1W1End
           $178c = W1L1W3
           $178c = W1L1W2End
           $1795 = W1L1W4
           $1795 = W1L1W3End
           $179b = W1L2W1
           $179b = W1L1W4End
           $17a4 = W1L2W2
           $17a4 = W1L2W1End
           $17aa = W1L2W3
           $17aa = W1L2W2End
           $17b0 = W1L2W4
           $17b0 = W1L2W3End
           $17bc = W1L2W4End
           $17bc = W2L1
           $17bf = W2L1End
           $17bf = InitializeLevelVars
           $17cb = LevelDataHandler
           $17cb = LevelDataHandler.loop
           $17e2 = LevelDataHandler.pointBalloon
           $17f1 = LevelDataHandler.balloonCactus
           $1800 = LevelDataHandler.bird
           $1809 = LevelDataHandler.bomb
           $1812 = LevelDataHandler.empty
           $1814 = LevelDataHandler.loopCheck
           $181a = LevelDataHandler.end
           $181b = LevelDataManager
           $1838 = LevelDataManager.w1
           $1846 = LevelDataManager.w1_l1
           $185c = LevelDataManager.w1_l1_w1
           $1864 = LevelDataManager.w1_l1_w2
           $186c = LevelDataManager.w1_l1_w3
           $1874 = LevelDataManager.w1_l1_w4
           $1887 = LevelDataManager.w1_l2
           $189c = LevelDataManager.w1_l2_w1
           $18a4 = LevelDataManager.w1_l2_w2
           $18ac = LevelDataManager.w1_l2_w3
           $18b4 = LevelDataManager.w1_l2_w4
           $18bc = LevelDataManager.w2
           $18be = LevelDataManager.w3
           $18c0 = LevelDataManager.handle
           $18ca = LevelDataManager.end
  SECTION: $18cb-$198b ($00c1 bytes) ["rom"]
           $18cb = Start
           $18ff = StartClassic
           $194d = PreGameLoop
           $196e = GameLoopCountdown
           $197d = GameLoop
  SECTION: $198c-$1a16 ($008b bytes) ["collision"]
           $198c = CollisionCheck
           $1999 = CollisionCheck.tryOtherY
           $19a1 = CollisionCheck.skip8x8Adjustment
           $19ad = CollisionCheck.checkX
           $19ba = CollisionCheck.tryOtherX
           $19c7 = CollisionCheck.collision
           $19cb = CollisionCheck.end
           $19cf = CollisionWithPlayer
           $19da = CollisionFallingEnemy
           $19db = OffScreenXEnemies
           $19ec = OffScreenXEnemies.end
           $19ee = OffScreenYEnemies
           $19ff = OffScreenYEnemies.end
           $1a01 = OffScreenX
           $1a09 = OffScreenX.end
           $1a0b = OffScreenY
           $1a15 = OffScreenY.end
  SECTION: $1a17-$1a89 ($0073 bytes) ["joypad"]
           $1a17 = ReadInput
           $1a47 = JOY_RIGHT
           $1a4f = JOY_LEFT
           $1a57 = JOY_UP
           $1a5f = JOY_DOWN
           $1a67 = JOY_A
           $1a6f = JOY_B
           $1a77 = JOY_SELECT
           $1a7f = JOY_START
           $1a87 = JOY_FALSE
    SLACK: $2583 bytes

ROMX bank #1:
  SECTION: $4000-$4b3d ($0b3e bytes) ["Song Data2"]
           $4000 = angryTheme
           $4015 = order_cnt
           $4016 = order1
           $4020 = order2
           $402a = order3
           $4034 = order4
           $403e = P0
           $40fe = P1
           $41be = P2
           $427e = P3
           $433e = P4
           $43fe = P5
           $44be = P6
           $457e = P7
           $463e = P8
           $46fe = P9
           $47be = P10
           $487e = P11
           $493e = duty_instruments
           $493e = itSquareinst1
           $4942 = itSquareinst2
           $4946 = itSquareinst3
           $494a = itSquareinst4
           $494e = itSquareinst5
           $4952 = itSquareinst6
           $4956 = itSquareinst7
           $495a = itSquareinst8
           $495e = itSquareinst9
           $4962 = itSquareinst10
           $4966 = itSquareinst11
           $496a = itSquareinst12
           $496e = itSquareinst13
           $4972 = itSquareinst14
           $4976 = itSquareinst15
           $497a = wave_instruments
           $497a = itWaveinst1
           $497e = itWaveinst2
           $4982 = itWaveinst3
           $4986 = itWaveinst4
           $498a = itWaveinst5
           $498e = itWaveinst6
           $4992 = itWaveinst7
           $4996 = itWaveinst8
           $499a = itWaveinst9
           $499e = itWaveinst10
           $49a2 = itWaveinst11
           $49a6 = itWaveinst12
           $49aa = itWaveinst13
           $49ae = itWaveinst14
           $49b2 = itWaveinst15
           $49b6 = noise_instruments
           $49b6 = itNoiseinst1
           $49be = itNoiseinst2
           $49c6 = itNoiseinst3
           $49ce = itNoiseinst4
           $49d6 = itNoiseinst5
           $49de = itNoiseinst6
           $49e6 = itNoiseinst7
           $49ee = itNoiseinst8
           $49f6 = itNoiseinst9
           $49fe = itNoiseinst10
           $4a06 = itNoiseinst11
           $4a0e = itNoiseinst12
           $4a16 = itNoiseinst13
           $4a1e = itNoiseinst14
           $4a26 = itNoiseinst15
           $4a2e = routines
           $4a2e = __end_hUGE_Routine_0
           $4a2e = __hUGE_Routine_0
           $4a2f = __end_hUGE_Routine_1
           $4a2f = __hUGE_Routine_1
           $4a30 = __end_hUGE_Routine_2
           $4a30 = __hUGE_Routine_2
           $4a31 = __end_hUGE_Routine_3
           $4a31 = __hUGE_Routine_3
           $4a32 = __end_hUGE_Routine_4
           $4a32 = __hUGE_Routine_4
           $4a33 = __end_hUGE_Routine_5
           $4a33 = __hUGE_Routine_5
           $4a34 = __end_hUGE_Routine_6
           $4a34 = __hUGE_Routine_6
           $4a35 = __end_hUGE_Routine_7
           $4a35 = __hUGE_Routine_7
           $4a36 = __hUGE_Routine_8
           $4a36 = __end_hUGE_Routine_8
           $4a37 = __hUGE_Routine_9
           $4a37 = __end_hUGE_Routine_9
           $4a38 = __hUGE_Routine_10
           $4a38 = __end_hUGE_Routine_10
           $4a39 = __hUGE_Routine_11
           $4a39 = __end_hUGE_Routine_11
           $4a3a = __hUGE_Routine_12
           $4a3a = __end_hUGE_Routine_12
           $4a3b = __hUGE_Routine_13
           $4a3b = __end_hUGE_Routine_13
           $4a3c = __end_hUGE_Routine_14
           $4a3c = __hUGE_Routine_14
           $4a3d = __end_hUGE_Routine_15
           $4a3d = __hUGE_Routine_15
           $4a3e = waves
           $4a3e = wave0
           $4a4e = wave1
           $4a5e = wave2
           $4a6e = wave3
           $4a7e = wave4
           $4a8e = wave5
           $4a9e = wave6
           $4aae = wave7
           $4abe = wave8
           $4ace = wave9
           $4ade = wave10
           $4aee = wave11
           $4afe = wave12
           $4b0e = wave13
           $4b1e = wave14
           $4b2e = wave15
  SECTION: $4b3e-$559d ($0a60 bytes) ["tilesets"]
           $4b3e = CactusTiles
           $4dfe = CactusTilesEnd
           $4dfe = PropellerCactusTiles
           $4eee = PropellerCactusTilesEnd
           $4eee = BackgroundTiles
           $532e = BackgroundTilesEnd
           $532e = ClassicParkTiles
           $536e = CountdownTiles
           $536e = ClassicParkTilesEnd
           $546e = CountdownTilesEnd
           $546e = WindowTiles
           $559e = WindowTilesEnd
  SECTION: $559e-$5b9d ($0600 bytes) ["menu title tiles"]
           $559e = MenuTitleTiles
           $5b9e = MenuTitleTilesEnd
  SECTION: $5b9e-$60bb ($051e bytes) ["Song Data"]
           $5b9e = menuTheme
           $5bb3 = order_cnt
           $5bb4 = order1
           $5bb6 = order2
           $5bb8 = order3
           $5bba = order4
           $5bbc = P1
           $5c7c = P2
           $5d3c = P3
           $5dfc = P6
           $5ebc = duty_instruments
           $5ebc = itSquareinst1
           $5ec0 = itSquareinst2
           $5ec4 = itSquareinst3
           $5ec8 = itSquareinst4
           $5ecc = itSquareinst5
           $5ed0 = itSquareinst6
           $5ed4 = itSquareinst7
           $5ed8 = itSquareinst8
           $5edc = itSquareinst9
           $5ee0 = itSquareinst10
           $5ee4 = itSquareinst11
           $5ee8 = itSquareinst12
           $5eec = itSquareinst13
           $5ef0 = itSquareinst14
           $5ef4 = itSquareinst15
           $5ef8 = wave_instruments
           $5ef8 = itWaveinst1
           $5efc = itWaveinst2
           $5f00 = itWaveinst3
           $5f04 = itWaveinst4
           $5f08 = itWaveinst5
           $5f0c = itWaveinst6
           $5f10 = itWaveinst7
           $5f14 = itWaveinst8
           $5f18 = itWaveinst9
           $5f1c = itWaveinst10
           $5f20 = itWaveinst11
           $5f24 = itWaveinst12
           $5f28 = itWaveinst13
           $5f2c = itWaveinst14
           $5f30 = itWaveinst15
           $5f34 = noise_instruments
           $5f34 = itNoiseinst1
           $5f3c = itNoiseinst2
           $5f44 = itNoiseinst3
           $5f4c = itNoiseinst4
           $5f54 = itNoiseinst5
           $5f5c = itNoiseinst6
           $5f64 = itNoiseinst7
           $5f6c = itNoiseinst8
           $5f74 = itNoiseinst9
           $5f7c = itNoiseinst10
           $5f84 = itNoiseinst11
           $5f8c = itNoiseinst12
           $5f94 = itNoiseinst13
           $5f9c = itNoiseinst14
           $5fa4 = itNoiseinst15
           $5fac = routines
           $5fac = __end_hUGE_Routine_0
           $5fac = __hUGE_Routine_0
           $5fad = __end_hUGE_Routine_1
           $5fad = __hUGE_Routine_1
           $5fae = __end_hUGE_Routine_2
           $5fae = __hUGE_Routine_2
           $5faf = __end_hUGE_Routine_3
           $5faf = __hUGE_Routine_3
           $5fb0 = __end_hUGE_Routine_4
           $5fb0 = __hUGE_Routine_4
           $5fb1 = __end_hUGE_Routine_5
           $5fb1 = __hUGE_Routine_5
           $5fb2 = __end_hUGE_Routine_6
           $5fb2 = __hUGE_Routine_6
           $5fb3 = __end_hUGE_Routine_7
           $5fb3 = __hUGE_Routine_7
           $5fb4 = __hUGE_Routine_8
           $5fb4 = __end_hUGE_Routine_8
           $5fb5 = __hUGE_Routine_9
           $5fb5 = __end_hUGE_Routine_9
           $5fb6 = __hUGE_Routine_10
           $5fb6 = __end_hUGE_Routine_10
           $5fb7 = __hUGE_Routine_11
           $5fb7 = __end_hUGE_Routine_11
           $5fb8 = __hUGE_Routine_12
           $5fb8 = __end_hUGE_Routine_12
           $5fb9 = __hUGE_Routine_13
           $5fb9 = __end_hUGE_Routine_13
           $5fba = __end_hUGE_Routine_14
           $5fba = __hUGE_Routine_14
           $5fbb = __end_hUGE_Routine_15
           $5fbb = __hUGE_Routine_15
           $5fbc = waves
           $5fbc = wave0
           $5fcc = wave1
           $5fdc = wave2
           $5fec = wave3
           $5ffc = wave4
           $600c = wave5
           $601c = wave6
           $602c = wave7
           $603c = wave8
           $604c = wave9
           $605c = wave10
           $606c = wave11
           $607c = wave12
           $608c = wave13
           $609c = wave14
           $60ac = wave15
  SECTION: $60bc-$6426 ($036b bytes) ["balloon cactus"]
           $60bc = InitializeBalloonCactus
           $60c5 = InitializeBalloonCactus.loop_u1
           $60d0 = GetStruct
           $610f = SetStruct
           $614e = SpawnBalloonCactus
           $6161 = SpawnBalloonCactus.availableSpace
           $616a = SpawnBalloonCactus.availableOAMSpace
           $6198 = SpawnBalloonCactus.isLeftside
           $6198 = SpawnBalloonCactus.balloonLeft
           $61b0 = SpawnBalloonCactus.balloonRight
           $61c0 = SpawnBalloonCactus.cactusLeft
           $61ce = SpawnBalloonCactus.cactusRight
           $61de = SpawnBalloonCactus.setStruct
           $61e3 = SpawnBalloonCactus.end
           $61e8 = ClearCactus
           $61fd = ClearBalloon
           $6211 = Clear
           $621b = PopBalloonAnimation
           $622c = PopBalloonAnimation.canSwitchFrames
           $623a = PopBalloonAnimation.frame0
           $625c = PopBalloonAnimation.frame1
           $627e = PopBalloonAnimation.clear
           $629d = PopBalloonAnimation.endFrame
           $62a1 = PopBalloonAnimation.end
           $62a2 = CactusFalling
           $62b4 = CactusFalling.falling
           $62ca = CactusFalling.skipAcceleration
           $62d6 = CactusFalling.offScreen
           $62d9 = CactusFalling.end
           $62da = UpdateBalloonPosition
           $62da = UpdateBalloonPosition.balloonLeft
           $62ef = UpdateBalloonPosition.balloonRight
           $62fa = UpdateCactusPosition
           $62fa = UpdateCactusPosition.cactusLeft
           $630f = UpdateCactusPosition.cactusRight
           $631a = Move
           $6335 = Move.isLeftside
           $6343 = Move.updatePosition
           $634a = DeathOfBalloonCactus
           $6379 = CollisionBalloonCactus
           $6379 = CollisionBalloonCactus.checkHit
           $6390 = CollisionBalloonCactus.checkHitPlayer
           $63ae = BalloonCactusUpdate
           $63b5 = BalloonCactusUpdate.loop
           $63d1 = BalloonCactusUpdate.isAlive
           $63ee = BalloonCactusUpdate.offScreen
           $63f3 = BalloonCactusUpdate.popped
           $63fd = BalloonCactusUpdate.notPopping
           $6407 = BalloonCactusUpdate.checkLoop
           $6422 = BalloonCactusUpdate.end
  SECTION: $6427-$6785 ($035f bytes) ["bird"]
           $6427 = InitializeBird
           $6430 = InitializeBird.loop_u1
           $643b = GetStruct
           $645e = SetStruct
           $6481 = SpawnBird
           $6495 = SpawnBird.availableSpace
           $64a7 = SpawnBird.availableOAMSpace
           $64bf = SpawnBird.isRightside
           $64fe = SpawnBird.isLeftside
           $6536 = SpawnBird.setStruct
           $653b = SpawnBird.end
           $653f = BirdAnimate
           $6548 = BirdAnimate.frame0
           $6571 = BirdAnimate.frame0FacingLeft
           $657c = BirdAnimate.frame0FacingEnd
           $6585 = BirdAnimate.frame1
           $65ae = BirdAnimate.frame1FacingLeft
           $65b9 = BirdAnimate.frame1FacingEnd
           $65c9 = BirdAnimate.end
           $65cc = Clear
           $65e8 = UpdateBirdPosition
           $662a = Move
           $6633 = Move.moveLeft
           $663e = Move.moveRight
           $6645 = Move.moveDown
           $6653 = Move.moveEnd
           $6659 = Move.end
           $665c = BirdFall
           $6668 = BirdFall.checkOffscreenY
           $667a = BirdFall.end
           $667d = DeathOfBird
           $6695 = DeathOfBird.facingLeft
           $66bd = DeathOfBird.facingRight
           $66e5 = CollisionBird
           $66e8 = CollisionBird.checkHitPlayer
           $6707 = CollisionBird.end
           $670b = BirdUpdate
           $6716 = BirdUpdate.loop
           $6732 = BirdUpdate.isAlive
           $674c = BirdUpdate.offScreen
           $6751 = BirdUpdate.isDead
           $6762 = BirdUpdate.checkLoop
           $677d = BirdUpdate.end
  SECTION: $6786-$6a57 ($02d2 bytes) ["bomb"]
           $6786 = InitializeBomb
           $678f = InitializeBomb.loop_u1
           $679a = GetStruct
           $67bd = SetStruct
           $67e0 = SpawnBomb
           $67f3 = SpawnBomb.availableSpace
           $6804 = SpawnBomb.availableOAMSpace
           $6818 = SpawnBomb.balloonLeft
           $6831 = SpawnBomb.balloonRight
           $6842 = SpawnBomb.bombSpace
           $684d = SpawnBomb.setStruct
           $6852 = SpawnBomb.end
           $6856 = Clear
           $6872 = UpdateBombPosition
           $68b4 = Move
           $68c0 = DeathOfBomb
           $68ca = CollisionBomb
           $68ed = ExplosionAnimation
           $6918 = ExplosionAnimation.frame0
           $693e = ExplosionAnimation.frame1
           $6986 = ExplosionAnimation.frame2
           $69b3 = ExplosionAnimation.frame3
           $69e0 = ExplosionAnimation.clear
           $69e3 = ExplosionAnimation.end
           $69e4 = BombUpdate
           $69ef = BombUpdate.loop
           $6a0b = BombUpdate.isAlive
           $6a25 = BombUpdate.offScreen
           $6a2a = BombUpdate.popped
           $6a34 = BombUpdate.checkLoop
           $6a4f = BombUpdate.end
  SECTION: $6a58-$6cdf ($0288 bytes) ["classic"]
           $6a58 = InitializeClassicVars
           $6a5d = ParkFadeOut
           $6a70 = ParkFadeOut.startFadeOut
           $6a76 = ParkFadeOut.fadeOut
           $6a81 = ParkFadeOut.hasFadedOut
           $6a85 = UpdatePark
           $6a8e = UpdatePark.moveUp
           $6a97 = UpdatePark.flyUpNormal
           $6a9e = UpdatePark.flyUpFast
           $6aa1 = UpdatePark.end
           $6aa2 = TryToUnpause
           $6ab9 = TryToUnpause.end
           $6aba = ParkEnteredClassic
           $6ac2 = StartedClassic
           $6aca = SpawnHandWave
           $6aed = SpawnHandWave.end
           $6aee = HandWaveAnimation
           $6af5 = HandWaveAnimation.frame0
           $6b10 = HandWaveAnimation.frame1
           $6b2a = HandWaveAnimation.end
           $6b2b = SpawnCountdown
           $6b5a = SpawnCountdown.end
           $6b5b = CountdownAnimation
           $6b62 = CountdownAnimation.countdown
           $6b6c = CountdownAnimation.balloonPop
           $6b74 = CountdownAnimation.frames
           $6b9b = CountdownAnimation.frame0
           $6bbe = CountdownAnimation.frame1
           $6be1 = CountdownAnimation.frame2
           $6c04 = CountdownAnimation.frame3
           $6c27 = CountdownAnimation.frame4
           $6c4a = CountdownAnimation.frame5
           $6c6a = CountdownAnimation.remove
           $6c83 = CountdownAnimation.end
           $6c84 = IncrementScrollOffset
           $6c92 = IncrementScrollOffset.end
           $6c93 = SetClassicMapStartPoint
           $6c98 = UpdateSprites
           $6ca8 = UpdateClassicCountdown
           $6cc0 = UpdateClassic
           $6cdf = UpdateClassic.end
  SECTION: $6ce0-$6ede ($01ff bytes) ["point balloon"]
           $6ce0 = InitializePointBalloon
           $6ce9 = InitializePointBalloon.loop_u1
           $6cf4 = GetStruct
           $6d17 = SetStruct
           $6d3a = SpawnPointBalloon
           $6d4c = SpawnPointBalloon.availableSpace
           $6d55 = SpawnPointBalloon.availableOAMSpace
           $6d6b = SpawnPointBalloon.balloonLeft
           $6d83 = SpawnPointBalloon.balloonRight
           $6d93 = SpawnPointBalloon.setStruct
           $6d98 = SpawnPointBalloon.end
           $6d9d = PopBalloonAnimation
           $6dae = PopBalloonAnimation.canSwitchFrames
           $6dba = PopBalloonAnimation.frame0
           $6ddc = PopBalloonAnimation.frame1
           $6dfe = PopBalloonAnimation.clear
           $6e02 = PopBalloonAnimation.endFrame
           $6e06 = PopBalloonAnimation.end
           $6e07 = Clear
           $6e1f = Move
           $6e26 = Move.balloonLeft
           $6e3b = Move.balloonRight
           $6e46 = DeathOfPointBalloon
           $6e58 = CollisionPointBalloon
           $6e70 = PointBalloonUpdate
           $6e77 = PointBalloonUpdate.loop
           $6e93 = PointBalloonUpdate.isAlive
           $6eb0 = PointBalloonUpdate.offScreen
           $6eb5 = PointBalloonUpdate.popped
           $6ebf = PointBalloonUpdate.checkLoop
           $6eda = PointBalloonUpdate.end
  SECTION: $6edf-$6fbd ($00df bytes) ["propellerCactus"]
           $6edf = InitializePropellerCactus
           $6eff = SpawnPropellerCactus
           $6f0b = SpawnPropellerCactus.topLeft
           $6f1b = SpawnPropellerCactus.topMiddle
           $6f2d = SpawnPropellerCactus.topMiddle2
           $6f3f = SpawnPropellerCactus.topRight
           $6f51 = SpawnPropellerCactus.bottomLeft
           $6f63 = SpawnPropellerCactus.bottomMiddle
           $6f77 = SpawnPropellerCactus.bottomMiddle2
           $6f8b = SpawnPropellerCactus.bottomRight
           $6fa0 = PropellerCactusUpdate
           $6faf = PropellerCactusUpdate.popped
           $6fbd = PropellerCactusUpdate.end
           $6fbd = PropellerCactusUpdate.respawnSkip
           $6fbd = PropellerCactusUpdate.notPopping
  SECTION: $6fbe-$706c ($00af bytes) ["menu"]
           $6fbe = SpawnMenuCursor
           $6fdd = BlinkMenuCursor
           $6fe5 = BlinkMenuCursor.blink
           $6ff5 = BlinkMenuCursor.show
           $6ff9 = BlinkMenuCursor.empty
           $6ffd = MoveCursor
           $700d = MoveCursor.classicMode
           $701c = MoveCursor.storyMode
           $702b = SelectMode
           $7032 = SelectMode.classicMode
           $703b = SelectMode.storyMode
           $703c = MenuInput
           $7046 = MenuInput.selectMode
           $7046 = MenuInput.moveSelected
           $704f = MenuInput.end
           $7050 = UpdateMenu
           $705e = UpdateMenu.fadeOut
           $7069 = UpdateMenu.hasFadedOut
  SECTION: $706d-$7116 ($00aa bytes) ["palettes"]
           $706d = SetupPalettes
           $707e = SetupParkPalettes
           $708d = FadeOutPalettes
           $7095 = FadeOutPalettes.fadeOut
           $70a9 = FadeOutPalettes.fade1
           $70ad = FadeOutPalettes.fade2
           $70b1 = FadeOutPalettes.fade3
           $70b5 = FadeOutPalettes.fade4
           $70b7 = FadeOutPalettes.end
           $70c7 = FadeInPalettes
           $70cf = FadeInPalettes.fadeIn
           $70e3 = FadeInPalettes.fade1
           $70e7 = FadeInPalettes.fade2
           $70eb = FadeInPalettes.fade3
           $70ef = FadeInPalettes.fade4
           $70f1 = FadeInPalettes.end
           $7101 = HasFadedOut
           $7107 = HasFadedOut.false
           $7109 = HasFadedOut.true
           $710c = HasFadedIn
           $7112 = HasFadedIn.false
           $7114 = HasFadedIn.true
  SECTION: $7117-$71b4 ($009e bytes) ["sound"]
           $7117 = AUDIO_OFF
           $711b = AUDIO_ON
           $7120 = PopSound
           $7133 = ExplosionSound
           $7146 = FallingSound
           $715b = StopFallingSound
           $7160 = CollectSound
           $7175 = WrongAnswerSound
           $718c = PercussionSound
           $7199 = BassSound
           $71aa = ClearSound
  SECTION: $71b5-$723d ($0089 bytes) ["memory"]
           $71b5 = MEMCPY.memcpy_loop
           $71b5 = MEMCPY
           $71b9 = MEMCPY.memcpy_check_limit
           $71bf = ClearOAM
           $71c6 = ClearOAM.loop_u1
           $71cf = ClearRAM
           $71d6 = ClearRAM.loop_u2
           $71df = RequestOAMSpace
           $71e8 = RequestOAMSpace.loop
           $71ff = RequestOAMSpace.availableSpace
           $7204 = RequestOAMSpace.sufficientSpace
           $7214 = RequestOAMSpace.isNotZero4
           $7215 = RequestOAMSpace.isNotZero3
           $7216 = RequestOAMSpace.isNotZero2
           $7217 = RequestOAMSpace.isNotZero1
           $7219 = RequestOAMSpace.notEnoughSprites
           $7221 = RequestOAMSpace.end
           $7224 = RequestRAMSpace
           $7224 = RequestRAMSpace.loop
           $7229 = RequestRAMSpace.availableSpace
           $722d = RequestRAMSpace.checkLoop
           $723c = RequestRAMSpace.noFreeSpace
           $723d = RequestRAMSpace.end
  SECTION: $723e-$728d ($0050 bytes) ["menu tiles"]
           $723e = MenuTiles
           $728e = MenuTilesEnd
  SECTION: $728e-$72d6 ($0049 bytes) ["math"]
           $728e = MODULO
           $7290 = MODULO.loop
           $7295 = RANDOM
           $729e = DIVISION
           $72a4 = DIVISION.loop
           $72a9 = DIVISION.end
           $72ac = ToBCD
           $72c3 = ToBCD.end
           $72c6 = MULTIPLY
           $72c9 = MULTIPLY.loop
           $72d4 = MULTIPLY.end
  SECTION: $72d7-$7308 ($0032 bytes) ["lcd"]
           $72d7 = LCD_OFF
           $72de = LCD_ON
           $72e5 = LCD_ON_BG_ONLY
           $72ec = WaitVBlank
           $72f3 = WaitVBlank.loop
           $72fe = SetupWindow
  SECTION: $7309-$7335 ($002d bytes) ["general initialization"]
           $7309 = InitializeGameVars
  SECTION: $7336-$735a ($0025 bytes) ["score"]
           $7336 = InitializeScore
           $733e = AddPoints
           $734e = AddPoints.carry
           $7358 = AddPoints.end
  SECTION: $735b-$7362 ($0008 bytes) ["timer"]
           $735b = UpdateGlobalTimer
    SLACK: $0c9d bytes

WRAM0 bank #0:
  SECTION: $c000-$c017 ($0018 bytes) ["general RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = selected_mode
           $c009 = hand_waving_frame
           $c00a = countdown_frame
           $c00b = cloud_scroll_offset
           $c00c = classic_mode_stage
           $c00d = fade_frame
           $c00e = wOAMGeneral1
           $c00f = wOAMGeneral2
           $c010 = wLCDInterrupt
           $c012 = wUpdateTilemapAddress
           $c014 = wUpdateTilemapOffset
           $c015 = wUpdateTilemapIndex
           $c016 = wHasUpdatedNextTilemapAddress
           $c017 = wLastUpdatedSCX
  SECTION: $c018-$c05d ($0046 bytes) ["Playback variables"]
           $c018 = _start_vars
           $c018 = order_cnt
           $c019 = order1
           $c019 = _start_song_descriptor_pointers
           $c01b = order2
           $c01d = order3
           $c01f = order4
           $c021 = duty_instruments
           $c023 = wave_instruments
           $c025 = noise_instruments
           $c027 = routines
           $c029 = waves
           $c02b = mute_channels
           $c02b = _end_song_descriptor_pointers
           $c02c = pattern1
           $c02e = pattern2
           $c030 = pattern3
           $c032 = pattern4
           $c034 = ticks_per_row
           $c035 = current_order
           $c036 = next_order
           $c037 = row_break
           $c038 = temp_note_value
           $c03a = row
           $c03b = tick
           $c03c = counter
           $c03d = current_wave
           $c03d = _hUGE_current_wave
           $c03e = channel_period1
           $c03e = channels
           $c03e = channel1
           $c040 = toneporta_target1
           $c042 = channel_note1
           $c043 = vibrato_tremolo_phase1
           $c044 = envelope1
           $c045 = highmask1
           $c046 = channel_period2
           $c046 = channel2
           $c048 = toneporta_target2
           $c04a = channel_note2
           $c04b = vibrato_tremolo_phase2
           $c04c = envelope2
           $c04d = highmask2
           $c04e = channel_period3
           $c04e = channel3
           $c050 = toneporta_target3
           $c052 = channel_note3
           $c053 = vibrato_tremolo_phase3
           $c054 = envelope3
           $c055 = highmask3
           $c056 = channel_period4
           $c056 = channel4
           $c058 = toneporta_target4
           $c05a = channel_note4
           $c05b = vibrato_tremolo_phase4
           $c05c = envelope4
           $c05d = highmask4
           $c05e = _end_vars
  SECTION: $c05e-$c07d ($0020 bytes) ["point balloon vars"]
           $c05e = pointBalloon
  SECTION: $c07e-$c09b ($001e bytes) ["balloon cactus vars"]
           $c07e = balloonCactus
  SECTION: $c09c-$c0ab ($0010 bytes) ["bird vars"]
           $c09c = bird
  SECTION: $c0ac-$c0bb ($0010 bytes) ["enemy struct vars"]
           $c0ac = wEnemyOffset
           $c0ad = wEnemyY
           $c0ae = wEnemyX
           $c0af = wEnemyActive
           $c0b0 = wEnemyOAM
           $c0b1 = wEnemyAlive
           $c0b2 = wEnemyPopping
           $c0b3 = wEnemyPoppingFrame
           $c0b4 = wEnemyPoppingTimer
           $c0b5 = wEnemyRightside
           $c0b6 = wEnemyY2
           $c0b7 = wEnemyX2
           $c0b8 = wEnemyFalling
           $c0b9 = wEnemyFallingSpeed
           $c0ba = wEnemyFallingTimer
           $c0bb = wEnemyDelayFallingTimer
  SECTION: $c0bc-$c0cb ($0010 bytes) ["bomb vars"]
           $c0bc = bomb
  SECTION: $c0cc-$c0db ($0010 bytes) ["player vars"]
           $c0cc = wPlayerY
           $c0cd = wPlayerX
           $c0ce = wPlayerY2
           $c0cf = wPlayerX2
           $c0d0 = wPlayerAlive
           $c0d1 = wPlayerPopping
           $c0d2 = wPlayerPoppingFrame
           $c0d3 = wPlayerPoppingTimer
           $c0d4 = wPlayerFalling
           $c0d5 = wPlayerFallSpeed
           $c0d6 = wPlayerFallingTimer
           $c0d7 = wPlayerDelayFallingTimer
           $c0d8 = wPlayerRespawnTimer
           $c0d9 = wPlayerSpeed
           $c0da = wPlayerLives
           $c0db = wPlayerInvincible
  SECTION: $c0dc-$c0e3 ($0008 bytes) ["propellerCactus vars"]
           $c0dc = wPropellerCactus
           $c0dd = wPropeller_x
           $c0de = wPropeller_y
           $c0df = wPropeller_frame
           $c0e0 = wPropeller_respawn_timer
           $c0e1 = wPropeller_alive
           $c0e2 = wPropeller_spawn_right
           $c0e3 = wPropeller_speed
  SECTION: $c0e4-$c0e6 ($0003 bytes) ["level vars"]
           $c0e4 = wWorld
           $c0e5 = wLevel
           $c0e6 = wWave
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e79 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1a7d bytes in 1 bank
    ROMX: $3363 bytes in 1 bank
    WRAM0: $0187 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
