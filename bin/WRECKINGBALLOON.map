ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a87 ($0938 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level2MapEnd
           $0a60 = WindowMap
           $0a60 = MenuMapEnd
           $0a88 = WindowMapEnd
  SECTION: $0a88-$1228 ($07a1 bytes) ["Sound Driver"]
           $0a88 = _hUGE_init_banked
           $0a8c = _hUGE_init
           $0a8e = continue_init
           $0a97 = _hUGE_mute_channel_banked
           $0a9b = _hUGE_mute_channel
           $0a9d = continue_mute
           $0aa8 = hUGE_mute_channel
           $0aae = hUGE_mute_channel.enable_loop
           $0ab5 = hUGE_mute_channel.enable_cut
           $0ac2 = _hUGE_set_position_banked
           $0ac6 = _hUGE_set_position
           $0ac8 = continue_set_position
           $0acf = hUGE_init
           $0ad6 = hUGE_init.fill_loop
           $0afa = hUGE_init.copy_song_descriptor_loop
           $0b04 = _refresh_patterns
           $0b1e = _refresh_patterns.load_pattern
           $0b2e = _load_note_data
           $0b40 = _lookup_note
           $0b4a = _convert_note
           $0b58 = _convert_ch4_note
           $0b6f = _update_channel
           $0b79 = _update_channel1
           $0b87 = _update_channel2
           $0b95 = _update_channel3
           $0ba3 = _update_channel4
           $0bb3 = _playnote1
           $0bce = _playnote2
           $0be9 = _playnote3
           $0c0a = _playnote4
           $0c1e = _doeffect
           $0c33 = _doeffect.jump
           $0c63 = setup_channel_pointer
           $0c71 = fx_set_master_volume
           $0c76 = fx_call_routine
           $0c98 = fx_call_routine.call_hl
           $0c99 = fx_set_pan
           $0c9e = fx_set_duty
           $0ca3 = fx_set_duty.chan2
           $0cad = fx_set_duty.chan1
           $0cb7 = fx_vol_slide
           $0cbe = fx_vol_slide.loop
           $0cc3 = fx_vol_slide.cont
           $0cf5 = fx_vol_slide.cont1
           $0cfc = fx_vol_slide.cont2
           $0d10 = _envelope_registers
           $0d18 = fx_note_delay
           $0d31 = fx_note_delay.play_note
           $0d4f = _play_note_routines
           $0d5b = fx_set_speed
           $0d61 = hUGE_set_position
           $0d61 = fx_pos_jump
           $0d6b = fx_pattern_break
           $0d70 = fx_note_cut
           $0d78 = fx_note_cut.loop
           $0d7d = fx_note_cut.cont
           $0d82 = note_cut
           $0d99 = fx_set_volume
           $0d9a = set_channel_volume
           $0da5 = set_chn_3_vol
           $0db7 = set_chn_3_vol.three
           $0dbb = set_chn_3_vol.two
           $0dbf = set_chn_3_vol.one
           $0dc3 = set_chn_3_vol.zero
           $0dc4 = set_chn_3_vol.done
           $0dc7 = set_chn_2_vol
           $0dd7 = set_chn_1_vol
           $0de7 = set_chn_4_vol
           $0df3 = fx_vibrato
           $0e06 = fx_vibrato.restore
           $0e0b = fx_vibrato.go_up
           $0e16 = fx_vibrato.finish_vibrato
           $0e1c = fx_arpeggio
           $0e28 = fx_arpeggio.greater_than_two
           $0e2a = fx_arpeggio.test_greater_than_two
           $0e39 = fx_arpeggio.arp_options
           $0e3f = fx_arpeggio.reset_arp
           $0e42 = fx_arpeggio.set_arp2
           $0e47 = fx_arpeggio.set_arp1
           $0e48 = fx_arpeggio.finish_arp
           $0e4b = fx_arpeggio.finish_skip_add
           $0e54 = fx_porta_up
           $0e63 = fx_porta_up.finish
           $0e6a = fx_porta_down
           $0e7c = fx_toneporta
           $0e8e = fx_toneporta.return_skip
           $0e98 = fx_toneporta.do_toneporta
           $0ead = fx_toneporta.high_byte_same
           $0eb3 = fx_toneporta.add
           $0ec5 = fx_toneporta.subtract
           $0edb = fx_toneporta.set_exact
           $0edd = fx_toneporta.done
           $0ef0 = _setup_instrument_pointer_ch4
           $0efb = _setup_instrument_pointer
           $0f02 = _setup_instrument_pointer.finish
           $0f0b = _hUGE_dosound_banked
           $0f0b = _hUGE_dosound
           $0f4a = _hUGE_dosound.write_mask1
           $0f4d = _hUGE_dosound.do_setvol1
           $0f60 = _hUGE_dosound.after_note1
           $0f95 = _hUGE_dosound.write_mask2
           $0f98 = _hUGE_dosound.do_setvol2
           $0fab = _hUGE_dosound.after_note2
           $1032 = _hUGE_dosound.no_wave_copy
           $1033 = _hUGE_dosound.write_mask3
           $1036 = _hUGE_dosound.do_setvol3
           $1041 = _hUGE_dosound.after_note3
           $1092 = _hUGE_dosound.write_mask4
           $1095 = _hUGE_dosound.do_setvol4
           $10a0 = _hUGE_dosound.after_note4
           $10a3 = _hUGE_dosound.process_effects
           $10bf = _hUGE_dosound.after_effect1
           $10db = _hUGE_dosound.after_effect2
           $10f7 = _hUGE_dosound.after_effect3
           $1142 = _hUGE_dosound.done_macro
           $114b = process_tick
           $114b = _hUGE_dosound.after_effect4
           $115d = _newrow
           $1175 = _newrow.no_break
           $1180 = _neworder
           $118d = _update_current_order
           $1194 = _noreset
           $1199 = note_table
  SECTION: $1229-$19c8 ($07a0 bytes) ["tilesets"]
           $1229 = PlayerSpriteTiles
           $1329 = EnemyTiles
           $1329 = PlayerSpriteTilesEnd
           $14e9 = Level1Tiles
           $14e9 = EnemyTilesEnd
           $19c9 = Level1TilesEnd
  SECTION: $19c9-$1e4a ($0482 bytes) ["player"]
           $19c9 = InitializePlayer
           $1a1c = UpdateBalloonPosition
           $1a1c = UpdateBalloonPosition.balloonLeft
           $1a29 = UpdateBalloonPosition.balloonRight
           $1a34 = UpdateCactusPosition
           $1a34 = UpdateCactusPosition.cactusLeft
           $1a41 = UpdateCactusPosition.cactusRight
           $1a4c = SpawnPlayer
           $1a4c = SpawnPlayer.cactusLeft
           $1a5c = SpawnPlayer.cactusRight
           $1a6c = SpawnPlayer.balloonLeft
           $1a7c = SpawnPlayer.balloonRight
           $1a8d = ClearPlayerCactus
           $1a9a = ClearPlayerBalloon
           $1aa7 = RespawnPlayer
           $1aba = MoveRight
           $1aca = MoveRight.canCactusDriftLeft
           $1adc = MoveRight.cactusDriftLeft
           $1ade = MoveLeft
           $1af2 = MoveLeft.canCactusDriftRight
           $1b03 = MoveLeft.cactusDriftRight
           $1b05 = MoveDown
           $1b15 = MoveDown.canCactusDriftUp
           $1b27 = MoveDown.cactusDriftUp
           $1b29 = ChargeBoost
           $1b2f = ChargeBoost.isCharging
           $1b36 = ChargeBoost.resetBoost
           $1b3c = ChargeAttack
           $1b42 = ChargeAttack.isCharging
           $1b47 = SpawnBullet
           $1b61 = SpawnBullet.spawnFromLeft
           $1b69 = SpawnBullet.leftOAM
           $1b77 = SpawnBullet.spawnFromRight
           $1b7f = SpawnBullet.rightOAM
           $1b8d = ClearBullet
           $1b99 = BulletUpdate
           $1b9f = BulletUpdate.isAlive
           $1baa = BulletUpdate.offScreen
           $1bae = BulletUpdate.onScreen
           $1bb4 = BulletUpdate.move
           $1bbe = BulletUpdate.moveLeft
           $1bc2 = BulletUpdate.moveRight
           $1bc4 = BulletUpdate.endMove
           $1bcc = PlayerControls
           $1bcc = PlayerControls.right
           $1bdf = PlayerControls.moveRight
           $1be7 = PlayerControls.endRight
           $1be7 = PlayerControls.left
           $1bfa = PlayerControls.moveLeft
           $1c01 = PlayerControls.endLeft
           $1c01 = PlayerControls.up
           $1c14 = PlayerControls.moveUp
           $1c28 = PlayerControls.endUp
           $1c28 = PlayerControls.down
           $1c3e = PlayerControls.endDown
           $1c3e = PlayerControls.canCactusDriftCenterX
           $1c5c = PlayerControls.driftCenterXRight
           $1c5f = PlayerControls.driftCenterXLeft
           $1c60 = PlayerControls.endDriftToCenterX
           $1c60 = PlayerControls.canCactusDriftCenterY
           $1c81 = PlayerControls.driftCenterYUp
           $1c84 = PlayerControls.driftCenterYDown
           $1c85 = PlayerControls.endDriftToCenterY
           $1c85 = PlayerControls.start
           $1c90 = PlayerControls.endStart
           $1c90 = PlayerControls.AButton
           $1c9d = PlayerControls.activateAttack
           $1ca5 = PlayerControls.endA
           $1ca5 = PlayerControls.BButton
           $1cb2 = PlayerControls.activateBoost
           $1cbc = PlayerControls.endB
           $1cbd = MovePlayer
           $1cd2 = MovePlayerAutoFlyUp
           $1ceb = FallCactusDown
           $1d00 = FallCactusDown.skipAcceleration
           $1d09 = PopBalloonAnimation
           $1d1a = PopBalloonAnimation.canSwitchFrames
           $1d26 = PopBalloonAnimation.frame0
           $1d38 = PopBalloonAnimation.frame1
           $1d4a = PopBalloonAnimation.clear
           $1d5a = PopBalloonAnimation.endFrame
           $1d62 = CactusFalling
           $1d7c = CactusFalling.offScreen
           $1d84 = CactusFalling.end
           $1d85 = NoMoreLives
           $1d8f = PlayerUpdate
           $1d96 = PlayerUpdate.isAlive
           $1db2 = PlayerUpdate.popped
           $1dbd = PlayerUpdate.popping
           $1dc5 = PlayerUpdate.falling
           $1dce = PlayerUpdate.respawning
           $1dd5 = PlayerUpdate.noMoreLives
           $1dd9 = PlayerUpdate.respawn
           $1ddd = DeathOfPlayer
           $1e01 = InvincibleBlink
           $1e07 = InvincibleBlink.isStillInvincible
           $1e16 = InvincibleBlink.blinkNormal
           $1e1d = InvincibleBlink.blinkFast
           $1e21 = InvincibleBlink.blinkEnd
           $1e36 = InvincibleBlink.defaultPalette
  SECTION: $1e4b-$21d8 ($038e bytes) ["level data"]
           $1e4b = Level1
           $1ea8 = Level2
           $2017 = Level3
           $2108 = InitializeNewLevel
           $2120 = InitializeNewLevel.level1
           $2125 = InitializeNewLevel.level2
           $212a = InitializeNewLevel.level3
           $212f = InitializeNewLevel.level4
           $2130 = InitializeNewLevel.setLevelDataAddress
           $2138 = InitializeLevelVars
           $2141 = LevelDataHandler
           $2149 = LevelDataHandler.notEmpty
           $2168 = LevelDataHandler.pointBalloon
           $216c = LevelDataHandler.balloonCactus
           $2170 = LevelDataHandler.bird
           $2174 = LevelDataHandler.bomb
           $2178 = LevelDataHandler.porcupine
           $217c = LevelDataManager
           $21a0 = LevelDataManager.spawn
           $21ad = LevelDataManager.wait
           $21ba = LevelDataManager.waitEnd
           $21c8 = LevelDataManager.end
  SECTION: $21d9-$23f9 ($0221 bytes) ["game"]
           $21d9 = InitializeGame
           $21e1 = LoadLevel1Graphics
           $2204 = LoadLevel2Graphics
           $2226 = TryToUnpause
           $223d = TryToUnpause.end
           $223e = SpawnCountdown
           $2269 = SpawnCountdown.end
           $226a = Countdown
           $2271 = Countdown.hasCountedDown
           $2274 = Countdown.countdown
           $2285 = Countdown.balloonPop
           $228d = Countdown.frames
           $22b6 = Countdown.frame0
           $22d8 = Countdown.frame1
           $22fa = Countdown.frame2
           $231b = Countdown.frame3
           $233c = Countdown.frame4
           $235d = Countdown.frame5
           $237b = Countdown.remove
           $2390 = Countdown.endFrame
           $2397 = Countdown.end
           $2399 = IncrementScrollOffset
           $2399 = IncrementScrollOffset.close
           $23a7 = IncrementScrollOffset.far
           $23b5 = IncrementScrollOffset.end
           $23b6 = UpdateSprites
           $23cc = UpdateGameCountdown
           $23e1 = UpdateGame
  SECTION: $23fa-$254e ($0155 bytes) ["rom"]
           $23fa = Start
           $2434 = MenuLoopOpening
           $2434 = StartMenu
           $244c = MenuLoop
           $244c = StartGame
           $2485 = OpeningCutsceneLoop
           $2494 = SetupNextLevel
           $24b5 = SetupNextLevel.level1
           $24bd = SetupNextLevel.level2
           $24c5 = SetupNextLevel.level3
           $24c5 = SetupNextLevel.endLevelSetup
           $24c5 = SetupNextLevel.level6
           $24c5 = SetupNextLevel.level5
           $24c5 = SetupNextLevel.level4
           $24f5 = GameCountdownLoop
           $2504 = GameLoop
           $2513 = StageClear
           $2540 = StageClearLoop
  SECTION: $254f-$26a3 ($0155 bytes) ["window"]
           $254f = RefreshScore
           $2586 = RefreshTotal
           $25bd = RefreshLives
           $25c6 = RefreshBoostBar
           $25d0 = RefreshBoostBar.isCharging
           $25dc = RefreshBoostBar.isEmpty
           $25e2 = RefreshBoostBar.is25Percent
           $25e9 = RefreshBoostBar.is50Percent
           $25f0 = RefreshBoostBar.is75Percent
           $25f7 = RefreshBoostBar.isReady
           $25fd = RefreshAttackBar
           $2607 = RefreshAttackBar.isCharging
           $2613 = RefreshAttackBar.isEmpty
           $2619 = RefreshAttackBar.is25Percent
           $2620 = RefreshAttackBar.is50Percent
           $2627 = RefreshAttackBar.is75Percent
           $262e = RefreshAttackBar.isReady
           $2634 = LoadWindow.loadTiles
           $2634 = LoadWindow
           $2640 = LoadWindow.drawMap
           $265a = RefreshWindow
           $2670 = RefreshAddLives
           $267f = RefreshAddLives.hasLivesToAdd
           $268c = RefreshStageClear
  SECTION: $26a4-$27d3 ($0130 bytes) ["interrupts"]
           $26a4 = InitializeInterrupts
           $26ba = VBlankInterrupt
           $26ca = LCDInterrupt
           $26d4 = LCDInterruptEnd
           $26d8 = MenuLCDInterrupt
           $26e8 = MenuLCDInterrupt.reset
           $26f1 = MenuLCDInterrupt.far
           $26ff = MenuLCDInterrupt.close
           $270b = MenuLCDInterrupt.end
           $270e = SetMenuInterrupts
           $271c = ParkLCDInterrupt
           $2728 = ParkLCDInterrupt.clouds
           $2736 = ParkLCDInterrupt.ground
           $273b = ParkLCDInterrupt.end
           $273e = SetParkInterrupts
           $2742 = Level1LCDInterrupt
           $2752 = Level1LCDInterrupt.reset
           $2760 = Level1LCDInterrupt.far
           $276e = Level1LCDInterrupt.close
           $277a = Level1LCDInterrupt.end
           $277d = SetLevel1Interrupts
           $278b = Level2LCDInterrupt
           $279b = Level2LCDInterrupt.reset
           $27a9 = Level2LCDInterrupt.far
           $27b7 = Level2LCDInterrupt.close
           $27c3 = Level2LCDInterrupt.end
           $27c6 = SetLevel2Interrupts
  SECTION: $27d4-$2855 ($0082 bytes) ["collision"]
           $27d4 = CollisionCheck
           $27df = CollisionCheck.tryOtherY
           $27eb = CollisionCheck.checkX
           $27f8 = CollisionCheck.tryOtherX
           $2805 = CollisionCheck.collision
           $2808 = CollisionCheck.noCollision
           $280a = CollisionWithPlayer
           $281a = OffScreenXEnemies
           $282b = OffScreenXEnemies.end
           $282d = OffScreenYEnemies
           $283e = OffScreenYEnemies.end
           $2840 = OffScreenX
           $2848 = OffScreenX.end
           $284a = OffScreenY
           $2854 = OffScreenY.end
  SECTION: $2856-$28cd ($0078 bytes) ["controller"]
           $2856 = InitializeController
           $285b = ReadInput
           $288b = JOY_RIGHT
           $2893 = JOY_LEFT
           $289b = JOY_UP
           $28a3 = JOY_DOWN
           $28ab = JOY_A
           $28b3 = JOY_B
           $28bb = JOY_SELECT
           $28c3 = JOY_START
           $28cb = JOY_FALSE
  SECTION: $28ce-$28f1 ($0024 bytes) ["scroll"]
           $28ce = HorizontalScroll
           $28db = HorizontalScroll.end
           $28dd = VerticalScroll
           $28ea = VerticalScroll.end
           $28ec = ResetScroll
  SECTION: $28f2-$290f ($001e bytes) ["OAM DMA routine"]
           $28f2 = CopyDMARoutine
           $28f9 = CopyDMARoutine.copy
           $2900 = DMARoutine
           $2904 = DMARoutine.wait
           $2908 = DMARoutineEnd
           $2908 = OAMDMA
    SLACK: $170c bytes

ROMX bank #1:
  SECTION: $4000-$5a9f ($1aa0 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4460 = OpeningCutsceneTilesEnd
           $4460 = OpeningCutsceneSpriteTiles
           $44a0 = OpeningCutsceneSpriteTilesEnd
           $44a0 = IntermissionTiles
           $4650 = IntermissionTilesEnd
           $4650 = Level2Tiles
           $4e00 = Level2TilesEnd
           $4e00 = CountdownTiles
           $4f00 = CountdownTilesEnd
           $4f00 = WindowTiles
           $5100 = WindowTilesEnd
           $5100 = MenuTiles
           $5120 = MenuTilesEnd
           $5120 = MenuTitleTiles
           $5aa0 = MenuTitleTilesEnd
  SECTION: $5aa0-$65dd ($0b3e bytes) ["Song Data2"]
           $5aa0 = angryTheme
           $5ab5 = order_cnt
           $5ab6 = order1
           $5ac0 = order2
           $5aca = order3
           $5ad4 = order4
           $5ade = P0
           $5b9e = P1
           $5c5e = P2
           $5d1e = P3
           $5dde = P4
           $5e9e = P5
           $5f5e = P6
           $601e = P7
           $60de = P8
           $619e = P9
           $625e = P10
           $631e = P11
           $63de = duty_instruments
           $63de = itSquareinst1
           $63e2 = itSquareinst2
           $63e6 = itSquareinst3
           $63ea = itSquareinst4
           $63ee = itSquareinst5
           $63f2 = itSquareinst6
           $63f6 = itSquareinst7
           $63fa = itSquareinst8
           $63fe = itSquareinst9
           $6402 = itSquareinst10
           $6406 = itSquareinst11
           $640a = itSquareinst12
           $640e = itSquareinst13
           $6412 = itSquareinst14
           $6416 = itSquareinst15
           $641a = wave_instruments
           $641a = itWaveinst1
           $641e = itWaveinst2
           $6422 = itWaveinst3
           $6426 = itWaveinst4
           $642a = itWaveinst5
           $642e = itWaveinst6
           $6432 = itWaveinst7
           $6436 = itWaveinst8
           $643a = itWaveinst9
           $643e = itWaveinst10
           $6442 = itWaveinst11
           $6446 = itWaveinst12
           $644a = itWaveinst13
           $644e = itWaveinst14
           $6452 = itWaveinst15
           $6456 = noise_instruments
           $6456 = itNoiseinst1
           $645e = itNoiseinst2
           $6466 = itNoiseinst3
           $646e = itNoiseinst4
           $6476 = itNoiseinst5
           $647e = itNoiseinst6
           $6486 = itNoiseinst7
           $648e = itNoiseinst8
           $6496 = itNoiseinst9
           $649e = itNoiseinst10
           $64a6 = itNoiseinst11
           $64ae = itNoiseinst12
           $64b6 = itNoiseinst13
           $64be = itNoiseinst14
           $64c6 = itNoiseinst15
           $64ce = routines
           $64ce = __end_hUGE_Routine_0
           $64ce = __hUGE_Routine_0
           $64cf = __end_hUGE_Routine_1
           $64cf = __hUGE_Routine_1
           $64d0 = __end_hUGE_Routine_2
           $64d0 = __hUGE_Routine_2
           $64d1 = __end_hUGE_Routine_3
           $64d1 = __hUGE_Routine_3
           $64d2 = __end_hUGE_Routine_4
           $64d2 = __hUGE_Routine_4
           $64d3 = __end_hUGE_Routine_5
           $64d3 = __hUGE_Routine_5
           $64d4 = __end_hUGE_Routine_6
           $64d4 = __hUGE_Routine_6
           $64d5 = __end_hUGE_Routine_7
           $64d5 = __hUGE_Routine_7
           $64d6 = __hUGE_Routine_8
           $64d6 = __end_hUGE_Routine_8
           $64d7 = __hUGE_Routine_9
           $64d7 = __end_hUGE_Routine_9
           $64d8 = __hUGE_Routine_10
           $64d8 = __end_hUGE_Routine_10
           $64d9 = __hUGE_Routine_11
           $64d9 = __end_hUGE_Routine_11
           $64da = __hUGE_Routine_12
           $64da = __end_hUGE_Routine_12
           $64db = __hUGE_Routine_13
           $64db = __end_hUGE_Routine_13
           $64dc = __end_hUGE_Routine_14
           $64dc = __hUGE_Routine_14
           $64dd = __end_hUGE_Routine_15
           $64dd = __hUGE_Routine_15
           $64de = waves
           $64de = wave0
           $64ee = wave1
           $64fe = wave2
           $650e = wave3
           $651e = wave4
           $652e = wave5
           $653e = wave6
           $654e = wave7
           $655e = wave8
           $656e = wave9
           $657e = wave10
           $658e = wave11
           $659e = wave12
           $65ae = wave13
           $65be = wave14
           $65ce = wave15
  SECTION: $65de-$6afb ($051e bytes) ["Song Data"]
           $65de = menuTheme
           $65f3 = order_cnt
           $65f4 = order1
           $65f6 = order2
           $65f8 = order3
           $65fa = order4
           $65fc = P1
           $66bc = P2
           $677c = P3
           $683c = P6
           $68fc = duty_instruments
           $68fc = itSquareinst1
           $6900 = itSquareinst2
           $6904 = itSquareinst3
           $6908 = itSquareinst4
           $690c = itSquareinst5
           $6910 = itSquareinst6
           $6914 = itSquareinst7
           $6918 = itSquareinst8
           $691c = itSquareinst9
           $6920 = itSquareinst10
           $6924 = itSquareinst11
           $6928 = itSquareinst12
           $692c = itSquareinst13
           $6930 = itSquareinst14
           $6934 = itSquareinst15
           $6938 = wave_instruments
           $6938 = itWaveinst1
           $693c = itWaveinst2
           $6940 = itWaveinst3
           $6944 = itWaveinst4
           $6948 = itWaveinst5
           $694c = itWaveinst6
           $6950 = itWaveinst7
           $6954 = itWaveinst8
           $6958 = itWaveinst9
           $695c = itWaveinst10
           $6960 = itWaveinst11
           $6964 = itWaveinst12
           $6968 = itWaveinst13
           $696c = itWaveinst14
           $6970 = itWaveinst15
           $6974 = noise_instruments
           $6974 = itNoiseinst1
           $697c = itNoiseinst2
           $6984 = itNoiseinst3
           $698c = itNoiseinst4
           $6994 = itNoiseinst5
           $699c = itNoiseinst6
           $69a4 = itNoiseinst7
           $69ac = itNoiseinst8
           $69b4 = itNoiseinst9
           $69bc = itNoiseinst10
           $69c4 = itNoiseinst11
           $69cc = itNoiseinst12
           $69d4 = itNoiseinst13
           $69dc = itNoiseinst14
           $69e4 = itNoiseinst15
           $69ec = routines
           $69ec = __end_hUGE_Routine_0
           $69ec = __hUGE_Routine_0
           $69ed = __end_hUGE_Routine_1
           $69ed = __hUGE_Routine_1
           $69ee = __end_hUGE_Routine_2
           $69ee = __hUGE_Routine_2
           $69ef = __end_hUGE_Routine_3
           $69ef = __hUGE_Routine_3
           $69f0 = __end_hUGE_Routine_4
           $69f0 = __hUGE_Routine_4
           $69f1 = __end_hUGE_Routine_5
           $69f1 = __hUGE_Routine_5
           $69f2 = __end_hUGE_Routine_6
           $69f2 = __hUGE_Routine_6
           $69f3 = __end_hUGE_Routine_7
           $69f3 = __hUGE_Routine_7
           $69f4 = __hUGE_Routine_8
           $69f4 = __end_hUGE_Routine_8
           $69f5 = __hUGE_Routine_9
           $69f5 = __end_hUGE_Routine_9
           $69f6 = __hUGE_Routine_10
           $69f6 = __end_hUGE_Routine_10
           $69f7 = __hUGE_Routine_11
           $69f7 = __end_hUGE_Routine_11
           $69f8 = __hUGE_Routine_12
           $69f8 = __end_hUGE_Routine_12
           $69f9 = __hUGE_Routine_13
           $69f9 = __end_hUGE_Routine_13
           $69fa = __end_hUGE_Routine_14
           $69fa = __hUGE_Routine_14
           $69fb = __end_hUGE_Routine_15
           $69fb = __hUGE_Routine_15
           $69fc = waves
           $69fc = wave0
           $6a0c = wave1
           $6a1c = wave2
           $6a2c = wave3
           $6a3c = wave4
           $6a4c = wave5
           $6a5c = wave6
           $6a6c = wave7
           $6a7c = wave8
           $6a8c = wave9
           $6a9c = wave10
           $6aac = wave11
           $6abc = wave12
           $6acc = wave13
           $6adc = wave14
           $6aec = wave15
  SECTION: $6afc-$6ef8 ($03fd bytes) ["balloon cactus"]
           $6afc = InitializeBalloonCactus
           $6b05 = InitializeBalloonCactus.loop_u1
           $6b10 = SetStruct
           $6b4d = SpawnBalloonCactus
           $6b60 = SpawnBalloonCactus.availableSpace
           $6b69 = SpawnBalloonCactus.availableOAMSpace
           $6b97 = SpawnBalloonCactus.isLeftside
           $6b97 = SpawnBalloonCactus.balloonLeft
           $6bb0 = SpawnBalloonCactus.balloonRight
           $6bc0 = SpawnBalloonCactus.cactusLeft
           $6bce = SpawnBalloonCactus.cactusRight
           $6bde = SpawnBalloonCactus.setStruct
           $6be3 = SpawnBalloonCactus.end
           $6be8 = ClearCactus
           $6bfe = ClearBalloon
           $6c14 = Clear
           $6c1e = PopBalloonAnimation
           $6c2f = PopBalloonAnimation.canSwitchFrames
           $6c3d = PopBalloonAnimation.frame0
           $6c61 = PopBalloonAnimation.frame1
           $6c85 = PopBalloonAnimation.clear
           $6ca6 = PopBalloonAnimation.endFrame
           $6cad = PopBalloonAnimation.end
           $6cae = CactusFallingCollision
           $6caf = CactusFallingCollision.checkBird
           $6cb6 = CactusFallingCollision.birdLoop
           $6cc7 = CactusFallingCollision.isAlive
           $6cf7 = CactusFallingCollision.hitBird
           $6d05 = CactusFallingCollision.checkBirdLoop
           $6d12 = CactusFallingCollision.end
           $6d14 = CactusFalling
           $6d26 = CactusFalling.falling
           $6d3f = CactusFalling.skipAcceleration
           $6d4b = CactusFalling.offScreen
           $6d4f = UpdateBalloonPosition
           $6d4f = UpdateBalloonPosition.balloonLeft
           $6d65 = UpdateBalloonPosition.balloonRight
           $6d70 = UpdateCactusPosition
           $6d70 = UpdateCactusPosition.cactusLeft
           $6d86 = UpdateCactusPosition.cactusRight
           $6d91 = Move
           $6dac = Move.isLeftside
           $6dba = Move.updatePosition
           $6dc1 = DeathOfBalloonCactus
           $6df2 = CollisionBalloonCactus
           $6df2 = CollisionBalloonCactus.checkHit
           $6e0d = CollisionBalloonCactus.checkHitByBullet
           $6e2d = CollisionBalloonCactus.checkHitPlayer
           $6e47 = BalloonCactusUpdate
           $6e4e = BalloonCactusUpdate.loop
           $6ea5 = BalloonCactusUpdate.isAlive
           $6ec2 = BalloonCactusUpdate.offScreen
           $6ec7 = BalloonCactusUpdate.popped
           $6ed1 = BalloonCactusUpdate.notPopping
           $6edb = BalloonCactusUpdate.checkLoop
           $6eea = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6ef9-$726e ($0376 bytes) ["bird"]
           $6ef9 = InitializeBird
           $6f02 = InitializeBird.loop_u1
           $6f0d = SetStruct
           $6f32 = SpawnBird
           $6f45 = SpawnBird.availableSpace
           $6f4f = SpawnBird.availableOAMSpace
           $6f6c = SpawnBird.isRightside
           $6f71 = SpawnBird.birdLeft
           $6f8a = SpawnBird.birdMiddle
           $6f9a = SpawnBird.birdRight
           $6fac = SpawnBird.isLeftside
           $6fac = SpawnBird.leftBirdLeft
           $6fc5 = SpawnBird.leftBirdMiddle
           $6fd5 = SpawnBird.leftBirdRight
           $6fe5 = SpawnBird.setStruct
           $6fea = SpawnBird.end
           $6fef = BirdRightsideFlap
           $6ff6 = BirdRightsideFlap.soaring
           $701e = BirdRightsideFlap.flapping
           $704f = BirdLeftsideFlap
           $7056 = BirdLeftsideFlap.soaring
           $707e = BirdLeftsideFlap.flapping
           $70af = Clear
           $70cc = UpdateBirdPosition
           $70cc = UpdateBirdPosition.birdLeft
           $70e2 = UpdateBirdPosition.birdMiddle
           $70ee = UpdateBirdPosition.birdRight
           $70f9 = Move
           $7100 = Move.isRightside
           $710e = Move.isLeftside
           $7118 = Move.moveDown
           $7126 = Move.moveEnd
           $712a = BirdFall
           $7135 = BirdFall.checkOffscreenY
           $7147 = BirdFall.end
           $7149 = DeathOfBird
           $7161 = DeathOfBird.facingLeft
           $718c = DeathOfBird.facingRight
           $71b7 = CollisionBird
           $71b7 = CollisionBird.checkHitPlayer
           $71d1 = BirdUpdate
           $71d8 = BirdUpdate.loop
           $7216 = BirdUpdate.isAlive
           $723b = BirdUpdate.offScreen
           $7240 = BirdUpdate.isDead
           $7251 = BirdUpdate.checkLoop
  SECTION: $726f-$752f ($02c1 bytes) ["bomb"]
           $726f = InitializeBomb
           $7278 = InitializeBomb.loop_u1
           $7283 = SetStruct
           $72a4 = SpawnBomb
           $72b6 = SpawnBomb.availableSpace
           $72bf = SpawnBomb.availableOAMSpace
           $72d5 = SpawnBomb.balloonLeft
           $72ef = SpawnBomb.balloonRight
           $7300 = SpawnBomb.bombSpace
           $730b = SpawnBomb.setStruct
           $7310 = SpawnBomb.end
           $7315 = Clear
           $7332 = Move
           $733a = Move.balloonLeft
           $7350 = Move.balloonRight
           $735c = Move.bombSpace
           $7367 = DeathOfBomb
           $7371 = CollisionBomb
           $7371 = CollisionBomb.checkHit
           $738f = CollisionBomb.checkHitByBullet
           $73af = CollisionBomb.end
           $73b0 = ExplosionAnimation
           $73c1 = ExplosionAnimation.canSwitchFrames
           $73d9 = ExplosionAnimation.frame0
           $73fe = ExplosionAnimation.frame1
           $7441 = ExplosionAnimation.frame2
           $746d = ExplosionAnimation.frame3
           $7499 = ExplosionAnimation.clear
           $749d = ExplosionAnimation.endFrame
           $74a4 = ExplosionAnimation.end
           $74a5 = BombUpdate
           $74ac = BombUpdate.loop
           $74e6 = BombUpdate.isAlive
           $7503 = BombUpdate.offScreen
           $7508 = BombUpdate.popped
           $7512 = BombUpdate.checkLoop
  SECTION: $7530-$7753 ($0224 bytes) ["point balloon"]
           $7530 = InitializePointBalloon
           $7539 = InitializePointBalloon.loop_u1
           $7544 = SetStruct
           $7565 = SpawnPointBalloon
           $7577 = SpawnPointBalloon.availableSpace
           $7580 = SpawnPointBalloon.availableOAMSpace
           $7596 = SpawnPointBalloon.balloonLeft
           $75af = SpawnPointBalloon.balloonRight
           $75bf = SpawnPointBalloon.setStruct
           $75c4 = SpawnPointBalloon.end
           $75c9 = PopBalloonAnimation
           $75da = PopBalloonAnimation.canSwitchFrames
           $75e6 = PopBalloonAnimation.frame0
           $760a = PopBalloonAnimation.frame1
           $762e = PopBalloonAnimation.clear
           $7632 = PopBalloonAnimation.endFrame
           $763a = Clear
           $7653 = Move
           $765a = Move.balloonLeft
           $7670 = Move.balloonRight
           $767b = DeathOfPointBalloon
           $768d = CollisionPointBalloon
           $768d = CollisionPointBalloon.checkHit
           $76a8 = CollisionPointBalloon.checkHitByBullet
           $76c8 = CollisionPointBalloon.end
           $76c9 = PointBalloonUpdate
           $76d0 = PointBalloonUpdate.loop
           $770a = PointBalloonUpdate.isAlive
           $7727 = PointBalloonUpdate.offScreen
           $772c = PointBalloonUpdate.popped
           $7736 = PointBalloonUpdate.checkLoop
           $7745 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $7754-$789c ($0149 bytes) ["porcupine"]
           $7754 = InitializePorcupine
           $775d = InitializePorcupine.loop_u1
           $7768 = SetStruct
           $777d = SpawnPorcupine
           $7790 = SpawnPorcupine.availableSpace
           $779a = SpawnPorcupine.availableOAMSpace
           $77b0 = SpawnPorcupine.topLeft
           $77c9 = SpawnPorcupine.topMiddle
           $77d9 = SpawnPorcupine.topMiddle2
           $77e9 = SpawnPorcupine.topRight
           $77f9 = SpawnPorcupine.bottomLeft
           $7809 = SpawnPorcupine.bottomMiddle
           $781b = SpawnPorcupine.bottomMiddle2
           $782d = SpawnPorcupine.bottomRight
           $783f = SpawnPorcupine.setStruct
           $7844 = SpawnPorcupine.end
           $7849 = PorcupineUpdate
           $7850 = PorcupineUpdate.loop
           $787e = PorcupineUpdate.offScreen
           $787e = PorcupineUpdate.isAlive
           $7880 = PorcupineUpdate.isDead
           $7880 = PorcupineUpdate.checkLoop
           $788f = PorcupineUpdate.checkLoopSkipSet
  SECTION: $789d-$79bf ($0123 bytes) ["menu"]
           $789d = InitializeMenu
           $78a9 = LoadMenuOpeningGraphics
           $78bf = LoadMenuGraphics
           $78d8 = SpawnMenuCursor
           $78e1 = SpawnMenuCursor.availableSpace
           $78fc = SpawnMenuCursor.end
           $78fd = BlinkMenuCursor
           $7905 = BlinkMenuCursor.blink
           $7916 = BlinkMenuCursor.show
           $791a = BlinkMenuCursor.empty
           $791e = SelectMode
           $7927 = MenuInput
           $7931 = MenuInput.moveSelected
           $7937 = MenuInput.selectMode
           $7940 = MenuInput.end
           $7941 = UpdateMenuOpening
           $795d = UpdateMenuOpening.startSound
           $7962 = UpdateMenuOpening.scrollUpTitle
           $796e = UpdateMenuOpening.endSound
           $7973 = UpdateMenuOpening.scrollDownTitle
           $797f = UpdateMenuOpening.scrollUpTitle2
           $798b = UpdateMenuOpening.fadeOut
           $7991 = UpdateMenuOpening.next
           $7995 = UpdateMenuOpening.endFrame
           $799c = UpdateMenuOpening.end
           $799d = UpdateMenu
           $799d = UpdateMenu.fadeIn
           $79a3 = UpdateMenu.hasFadedIn
           $79b7 = UpdateMenu.fadeOut
  SECTION: $79c0-$7a8d ($00ce bytes) ["palettes"]
           $79c0 = ResetFading
           $79ce = InitializePalettes
           $79e0 = FadeOutPalettes
           $79e7 = FadeOutPalettes.hasFadedIn
           $79ea = FadeOutPalettes.fadeOut
           $7a0a = FadeOutPalettes.fade1
           $7a12 = FadeOutPalettes.fade2
           $7a1a = FadeOutPalettes.fade3
           $7a22 = FadeOutPalettes.fade4
           $7a28 = FadeOutPalettes.fadePalettes
           $7a2e = FadeOutPalettes.increaseFrame
           $7a35 = FadeOutPalettes.end
           $7a37 = FadeInPalettes
           $7a3e = FadeInPalettes.hasFadedIn
           $7a41 = FadeInPalettes.fadeIn
           $7a61 = FadeInPalettes.fade1
           $7a69 = FadeInPalettes.fade2
           $7a71 = FadeInPalettes.fade3
           $7a79 = FadeInPalettes.fade4
           $7a7f = FadeInPalettes.fadePalettes
           $7a85 = FadeInPalettes.increaseFrame
           $7a8c = FadeInPalettes.end
  SECTION: $7a8e-$7b5a ($00cd bytes) ["opening cutscene"]
           $7a8e = InitializeOpeningCutscene
           $7a93 = LoadParkGraphics
           $7abb = SpawnHandWave
           $7adf = HandWaveAnimation
           $7ae6 = HandWaveAnimation.frame0
           $7b02 = HandWaveAnimation.frame1
           $7b1d = HandWaveAnimation.end
           $7b1e = UpdatePark.fadeIn
           $7b1e = UpdatePark
           $7b24 = UpdatePark.hasFadedIn
           $7b3d = UpdatePark.fadeOut
           $7b45 = UpdatePark.skipFade
           $7b48 = UpdatePark.moveUp
           $7b51 = UpdatePark.flyUpNormal
           $7b57 = UpdatePark.flyUpFast
  SECTION: $7b5b-$7c14 ($00ba bytes) ["sound"]
           $7b5b = AUDIO_OFF
           $7b5f = AUDIO_ON
           $7b64 = PopSound
           $7b77 = ExplosionSound
           $7b84 = WaveSound
           $7b91 = FallingSound
           $7ba6 = RisingSound
           $7bbb = StopSweepSound
           $7bc0 = CollectSound
           $7bd5 = WrongAnswerSound
           $7bec = PercussionSound
           $7bf9 = BassSound
           $7c0a = ClearSound
  SECTION: $7c15-$7cca ($00b6 bytes) ["memory"]
           $7c15 = MEMCPY
           $7c15 = MEMCPY.loop
           $7c19 = MEMCPY.checkLoop
           $7c1e = MEMCPY_WITH_OFFSET
           $7c1f = MEMCPY_WITH_OFFSET.loop
           $7c2a = MEMCPY_WITH_OFFSET.checkLoop
           $7c30 = MEMCPY_SINGLE_SCREEN
           $7c34 = MEMCPY_SINGLE_SCREEN.loop
           $7c48 = MEMCPY_SINGLE_SCREEN.checkLoop
           $7c4e = ClearOAM
           $7c55 = ClearOAM.loop_u2
           $7c5e = ClearRAM
           $7c65 = ClearRAM.loop_u3
           $7c6e = RequestOAMSpace
           $7c77 = RequestOAMSpace.loop
           $7c8e = RequestOAMSpace.availableSpace
           $7c93 = RequestOAMSpace.sufficientSpace
           $7ca3 = RequestOAMSpace.isNotZero4
           $7ca4 = RequestOAMSpace.isNotZero3
           $7ca5 = RequestOAMSpace.isNotZero2
           $7ca6 = RequestOAMSpace.isNotZero1
           $7ca8 = RequestOAMSpace.notEnoughSprites
           $7cb0 = RequestOAMSpace.end
           $7cb3 = RequestRAMSpace
           $7cb3 = RequestRAMSpace.loop
           $7cb8 = RequestRAMSpace.availableSpace
           $7cbc = RequestRAMSpace.checkLoop
           $7cc9 = RequestRAMSpace.noFreeSpace
           $7cca = RequestRAMSpace.end
  SECTION: $7ccb-$7d73 ($00a9 bytes) ["stage clear"]
           $7ccb = InitializeStageClear
           $7cd8 = LoadStageClearGraphics
           $7cf1 = UpdateStageClear
           $7d21 = UpdateStageClear.pause
           $7d32 = UpdateStageClear.copyFirstDigitToTotal
           $7d46 = UpdateStageClear.copyPointsToTotal
           $7d56 = UpdateStageClear.addGainedLives
           $7d6c = UpdateStageClear.endFrame
  SECTION: $7d74-$7def ($007c bytes) ["score"]
           $7d74 = InitializeScore
           $7d7c = InitializeTotal
           $7d84 = AddPoints
           $7d8b = AddPoints.carry
           $7d94 = DecrementPoints
           $7d9d = DecrementPoints.carry
           $7da4 = DecrementPoints.checkCapAtZero
           $7dad = DecrementPoints.noCap
           $7db2 = IsScoreZero
           $7dc1 = AddTotal
           $7dc4 = AddTotal.saveFourthDigit
           $7dcc = AddTotal.toBCD
           $7dd0 = AddTotal.carry
           $7dd4 = AddTotal.checkAddLife
           $7dde = AddTotal.addLife
           $7de9 = AddTotal.checkLoop
  SECTION: $7df0-$7e29 ($003a bytes) ["math"]
           $7df0 = MODULO
           $7df2 = MODULO.loop
           $7df7 = DIVISION
           $7dfd = DIVISION.loop
           $7e02 = DIVISION.end
           $7e05 = ToBCD
           $7e1b = MULTIPLY
           $7e1d = MULTIPLY.loop
           $7e28 = MULTIPLY.end
  SECTION: $7e2a-$7e5b ($0032 bytes) ["lcd"]
           $7e2a = LCD_OFF
           $7e31 = LCD_ON
           $7e38 = LCD_ON_NO_WINDOW
           $7e3f = WaitVBlank
           $7e46 = WaitVBlank.loop
           $7e51 = SetupWindow
  SECTION: $7e5c-$7e76 ($001b bytes) ["general initialization"]
           $7e5c = InitializeGeneralVars
  SECTION: $7e77-$7e7e ($0008 bytes) ["timer"]
           $7e77 = UpdateGlobalTimer
    SLACK: $0181 bytes

WRAM0 bank #0:
  SECTION: $c000-$c009 ($000a bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wParallaxClose
           $c003 = wParallaxFar
           $c004 = wUpdateTilemapAddress
           $c006 = wUpdateTilemapOffset
           $c007 = wUpdateTilemapIndex
           $c008 = wHasUpdatedNextTilemapAddress
           $c009 = wLastUpdatedSCX
  SECTION: $c00a-$c04f ($0046 bytes) ["Playback variables"]
           $c00a = _start_vars
           $c00a = order_cnt
           $c00b = order1
           $c00b = _start_song_descriptor_pointers
           $c00d = order2
           $c00f = order3
           $c011 = order4
           $c013 = duty_instruments
           $c015 = wave_instruments
           $c017 = noise_instruments
           $c019 = routines
           $c01b = waves
           $c01d = mute_channels
           $c01d = _end_song_descriptor_pointers
           $c01e = pattern1
           $c020 = pattern2
           $c022 = pattern3
           $c024 = pattern4
           $c026 = ticks_per_row
           $c027 = current_order
           $c028 = next_order
           $c029 = row_break
           $c02a = temp_note_value
           $c02c = row
           $c02d = tick
           $c02e = counter
           $c02f = current_wave
           $c02f = _hUGE_current_wave
           $c030 = channel_period1
           $c030 = channels
           $c030 = channel1
           $c032 = toneporta_target1
           $c034 = channel_note1
           $c035 = vibrato_tremolo_phase1
           $c036 = envelope1
           $c037 = highmask1
           $c038 = channel_period2
           $c038 = channel2
           $c03a = toneporta_target2
           $c03c = channel_note2
           $c03d = vibrato_tremolo_phase2
           $c03e = envelope2
           $c03f = highmask2
           $c040 = channel_period3
           $c040 = channel3
           $c042 = toneporta_target3
           $c044 = channel_note3
           $c045 = vibrato_tremolo_phase3
           $c046 = envelope3
           $c047 = highmask3
           $c048 = channel_period4
           $c048 = channel4
           $c04a = toneporta_target4
           $c04c = channel_note4
           $c04d = vibrato_tremolo_phase4
           $c04e = envelope4
           $c04f = highmask4
           $c050 = _end_vars
  SECTION: $c050-$c06f ($0020 bytes) ["point balloon vars"]
           $c050 = pointBalloon
  SECTION: $c070-$c08f ($0020 bytes) ["bomb vars"]
           $c070 = bomb
  SECTION: $c090-$c0ad ($001e bytes) ["balloon cactus vars"]
           $c090 = balloonCactus
  SECTION: $c0ae-$c0c4 ($0017 bytes) ["player vars"]
           $c0ae = wPlayerY
           $c0af = wPlayerX
           $c0b0 = wPlayerY2
           $c0b1 = wPlayerX2
           $c0b2 = wPlayerAlive
           $c0b3 = wPlayerPopping
           $c0b4 = wPlayerPoppingFrame
           $c0b5 = wPlayerPoppingTimer
           $c0b6 = wPlayerFalling
           $c0b7 = wPlayerFallSpeed
           $c0b8 = wPlayerFallingTimer
           $c0b9 = wPlayerDelayFallingTimer
           $c0ba = wPlayerRespawnTimer
           $c0bb = wPlayerSpeed
           $c0bc = wPlayerLives
           $c0bd = wPlayerRight
           $c0be = wPlayerBulletY
           $c0bf = wPlayerBulletX
           $c0c0 = wPlayerBulletAlive
           $c0c1 = wPlayerBulletRight
           $c0c2 = wPlayerInvincible
           $c0c3 = wPlayerBoost
           $c0c4 = wPlayerAttack
  SECTION: $c0c5-$c0d6 ($0012 bytes) ["bird vars"]
           $c0c5 = bird
  SECTION: $c0d7-$c0e8 ($0012 bytes) ["enemy struct vars"]
           $c0d7 = wEnemyOffset
           $c0d8 = wEnemyOffset2
           $c0d9 = wEnemyY
           $c0da = wEnemyX
           $c0db = wEnemyActive
           $c0dc = wEnemyOAM
           $c0dd = wEnemyAlive
           $c0de = wEnemyPopping
           $c0df = wEnemyPoppingFrame
           $c0e0 = wEnemyPoppingTimer
           $c0e1 = wEnemyRightside
           $c0e2 = wEnemyY2
           $c0e3 = wEnemyX2
           $c0e4 = wEnemyFalling
           $c0e5 = wEnemyFallingSpeed
           $c0e6 = wEnemyFallingTimer
           $c0e7 = wEnemyDelayFallingTimer
           $c0e8 = wEnemyToDie
  SECTION: $c0e9-$c0ee ($0006 bytes) ["score vars"]
           $c0e9 = wScore
           $c0ec = wTotal
  SECTION: $c0ef-$c0f3 ($0005 bytes) ["porcupine vars"]
           $c0ef = porcupine
  SECTION: $c0f4-$c0f7 ($0004 bytes) ["palettes vars"]
           $c0f4 = wFadeInFrame
           $c0f5 = wFadeOutFrame
           $c0f6 = wTriggerFadeIn
           $c0f7 = wTriggerFadeOut
  SECTION: $c0f8-$c0fb ($0004 bytes) ["level vars"]
           $c0f8 = wLevel
           $c0f9 = wLevelWaitCounter
           $c0fa = wLevelDataAddress
  SECTION: $c0fc-$c0fe ($0003 bytes) ["stage clear vars"]
           $c0fc = wStageClearTimer
           $c0fd = wStageClearFrame
           $c0fe = wLivesToAdd
  SECTION: $c0ff-$c0ff ($0001 byte) ["timer vars"]
           $c0ff = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["controller vars"]
           $c1a0 = wControllerDown
           $c1a1 = wControllerPressed
           $c1a2 = wPaused
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["game vars"]
           $c1a8 = wCountdownFrame
  SECTION: $c1a9-$c1a9 ($0001 byte) ["opening cutscene vars"]
           $c1a9 = wHandWavingFrame
    SLACK: $0e56 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $28f4 bytes in 1 bank
    ROMX: $3e7f bytes in 1 bank
    WRAM0: $01aa bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
