ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$09af ($0860 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level2MapEnd
           $0988 = WindowMap
           $0988 = MenuMapEnd
           $09b0 = WindowMapEnd
  SECTION: $09b0-$1150 ($07a1 bytes) ["Sound Driver"]
           $09b0 = _hUGE_init_banked
           $09b4 = _hUGE_init
           $09b6 = continue_init
           $09bf = _hUGE_mute_channel_banked
           $09c3 = _hUGE_mute_channel
           $09c5 = continue_mute
           $09d0 = hUGE_mute_channel
           $09d6 = hUGE_mute_channel.enable_loop
           $09dd = hUGE_mute_channel.enable_cut
           $09ea = _hUGE_set_position_banked
           $09ee = _hUGE_set_position
           $09f0 = continue_set_position
           $09f7 = hUGE_init
           $09fe = hUGE_init.fill_loop
           $0a22 = hUGE_init.copy_song_descriptor_loop
           $0a2c = _refresh_patterns
           $0a46 = _refresh_patterns.load_pattern
           $0a56 = _load_note_data
           $0a68 = _lookup_note
           $0a72 = _convert_note
           $0a80 = _convert_ch4_note
           $0a97 = _update_channel
           $0aa1 = _update_channel1
           $0aaf = _update_channel2
           $0abd = _update_channel3
           $0acb = _update_channel4
           $0adb = _playnote1
           $0af6 = _playnote2
           $0b11 = _playnote3
           $0b32 = _playnote4
           $0b46 = _doeffect
           $0b5b = _doeffect.jump
           $0b8b = setup_channel_pointer
           $0b99 = fx_set_master_volume
           $0b9e = fx_call_routine
           $0bc0 = fx_call_routine.call_hl
           $0bc1 = fx_set_pan
           $0bc6 = fx_set_duty
           $0bcb = fx_set_duty.chan2
           $0bd5 = fx_set_duty.chan1
           $0bdf = fx_vol_slide
           $0be6 = fx_vol_slide.loop
           $0beb = fx_vol_slide.cont
           $0c1d = fx_vol_slide.cont1
           $0c24 = fx_vol_slide.cont2
           $0c38 = _envelope_registers
           $0c40 = fx_note_delay
           $0c59 = fx_note_delay.play_note
           $0c77 = _play_note_routines
           $0c83 = fx_set_speed
           $0c89 = hUGE_set_position
           $0c89 = fx_pos_jump
           $0c93 = fx_pattern_break
           $0c98 = fx_note_cut
           $0ca0 = fx_note_cut.loop
           $0ca5 = fx_note_cut.cont
           $0caa = note_cut
           $0cc1 = fx_set_volume
           $0cc2 = set_channel_volume
           $0ccd = set_chn_3_vol
           $0cdf = set_chn_3_vol.three
           $0ce3 = set_chn_3_vol.two
           $0ce7 = set_chn_3_vol.one
           $0ceb = set_chn_3_vol.zero
           $0cec = set_chn_3_vol.done
           $0cef = set_chn_2_vol
           $0cff = set_chn_1_vol
           $0d0f = set_chn_4_vol
           $0d1b = fx_vibrato
           $0d2e = fx_vibrato.restore
           $0d33 = fx_vibrato.go_up
           $0d3e = fx_vibrato.finish_vibrato
           $0d44 = fx_arpeggio
           $0d50 = fx_arpeggio.greater_than_two
           $0d52 = fx_arpeggio.test_greater_than_two
           $0d61 = fx_arpeggio.arp_options
           $0d67 = fx_arpeggio.reset_arp
           $0d6a = fx_arpeggio.set_arp2
           $0d6f = fx_arpeggio.set_arp1
           $0d70 = fx_arpeggio.finish_arp
           $0d73 = fx_arpeggio.finish_skip_add
           $0d7c = fx_porta_up
           $0d8b = fx_porta_up.finish
           $0d92 = fx_porta_down
           $0da4 = fx_toneporta
           $0db6 = fx_toneporta.return_skip
           $0dc0 = fx_toneporta.do_toneporta
           $0dd5 = fx_toneporta.high_byte_same
           $0ddb = fx_toneporta.add
           $0ded = fx_toneporta.subtract
           $0e03 = fx_toneporta.set_exact
           $0e05 = fx_toneporta.done
           $0e18 = _setup_instrument_pointer_ch4
           $0e23 = _setup_instrument_pointer
           $0e2a = _setup_instrument_pointer.finish
           $0e33 = _hUGE_dosound_banked
           $0e33 = _hUGE_dosound
           $0e72 = _hUGE_dosound.write_mask1
           $0e75 = _hUGE_dosound.do_setvol1
           $0e88 = _hUGE_dosound.after_note1
           $0ebd = _hUGE_dosound.write_mask2
           $0ec0 = _hUGE_dosound.do_setvol2
           $0ed3 = _hUGE_dosound.after_note2
           $0f5a = _hUGE_dosound.no_wave_copy
           $0f5b = _hUGE_dosound.write_mask3
           $0f5e = _hUGE_dosound.do_setvol3
           $0f69 = _hUGE_dosound.after_note3
           $0fba = _hUGE_dosound.write_mask4
           $0fbd = _hUGE_dosound.do_setvol4
           $0fc8 = _hUGE_dosound.after_note4
           $0fcb = _hUGE_dosound.process_effects
           $0fe7 = _hUGE_dosound.after_effect1
           $1003 = _hUGE_dosound.after_effect2
           $101f = _hUGE_dosound.after_effect3
           $106a = _hUGE_dosound.done_macro
           $1073 = process_tick
           $1073 = _hUGE_dosound.after_effect4
           $1085 = _newrow
           $109d = _newrow.no_break
           $10a8 = _neworder
           $10b5 = _update_current_order
           $10bc = _noreset
           $10c1 = note_table
  SECTION: $1151-$18f0 ($07a0 bytes) ["tilesets"]
           $1151 = PlayerSpriteTiles
           $1251 = EnemyTiles
           $1251 = PlayerSpriteTilesEnd
           $1411 = Level1Tiles
           $1411 = EnemyTilesEnd
           $18f1 = Level1TilesEnd
  SECTION: $18f1-$1d72 ($0482 bytes) ["player"]
           $18f1 = InitializePlayer
           $1944 = UpdateBalloonPosition
           $1944 = UpdateBalloonPosition.balloonLeft
           $1951 = UpdateBalloonPosition.balloonRight
           $195c = UpdateCactusPosition
           $195c = UpdateCactusPosition.cactusLeft
           $1969 = UpdateCactusPosition.cactusRight
           $1974 = SpawnPlayer
           $1974 = SpawnPlayer.cactusLeft
           $1984 = SpawnPlayer.cactusRight
           $1994 = SpawnPlayer.balloonLeft
           $19a4 = SpawnPlayer.balloonRight
           $19b5 = ClearPlayerCactus
           $19c2 = ClearPlayerBalloon
           $19cf = RespawnPlayer
           $19e2 = MoveRight
           $19f2 = MoveRight.canCactusDriftLeft
           $1a04 = MoveRight.cactusDriftLeft
           $1a06 = MoveLeft
           $1a1a = MoveLeft.canCactusDriftRight
           $1a2b = MoveLeft.cactusDriftRight
           $1a2d = MoveDown
           $1a3d = MoveDown.canCactusDriftUp
           $1a4f = MoveDown.cactusDriftUp
           $1a51 = ChargeBoost
           $1a57 = ChargeBoost.isCharging
           $1a5e = ChargeBoost.resetBoost
           $1a64 = ChargeAttack
           $1a6a = ChargeAttack.isCharging
           $1a6f = SpawnBullet
           $1a89 = SpawnBullet.spawnFromLeft
           $1a91 = SpawnBullet.leftOAM
           $1a9f = SpawnBullet.spawnFromRight
           $1aa7 = SpawnBullet.rightOAM
           $1ab5 = ClearBullet
           $1ac1 = BulletUpdate
           $1ac7 = BulletUpdate.isAlive
           $1ad2 = BulletUpdate.offScreen
           $1ad6 = BulletUpdate.onScreen
           $1adc = BulletUpdate.move
           $1ae6 = BulletUpdate.moveLeft
           $1aea = BulletUpdate.moveRight
           $1aec = BulletUpdate.endMove
           $1af4 = PlayerControls
           $1af4 = PlayerControls.right
           $1b07 = PlayerControls.moveRight
           $1b0f = PlayerControls.endRight
           $1b0f = PlayerControls.left
           $1b22 = PlayerControls.moveLeft
           $1b29 = PlayerControls.endLeft
           $1b29 = PlayerControls.up
           $1b3c = PlayerControls.moveUp
           $1b50 = PlayerControls.endUp
           $1b50 = PlayerControls.down
           $1b66 = PlayerControls.endDown
           $1b66 = PlayerControls.canCactusDriftCenterX
           $1b84 = PlayerControls.driftCenterXRight
           $1b87 = PlayerControls.driftCenterXLeft
           $1b88 = PlayerControls.endDriftToCenterX
           $1b88 = PlayerControls.canCactusDriftCenterY
           $1ba9 = PlayerControls.driftCenterYUp
           $1bac = PlayerControls.driftCenterYDown
           $1bad = PlayerControls.endDriftToCenterY
           $1bad = PlayerControls.start
           $1bb8 = PlayerControls.endStart
           $1bb8 = PlayerControls.AButton
           $1bc5 = PlayerControls.activateAttack
           $1bcd = PlayerControls.endA
           $1bcd = PlayerControls.BButton
           $1bda = PlayerControls.activateBoost
           $1be4 = PlayerControls.endB
           $1be5 = MovePlayer
           $1bfa = MovePlayerAutoFlyUp
           $1c13 = FallCactusDown
           $1c28 = FallCactusDown.skipAcceleration
           $1c31 = PopBalloonAnimation
           $1c42 = PopBalloonAnimation.canSwitchFrames
           $1c4e = PopBalloonAnimation.frame0
           $1c60 = PopBalloonAnimation.frame1
           $1c72 = PopBalloonAnimation.clear
           $1c82 = PopBalloonAnimation.endFrame
           $1c8a = CactusFalling
           $1ca4 = CactusFalling.offScreen
           $1cac = CactusFalling.end
           $1cad = NoMoreLives
           $1cb7 = PlayerUpdate
           $1cbe = PlayerUpdate.isAlive
           $1cda = PlayerUpdate.popped
           $1ce5 = PlayerUpdate.popping
           $1ced = PlayerUpdate.falling
           $1cf6 = PlayerUpdate.respawning
           $1cfd = PlayerUpdate.noMoreLives
           $1d01 = PlayerUpdate.respawn
           $1d05 = DeathOfPlayer
           $1d29 = InvincibleBlink
           $1d2f = InvincibleBlink.isStillInvincible
           $1d3e = InvincibleBlink.blinkNormal
           $1d45 = InvincibleBlink.blinkFast
           $1d49 = InvincibleBlink.blinkEnd
           $1d5e = InvincibleBlink.defaultPalette
  SECTION: $1d73-$2100 ($038e bytes) ["level data"]
           $1d73 = Level1
           $1dd0 = Level2
           $1f3f = Level3
           $2030 = InitializeNewLevel
           $2048 = InitializeNewLevel.level1
           $204d = InitializeNewLevel.level2
           $2052 = InitializeNewLevel.level3
           $2057 = InitializeNewLevel.level4
           $2058 = InitializeNewLevel.setLevelDataAddress
           $2060 = InitializeLevelVars
           $2069 = LevelDataHandler
           $2071 = LevelDataHandler.notEmpty
           $2090 = LevelDataHandler.pointBalloon
           $2094 = LevelDataHandler.balloonCactus
           $2098 = LevelDataHandler.bird
           $209c = LevelDataHandler.bomb
           $20a0 = LevelDataHandler.porcupine
           $20a4 = LevelDataManager
           $20c8 = LevelDataManager.spawn
           $20d5 = LevelDataManager.wait
           $20e2 = LevelDataManager.waitEnd
           $20f0 = LevelDataManager.end
  SECTION: $2101-$2304 ($0204 bytes) ["game"]
           $2101 = InitializeGame
           $2109 = LoadLevel1Graphics
           $212c = LoadLevel2Graphics
           $214e = TryToUnpause
           $2165 = TryToUnpause.end
           $2166 = SpawnCountdown
           $2191 = SpawnCountdown.end
           $2192 = Countdown
           $2199 = Countdown.hasCountedDown
           $219c = Countdown.countdown
           $21ad = Countdown.balloonPop
           $21b5 = Countdown.frames
           $21de = Countdown.frame0
           $2200 = Countdown.frame1
           $2222 = Countdown.frame2
           $2243 = Countdown.frame3
           $2264 = Countdown.frame4
           $2285 = Countdown.frame5
           $22a3 = Countdown.remove
           $22b8 = Countdown.endFrame
           $22bf = Countdown.end
           $22c1 = UpdateSprites
           $22d7 = UpdateGameCountdown
           $22ec = UpdateGame
  SECTION: $2305-$2474 ($0170 bytes) ["rom"]
           $2305 = Start
           $2342 = MenuLoopOpening
           $234e = StartMenu
           $2363 = MenuLoop
           $2372 = StartGame
           $23ab = OpeningCutsceneLoop
           $23ba = SetupNextLevel
           $23db = SetupNextLevel.level1
           $23e3 = SetupNextLevel.level2
           $23eb = SetupNextLevel.level3
           $23eb = SetupNextLevel.endLevelSetup
           $23eb = SetupNextLevel.level6
           $23eb = SetupNextLevel.level5
           $23eb = SetupNextLevel.level4
           $241b = GameCountdownLoop
           $242a = GameLoop
           $2439 = StageClear
           $2466 = StageClearLoop
  SECTION: $2475-$25c9 ($0155 bytes) ["window"]
           $2475 = RefreshScore
           $24ac = RefreshTotal
           $24e3 = RefreshLives
           $24ec = RefreshBoostBar
           $24f6 = RefreshBoostBar.isCharging
           $2502 = RefreshBoostBar.isEmpty
           $2508 = RefreshBoostBar.is25Percent
           $250f = RefreshBoostBar.is50Percent
           $2516 = RefreshBoostBar.is75Percent
           $251d = RefreshBoostBar.isReady
           $2523 = RefreshAttackBar
           $252d = RefreshAttackBar.isCharging
           $2539 = RefreshAttackBar.isEmpty
           $253f = RefreshAttackBar.is25Percent
           $2546 = RefreshAttackBar.is50Percent
           $254d = RefreshAttackBar.is75Percent
           $2554 = RefreshAttackBar.isReady
           $255a = LoadWindow.loadTiles
           $255a = LoadWindow
           $2566 = LoadWindow.drawMap
           $2580 = RefreshWindow
           $2596 = RefreshAddLives
           $25a5 = RefreshAddLives.hasLivesToAdd
           $25b2 = RefreshStageClear
  SECTION: $25ca-$270b ($0142 bytes) ["interrupts"]
           $25ca = InitializeInterrupts
           $25e0 = VBlankInterrupt
           $25f0 = LCDInterrupt
           $25fa = LCDInterruptEnd
           $25fe = MenuLCDInterrupt
           $260e = MenuLCDInterrupt.reset
           $2617 = MenuLCDInterrupt.far
           $2625 = MenuLCDInterrupt.close
           $2631 = MenuLCDInterrupt.end
           $2634 = SetMenuInterrupts
           $2642 = ParkLCDInterrupt
           $264e = ParkLCDInterrupt.clouds
           $265c = ParkLCDInterrupt.ground
           $2661 = ParkLCDInterrupt.end
           $2664 = SetParkInterrupts
           $2668 = Level1LCDInterrupt
           $2678 = Level1LCDInterrupt.reset
           $2686 = Level1LCDInterrupt.far
           $2694 = Level1LCDInterrupt.close
           $26a0 = Level1LCDInterrupt.end
           $26a3 = SetLevel1Interrupts
           $26b1 = Level2LCDInterrupt
           $26c5 = Level2LCDInterrupt.reset
           $26d3 = Level2LCDInterrupt.far
           $26e1 = Level2LCDInterrupt.middle
           $26ef = Level2LCDInterrupt.close
           $26fb = Level2LCDInterrupt.end
           $26fe = SetLevel2Interrupts
  SECTION: $270c-$278d ($0082 bytes) ["collision"]
           $270c = CollisionCheck
           $2717 = CollisionCheck.tryOtherY
           $2723 = CollisionCheck.checkX
           $2730 = CollisionCheck.tryOtherX
           $273d = CollisionCheck.collision
           $2740 = CollisionCheck.noCollision
           $2742 = CollisionWithPlayer
           $2752 = OffScreenXEnemies
           $2763 = OffScreenXEnemies.end
           $2765 = OffScreenYEnemies
           $2776 = OffScreenYEnemies.end
           $2778 = OffScreenX
           $2780 = OffScreenX.end
           $2782 = OffScreenY
           $278c = OffScreenY.end
  SECTION: $278e-$2805 ($0078 bytes) ["controller"]
           $278e = InitializeController
           $2793 = ReadInput
           $27c3 = JOY_RIGHT
           $27cb = JOY_LEFT
           $27d3 = JOY_UP
           $27db = JOY_DOWN
           $27e3 = JOY_A
           $27eb = JOY_B
           $27f3 = JOY_SELECT
           $27fb = JOY_START
           $2803 = JOY_FALSE
  SECTION: $2806-$285f ($005a bytes) ["scroll"]
           $2806 = InitializeParallaxScrolling
           $2811 = IncrementScrollOffset
           $2811 = IncrementScrollOffset.close
           $281f = IncrementScrollOffset.middle
           $282d = IncrementScrollOffset.far
           $283b = IncrementScrollOffset.end
           $283c = HorizontalScroll
           $2849 = HorizontalScroll.end
           $284b = VerticalScroll
           $2858 = VerticalScroll.end
           $285a = ResetScroll
  SECTION: $2860-$287d ($001e bytes) ["OAM DMA routine"]
           $2860 = CopyDMARoutine
           $2867 = CopyDMARoutine.copy
           $286e = DMARoutine
           $2872 = DMARoutine.wait
           $2876 = DMARoutineEnd
           $2876 = OAMDMA
    SLACK: $179e bytes

ROMX bank #1:
  SECTION: $4000-$539f ($13a0 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4470 = OpeningCutsceneTilesEnd
           $4470 = OpeningCutsceneSpriteTiles
           $44b0 = OpeningCutsceneSpriteTilesEnd
           $44b0 = IntermissionTiles
           $4660 = IntermissionTilesEnd
           $4660 = Level2Tiles
           $4af0 = Level2TilesEnd
           $4af0 = CountdownTiles
           $4bf0 = CountdownTilesEnd
           $4bf0 = WindowTiles
           $4df0 = WindowTilesEnd
           $4df0 = MenuTiles
           $4e10 = MenuTilesEnd
           $4e10 = MenuTitleTiles
           $53a0 = MenuTitleTilesEnd
  SECTION: $53a0-$5edd ($0b3e bytes) ["Song Data2"]
           $53a0 = angryTheme
           $53b5 = order_cnt
           $53b6 = order1
           $53c0 = order2
           $53ca = order3
           $53d4 = order4
           $53de = P0
           $549e = P1
           $555e = P2
           $561e = P3
           $56de = P4
           $579e = P5
           $585e = P6
           $591e = P7
           $59de = P8
           $5a9e = P9
           $5b5e = P10
           $5c1e = P11
           $5cde = duty_instruments
           $5cde = itSquareinst1
           $5ce2 = itSquareinst2
           $5ce6 = itSquareinst3
           $5cea = itSquareinst4
           $5cee = itSquareinst5
           $5cf2 = itSquareinst6
           $5cf6 = itSquareinst7
           $5cfa = itSquareinst8
           $5cfe = itSquareinst9
           $5d02 = itSquareinst10
           $5d06 = itSquareinst11
           $5d0a = itSquareinst12
           $5d0e = itSquareinst13
           $5d12 = itSquareinst14
           $5d16 = itSquareinst15
           $5d1a = wave_instruments
           $5d1a = itWaveinst1
           $5d1e = itWaveinst2
           $5d22 = itWaveinst3
           $5d26 = itWaveinst4
           $5d2a = itWaveinst5
           $5d2e = itWaveinst6
           $5d32 = itWaveinst7
           $5d36 = itWaveinst8
           $5d3a = itWaveinst9
           $5d3e = itWaveinst10
           $5d42 = itWaveinst11
           $5d46 = itWaveinst12
           $5d4a = itWaveinst13
           $5d4e = itWaveinst14
           $5d52 = itWaveinst15
           $5d56 = noise_instruments
           $5d56 = itNoiseinst1
           $5d5e = itNoiseinst2
           $5d66 = itNoiseinst3
           $5d6e = itNoiseinst4
           $5d76 = itNoiseinst5
           $5d7e = itNoiseinst6
           $5d86 = itNoiseinst7
           $5d8e = itNoiseinst8
           $5d96 = itNoiseinst9
           $5d9e = itNoiseinst10
           $5da6 = itNoiseinst11
           $5dae = itNoiseinst12
           $5db6 = itNoiseinst13
           $5dbe = itNoiseinst14
           $5dc6 = itNoiseinst15
           $5dce = routines
           $5dce = __end_hUGE_Routine_0
           $5dce = __hUGE_Routine_0
           $5dcf = __end_hUGE_Routine_1
           $5dcf = __hUGE_Routine_1
           $5dd0 = __end_hUGE_Routine_2
           $5dd0 = __hUGE_Routine_2
           $5dd1 = __end_hUGE_Routine_3
           $5dd1 = __hUGE_Routine_3
           $5dd2 = __end_hUGE_Routine_4
           $5dd2 = __hUGE_Routine_4
           $5dd3 = __end_hUGE_Routine_5
           $5dd3 = __hUGE_Routine_5
           $5dd4 = __end_hUGE_Routine_6
           $5dd4 = __hUGE_Routine_6
           $5dd5 = __end_hUGE_Routine_7
           $5dd5 = __hUGE_Routine_7
           $5dd6 = __hUGE_Routine_8
           $5dd6 = __end_hUGE_Routine_8
           $5dd7 = __hUGE_Routine_9
           $5dd7 = __end_hUGE_Routine_9
           $5dd8 = __hUGE_Routine_10
           $5dd8 = __end_hUGE_Routine_10
           $5dd9 = __hUGE_Routine_11
           $5dd9 = __end_hUGE_Routine_11
           $5dda = __hUGE_Routine_12
           $5dda = __end_hUGE_Routine_12
           $5ddb = __hUGE_Routine_13
           $5ddb = __end_hUGE_Routine_13
           $5ddc = __end_hUGE_Routine_14
           $5ddc = __hUGE_Routine_14
           $5ddd = __end_hUGE_Routine_15
           $5ddd = __hUGE_Routine_15
           $5dde = waves
           $5dde = wave0
           $5dee = wave1
           $5dfe = wave2
           $5e0e = wave3
           $5e1e = wave4
           $5e2e = wave5
           $5e3e = wave6
           $5e4e = wave7
           $5e5e = wave8
           $5e6e = wave9
           $5e7e = wave10
           $5e8e = wave11
           $5e9e = wave12
           $5eae = wave13
           $5ebe = wave14
           $5ece = wave15
  SECTION: $5ede-$63fb ($051e bytes) ["Song Data"]
           $5ede = menuTheme
           $5ef3 = order_cnt
           $5ef4 = order1
           $5ef6 = order2
           $5ef8 = order3
           $5efa = order4
           $5efc = P1
           $5fbc = P2
           $607c = P3
           $613c = P6
           $61fc = duty_instruments
           $61fc = itSquareinst1
           $6200 = itSquareinst2
           $6204 = itSquareinst3
           $6208 = itSquareinst4
           $620c = itSquareinst5
           $6210 = itSquareinst6
           $6214 = itSquareinst7
           $6218 = itSquareinst8
           $621c = itSquareinst9
           $6220 = itSquareinst10
           $6224 = itSquareinst11
           $6228 = itSquareinst12
           $622c = itSquareinst13
           $6230 = itSquareinst14
           $6234 = itSquareinst15
           $6238 = wave_instruments
           $6238 = itWaveinst1
           $623c = itWaveinst2
           $6240 = itWaveinst3
           $6244 = itWaveinst4
           $6248 = itWaveinst5
           $624c = itWaveinst6
           $6250 = itWaveinst7
           $6254 = itWaveinst8
           $6258 = itWaveinst9
           $625c = itWaveinst10
           $6260 = itWaveinst11
           $6264 = itWaveinst12
           $6268 = itWaveinst13
           $626c = itWaveinst14
           $6270 = itWaveinst15
           $6274 = noise_instruments
           $6274 = itNoiseinst1
           $627c = itNoiseinst2
           $6284 = itNoiseinst3
           $628c = itNoiseinst4
           $6294 = itNoiseinst5
           $629c = itNoiseinst6
           $62a4 = itNoiseinst7
           $62ac = itNoiseinst8
           $62b4 = itNoiseinst9
           $62bc = itNoiseinst10
           $62c4 = itNoiseinst11
           $62cc = itNoiseinst12
           $62d4 = itNoiseinst13
           $62dc = itNoiseinst14
           $62e4 = itNoiseinst15
           $62ec = routines
           $62ec = __end_hUGE_Routine_0
           $62ec = __hUGE_Routine_0
           $62ed = __end_hUGE_Routine_1
           $62ed = __hUGE_Routine_1
           $62ee = __end_hUGE_Routine_2
           $62ee = __hUGE_Routine_2
           $62ef = __end_hUGE_Routine_3
           $62ef = __hUGE_Routine_3
           $62f0 = __end_hUGE_Routine_4
           $62f0 = __hUGE_Routine_4
           $62f1 = __end_hUGE_Routine_5
           $62f1 = __hUGE_Routine_5
           $62f2 = __end_hUGE_Routine_6
           $62f2 = __hUGE_Routine_6
           $62f3 = __end_hUGE_Routine_7
           $62f3 = __hUGE_Routine_7
           $62f4 = __hUGE_Routine_8
           $62f4 = __end_hUGE_Routine_8
           $62f5 = __hUGE_Routine_9
           $62f5 = __end_hUGE_Routine_9
           $62f6 = __hUGE_Routine_10
           $62f6 = __end_hUGE_Routine_10
           $62f7 = __hUGE_Routine_11
           $62f7 = __end_hUGE_Routine_11
           $62f8 = __hUGE_Routine_12
           $62f8 = __end_hUGE_Routine_12
           $62f9 = __hUGE_Routine_13
           $62f9 = __end_hUGE_Routine_13
           $62fa = __end_hUGE_Routine_14
           $62fa = __hUGE_Routine_14
           $62fb = __end_hUGE_Routine_15
           $62fb = __hUGE_Routine_15
           $62fc = waves
           $62fc = wave0
           $630c = wave1
           $631c = wave2
           $632c = wave3
           $633c = wave4
           $634c = wave5
           $635c = wave6
           $636c = wave7
           $637c = wave8
           $638c = wave9
           $639c = wave10
           $63ac = wave11
           $63bc = wave12
           $63cc = wave13
           $63dc = wave14
           $63ec = wave15
  SECTION: $63fc-$67f8 ($03fd bytes) ["balloon cactus"]
           $63fc = InitializeBalloonCactus
           $6405 = InitializeBalloonCactus.loop_u1
           $6410 = SetStruct
           $644d = SpawnBalloonCactus
           $6460 = SpawnBalloonCactus.availableSpace
           $6469 = SpawnBalloonCactus.availableOAMSpace
           $6497 = SpawnBalloonCactus.isLeftside
           $6497 = SpawnBalloonCactus.balloonLeft
           $64b0 = SpawnBalloonCactus.balloonRight
           $64c0 = SpawnBalloonCactus.cactusLeft
           $64ce = SpawnBalloonCactus.cactusRight
           $64de = SpawnBalloonCactus.setStruct
           $64e3 = SpawnBalloonCactus.end
           $64e8 = ClearCactus
           $64fe = ClearBalloon
           $6514 = Clear
           $651e = PopBalloonAnimation
           $652f = PopBalloonAnimation.canSwitchFrames
           $653d = PopBalloonAnimation.frame0
           $6561 = PopBalloonAnimation.frame1
           $6585 = PopBalloonAnimation.clear
           $65a6 = PopBalloonAnimation.endFrame
           $65ad = PopBalloonAnimation.end
           $65ae = CactusFallingCollision
           $65af = CactusFallingCollision.checkBird
           $65b6 = CactusFallingCollision.birdLoop
           $65c7 = CactusFallingCollision.isAlive
           $65f7 = CactusFallingCollision.hitBird
           $6605 = CactusFallingCollision.checkBirdLoop
           $6612 = CactusFallingCollision.end
           $6614 = CactusFalling
           $6626 = CactusFalling.falling
           $663f = CactusFalling.skipAcceleration
           $664b = CactusFalling.offScreen
           $664f = UpdateBalloonPosition
           $664f = UpdateBalloonPosition.balloonLeft
           $6665 = UpdateBalloonPosition.balloonRight
           $6670 = UpdateCactusPosition
           $6670 = UpdateCactusPosition.cactusLeft
           $6686 = UpdateCactusPosition.cactusRight
           $6691 = Move
           $66ac = Move.isLeftside
           $66ba = Move.updatePosition
           $66c1 = DeathOfBalloonCactus
           $66f2 = CollisionBalloonCactus
           $66f2 = CollisionBalloonCactus.checkHit
           $670d = CollisionBalloonCactus.checkHitByBullet
           $672d = CollisionBalloonCactus.checkHitPlayer
           $6747 = BalloonCactusUpdate
           $674e = BalloonCactusUpdate.loop
           $67a5 = BalloonCactusUpdate.isAlive
           $67c2 = BalloonCactusUpdate.offScreen
           $67c7 = BalloonCactusUpdate.popped
           $67d1 = BalloonCactusUpdate.notPopping
           $67db = BalloonCactusUpdate.checkLoop
           $67ea = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $67f9-$6b6e ($0376 bytes) ["bird"]
           $67f9 = InitializeBird
           $6802 = InitializeBird.loop_u1
           $680d = SetStruct
           $6832 = SpawnBird
           $6845 = SpawnBird.availableSpace
           $684f = SpawnBird.availableOAMSpace
           $686c = SpawnBird.isRightside
           $6871 = SpawnBird.birdLeft
           $688a = SpawnBird.birdMiddle
           $689a = SpawnBird.birdRight
           $68ac = SpawnBird.isLeftside
           $68ac = SpawnBird.leftBirdLeft
           $68c5 = SpawnBird.leftBirdMiddle
           $68d5 = SpawnBird.leftBirdRight
           $68e5 = SpawnBird.setStruct
           $68ea = SpawnBird.end
           $68ef = BirdRightsideFlap
           $68f6 = BirdRightsideFlap.soaring
           $691e = BirdRightsideFlap.flapping
           $694f = BirdLeftsideFlap
           $6956 = BirdLeftsideFlap.soaring
           $697e = BirdLeftsideFlap.flapping
           $69af = Clear
           $69cc = UpdateBirdPosition
           $69cc = UpdateBirdPosition.birdLeft
           $69e2 = UpdateBirdPosition.birdMiddle
           $69ee = UpdateBirdPosition.birdRight
           $69f9 = Move
           $6a00 = Move.isRightside
           $6a0e = Move.isLeftside
           $6a18 = Move.moveDown
           $6a26 = Move.moveEnd
           $6a2a = BirdFall
           $6a35 = BirdFall.checkOffscreenY
           $6a47 = BirdFall.end
           $6a49 = DeathOfBird
           $6a61 = DeathOfBird.facingLeft
           $6a8c = DeathOfBird.facingRight
           $6ab7 = CollisionBird
           $6ab7 = CollisionBird.checkHitPlayer
           $6ad1 = BirdUpdate
           $6ad8 = BirdUpdate.loop
           $6b16 = BirdUpdate.isAlive
           $6b3b = BirdUpdate.offScreen
           $6b40 = BirdUpdate.isDead
           $6b51 = BirdUpdate.checkLoop
  SECTION: $6b6f-$6e2f ($02c1 bytes) ["bomb"]
           $6b6f = InitializeBomb
           $6b78 = InitializeBomb.loop_u1
           $6b83 = SetStruct
           $6ba4 = SpawnBomb
           $6bb6 = SpawnBomb.availableSpace
           $6bbf = SpawnBomb.availableOAMSpace
           $6bd5 = SpawnBomb.balloonLeft
           $6bef = SpawnBomb.balloonRight
           $6c00 = SpawnBomb.bombSpace
           $6c0b = SpawnBomb.setStruct
           $6c10 = SpawnBomb.end
           $6c15 = Clear
           $6c32 = Move
           $6c3a = Move.balloonLeft
           $6c50 = Move.balloonRight
           $6c5c = Move.bombSpace
           $6c67 = DeathOfBomb
           $6c71 = CollisionBomb
           $6c71 = CollisionBomb.checkHit
           $6c8f = CollisionBomb.checkHitByBullet
           $6caf = CollisionBomb.end
           $6cb0 = ExplosionAnimation
           $6cc1 = ExplosionAnimation.canSwitchFrames
           $6cd9 = ExplosionAnimation.frame0
           $6cfe = ExplosionAnimation.frame1
           $6d41 = ExplosionAnimation.frame2
           $6d6d = ExplosionAnimation.frame3
           $6d99 = ExplosionAnimation.clear
           $6d9d = ExplosionAnimation.endFrame
           $6da4 = ExplosionAnimation.end
           $6da5 = BombUpdate
           $6dac = BombUpdate.loop
           $6de6 = BombUpdate.isAlive
           $6e03 = BombUpdate.offScreen
           $6e08 = BombUpdate.popped
           $6e12 = BombUpdate.checkLoop
  SECTION: $6e30-$7053 ($0224 bytes) ["point balloon"]
           $6e30 = InitializePointBalloon
           $6e39 = InitializePointBalloon.loop_u1
           $6e44 = SetStruct
           $6e65 = SpawnPointBalloon
           $6e77 = SpawnPointBalloon.availableSpace
           $6e80 = SpawnPointBalloon.availableOAMSpace
           $6e96 = SpawnPointBalloon.balloonLeft
           $6eaf = SpawnPointBalloon.balloonRight
           $6ebf = SpawnPointBalloon.setStruct
           $6ec4 = SpawnPointBalloon.end
           $6ec9 = PopBalloonAnimation
           $6eda = PopBalloonAnimation.canSwitchFrames
           $6ee6 = PopBalloonAnimation.frame0
           $6f0a = PopBalloonAnimation.frame1
           $6f2e = PopBalloonAnimation.clear
           $6f32 = PopBalloonAnimation.endFrame
           $6f3a = Clear
           $6f53 = Move
           $6f5a = Move.balloonLeft
           $6f70 = Move.balloonRight
           $6f7b = DeathOfPointBalloon
           $6f8d = CollisionPointBalloon
           $6f8d = CollisionPointBalloon.checkHit
           $6fa8 = CollisionPointBalloon.checkHitByBullet
           $6fc8 = CollisionPointBalloon.end
           $6fc9 = PointBalloonUpdate
           $6fd0 = PointBalloonUpdate.loop
           $700a = PointBalloonUpdate.isAlive
           $7027 = PointBalloonUpdate.offScreen
           $702c = PointBalloonUpdate.popped
           $7036 = PointBalloonUpdate.checkLoop
           $7045 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $7054-$719c ($0149 bytes) ["porcupine"]
           $7054 = InitializePorcupine
           $705d = InitializePorcupine.loop_u1
           $7068 = SetStruct
           $707d = SpawnPorcupine
           $7090 = SpawnPorcupine.availableSpace
           $709a = SpawnPorcupine.availableOAMSpace
           $70b0 = SpawnPorcupine.topLeft
           $70c9 = SpawnPorcupine.topMiddle
           $70d9 = SpawnPorcupine.topMiddle2
           $70e9 = SpawnPorcupine.topRight
           $70f9 = SpawnPorcupine.bottomLeft
           $7109 = SpawnPorcupine.bottomMiddle
           $711b = SpawnPorcupine.bottomMiddle2
           $712d = SpawnPorcupine.bottomRight
           $713f = SpawnPorcupine.setStruct
           $7144 = SpawnPorcupine.end
           $7149 = PorcupineUpdate
           $7150 = PorcupineUpdate.loop
           $717e = PorcupineUpdate.offScreen
           $717e = PorcupineUpdate.isAlive
           $7180 = PorcupineUpdate.isDead
           $7180 = PorcupineUpdate.checkLoop
           $718f = PorcupineUpdate.checkLoopSkipSet
  SECTION: $719d-$72c0 ($0124 bytes) ["menu"]
           $719d = InitializeMenu
           $71a9 = LoadMenuOpeningGraphics
           $71c1 = LoadMenuGraphics
           $71d9 = SpawnMenuCursor
           $71e2 = SpawnMenuCursor.availableSpace
           $71fd = SpawnMenuCursor.end
           $71fe = BlinkMenuCursor
           $7206 = BlinkMenuCursor.blink
           $7217 = BlinkMenuCursor.show
           $721b = BlinkMenuCursor.empty
           $721f = SelectMode
           $7228 = MenuInput
           $7232 = MenuInput.moveSelected
           $7238 = MenuInput.selectMode
           $7241 = MenuInput.end
           $7242 = UpdateMenuOpening
           $725e = UpdateMenuOpening.startSound
           $7263 = UpdateMenuOpening.scrollUpTitle
           $726f = UpdateMenuOpening.endSound
           $7274 = UpdateMenuOpening.scrollDownTitle
           $7280 = UpdateMenuOpening.scrollUpTitle2
           $728c = UpdateMenuOpening.fadeOut
           $7292 = UpdateMenuOpening.next
           $7296 = UpdateMenuOpening.endFrame
           $729d = UpdateMenuOpening.end
           $729e = UpdateMenu
           $729e = UpdateMenu.fadeIn
           $72a4 = UpdateMenu.hasFadedIn
           $72b8 = UpdateMenu.fadeOut
  SECTION: $72c1-$738f ($00cf bytes) ["opening cutscene"]
           $72c1 = InitializeOpeningCutscene
           $72c6 = LoadParkGraphics
           $72f0 = SpawnHandWave
           $7314 = HandWaveAnimation
           $731b = HandWaveAnimation.frame0
           $7337 = HandWaveAnimation.frame1
           $7352 = HandWaveAnimation.end
           $7353 = UpdatePark.fadeIn
           $7353 = UpdatePark
           $7359 = UpdatePark.hasFadedIn
           $7372 = UpdatePark.fadeOut
           $737a = UpdatePark.skipFade
           $737d = UpdatePark.moveUp
           $7386 = UpdatePark.flyUpNormal
           $738c = UpdatePark.flyUpFast
  SECTION: $7390-$745d ($00ce bytes) ["palettes"]
           $7390 = ResetFading
           $739e = InitializePalettes
           $73b0 = FadeOutPalettes
           $73b7 = FadeOutPalettes.hasFadedIn
           $73ba = FadeOutPalettes.fadeOut
           $73da = FadeOutPalettes.fade1
           $73e2 = FadeOutPalettes.fade2
           $73ea = FadeOutPalettes.fade3
           $73f2 = FadeOutPalettes.fade4
           $73f8 = FadeOutPalettes.fadePalettes
           $73fe = FadeOutPalettes.increaseFrame
           $7405 = FadeOutPalettes.end
           $7407 = FadeInPalettes
           $740e = FadeInPalettes.hasFadedIn
           $7411 = FadeInPalettes.fadeIn
           $7431 = FadeInPalettes.fade1
           $7439 = FadeInPalettes.fade2
           $7441 = FadeInPalettes.fade3
           $7449 = FadeInPalettes.fade4
           $744f = FadeInPalettes.fadePalettes
           $7455 = FadeInPalettes.increaseFrame
           $745c = FadeInPalettes.end
  SECTION: $745e-$7517 ($00ba bytes) ["sound"]
           $745e = AUDIO_OFF
           $7462 = AUDIO_ON
           $7467 = PopSound
           $747a = ExplosionSound
           $7487 = WaveSound
           $7494 = FallingSound
           $74a9 = RisingSound
           $74be = StopSweepSound
           $74c3 = CollectSound
           $74d8 = WrongAnswerSound
           $74ef = PercussionSound
           $74fc = BassSound
           $750d = ClearSound
  SECTION: $7518-$75cb ($00b4 bytes) ["memory"]
           $7518 = MEMCPY
           $7518 = MEMCPY.loop
           $751c = MEMCPY.checkLoop
           $7521 = MEMCPY_WITH_OFFSET
           $7522 = MEMCPY_WITH_OFFSET.loop
           $752d = MEMCPY_WITH_OFFSET.checkLoop
           $7533 = MEMCPY_SINGLE_SCREEN
           $7535 = MEMCPY_SINGLE_SCREEN.loop
           $7549 = MEMCPY_SINGLE_SCREEN.checkLoop
           $754f = ClearOAM
           $7556 = ClearOAM.loop_u2
           $755f = ClearRAM
           $7566 = ClearRAM.loop_u3
           $756f = RequestOAMSpace
           $7578 = RequestOAMSpace.loop
           $758f = RequestOAMSpace.availableSpace
           $7594 = RequestOAMSpace.sufficientSpace
           $75a4 = RequestOAMSpace.isNotZero4
           $75a5 = RequestOAMSpace.isNotZero3
           $75a6 = RequestOAMSpace.isNotZero2
           $75a7 = RequestOAMSpace.isNotZero1
           $75a9 = RequestOAMSpace.notEnoughSprites
           $75b1 = RequestOAMSpace.end
           $75b4 = RequestRAMSpace
           $75b4 = RequestRAMSpace.loop
           $75b9 = RequestRAMSpace.availableSpace
           $75bd = RequestRAMSpace.checkLoop
           $75ca = RequestRAMSpace.noFreeSpace
           $75cb = RequestRAMSpace.end
  SECTION: $75cc-$7676 ($00ab bytes) ["stage clear"]
           $75cc = InitializeStageClear
           $75d9 = LoadStageClearGraphics
           $75f4 = UpdateStageClear
           $7624 = UpdateStageClear.pause
           $7635 = UpdateStageClear.copyFirstDigitToTotal
           $7649 = UpdateStageClear.copyPointsToTotal
           $7659 = UpdateStageClear.addGainedLives
           $766f = UpdateStageClear.endFrame
  SECTION: $7677-$76f2 ($007c bytes) ["score"]
           $7677 = InitializeScore
           $767f = InitializeTotal
           $7687 = AddPoints
           $768e = AddPoints.carry
           $7697 = DecrementPoints
           $76a0 = DecrementPoints.carry
           $76a7 = DecrementPoints.checkCapAtZero
           $76b0 = DecrementPoints.noCap
           $76b5 = IsScoreZero
           $76c4 = AddTotal
           $76c7 = AddTotal.saveFourthDigit
           $76cf = AddTotal.toBCD
           $76d3 = AddTotal.carry
           $76d7 = AddTotal.checkAddLife
           $76e1 = AddTotal.addLife
           $76ec = AddTotal.checkLoop
  SECTION: $76f3-$772c ($003a bytes) ["math"]
           $76f3 = MODULO
           $76f5 = MODULO.loop
           $76fa = DIVISION
           $7700 = DIVISION.loop
           $7705 = DIVISION.end
           $7708 = ToBCD
           $771e = MULTIPLY
           $7720 = MULTIPLY.loop
           $772b = MULTIPLY.end
  SECTION: $772d-$775e ($0032 bytes) ["lcd"]
           $772d = LCD_OFF
           $7734 = LCD_ON
           $773b = LCD_ON_NO_WINDOW
           $7742 = WaitVBlank
           $7749 = WaitVBlank.loop
           $7754 = SetupWindow
  SECTION: $775f-$7773 ($0015 bytes) ["general initialization"]
           $775f = InitializeGeneralVars
  SECTION: $7774-$777b ($0008 bytes) ["timer"]
           $7774 = UpdateGlobalTimer
    SLACK: $0884 bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["level vars"]
           $c0f6 = wLevel
           $c0f7 = wLevelWaitCounter
           $c0f8 = wLevelDataAddress
  SECTION: $c0fa-$c0fc ($0003 bytes) ["stage clear vars"]
           $c0fa = wStageClearTimer
           $c0fb = wStageClearFrame
           $c0fc = wLivesToAdd
  SECTION: $c0fd-$c0ff ($0003 bytes) ["controller vars"]
           $c0fd = wControllerDown
           $c0fe = wControllerPressed
           $c0ff = wPaused
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["scroll vars"]
           $c1a0 = wParallaxClose
           $c1a1 = wParallaxMiddle
           $c1a2 = wParallaxFar
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["timer vars"]
           $c1a8 = wGlobalTimer
  SECTION: $c1a9-$c1a9 ($0001 byte) ["game vars"]
           $c1a9 = wCountdownFrame
  SECTION: $c1aa-$c1aa ($0001 byte) ["opening cutscene vars"]
           $c1aa = wHandWavingFrame
    SLACK: $0e55 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $2862 bytes in 1 bank
    ROMX: $377c bytes in 1 bank
    WRAM0: $01ab bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
