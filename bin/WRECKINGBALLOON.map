ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00c8 ($007e bytes) ["collision"]
           $004b = CollisionCheck
           $0056 = CollisionCheck.tryOtherY
           $0062 = CollisionCheck.checkX
           $006f = CollisionCheck.tryOtherX
           $007c = CollisionCheck.collision
           $007f = CollisionCheck.noCollision
           $0081 = CollisionWithPlayer
           $008c = CollisionFallingEnemy
           $008d = OffScreenXEnemies
           $009e = OffScreenXEnemies.end
           $00a0 = OffScreenYEnemies
           $00b1 = OffScreenYEnemies.end
           $00b3 = OffScreenX
           $00bb = OffScreenX.end
           $00bd = OffScreenY
           $00c7 = OffScreenY.end
  SECTION: $00c9-$00ec ($0024 bytes) ["scroll"]
           $00c9 = HorizontalScroll
           $00d6 = HorizontalScroll.end
           $00d8 = VerticalScroll
           $00e5 = VerticalScroll.end
           $00e7 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$162f ($047f bytes) ["player"]
           $11b1 = InitializePlayer
           $1204 = UpdateBalloonPosition
           $1204 = UpdateBalloonPosition.balloonLeft
           $1211 = UpdateBalloonPosition.balloonRight
           $121c = UpdateCactusPosition
           $121c = UpdateCactusPosition.cactusLeft
           $1229 = UpdateCactusPosition.cactusRight
           $1234 = SpawnPlayer
           $1234 = SpawnPlayer.cactusLeft
           $1244 = SpawnPlayer.cactusRight
           $1254 = SpawnPlayer.balloonLeft
           $1264 = SpawnPlayer.balloonRight
           $1275 = ClearPlayerCactus
           $1282 = ClearPlayerBalloon
           $128f = RespawnPlayer
           $12a2 = MoveRight
           $12b2 = MoveRight.canCactusDriftLeft
           $12c4 = MoveRight.cactusDriftLeft
           $12c6 = MoveLeft
           $12da = MoveLeft.canCactusDriftRight
           $12eb = MoveLeft.cactusDriftRight
           $12ed = MoveDown
           $12fd = MoveDown.canCactusDriftUp
           $130f = MoveDown.cactusDriftUp
           $1311 = ChargeBoost
           $1317 = ChargeBoost.isCharging
           $131e = ChargeBoost.resetBoost
           $1324 = ChargeAttack
           $132a = ChargeAttack.isCharging
           $132f = SpawnBullet
           $1349 = SpawnBullet.spawnFromLeft
           $1351 = SpawnBullet.leftOAM
           $135f = SpawnBullet.spawnFromRight
           $1367 = SpawnBullet.rightOAM
           $1375 = ClearBullet
           $1381 = BulletUpdate
           $1387 = BulletUpdate.isAlive
           $1392 = BulletUpdate.offScreen
           $1396 = BulletUpdate.onScreen
           $139c = BulletUpdate.move
           $13a6 = BulletUpdate.moveLeft
           $13aa = BulletUpdate.moveRight
           $13ac = BulletUpdate.endMove
           $13b4 = PlayerControls
           $13b4 = PlayerControls.right
           $13c7 = PlayerControls.moveRight
           $13cf = PlayerControls.endRight
           $13cf = PlayerControls.left
           $13e2 = PlayerControls.moveLeft
           $13e9 = PlayerControls.endLeft
           $13e9 = PlayerControls.up
           $13fc = PlayerControls.moveUp
           $1410 = PlayerControls.endUp
           $1410 = PlayerControls.down
           $1426 = PlayerControls.endDown
           $1426 = PlayerControls.canCactusDriftCenterX
           $1444 = PlayerControls.driftCenterXRight
           $1447 = PlayerControls.driftCenterXLeft
           $1448 = PlayerControls.endDriftToCenterX
           $1448 = PlayerControls.canCactusDriftCenterY
           $1469 = PlayerControls.driftCenterYUp
           $146c = PlayerControls.driftCenterYDown
           $146d = PlayerControls.endDriftToCenterY
           $146d = PlayerControls.start
           $1478 = PlayerControls.endStart
           $1478 = PlayerControls.AButton
           $1485 = PlayerControls.activateAttack
           $148d = PlayerControls.endA
           $148d = PlayerControls.BButton
           $149a = PlayerControls.activateBoost
           $14a4 = PlayerControls.endB
           $14a5 = MovePlayer
           $14ba = MovePlayerAutoFlyUp
           $14d3 = FallCactusDown
           $14e8 = FallCactusDown.skipAcceleration
           $14f1 = PopBalloonAnimation
           $1502 = PopBalloonAnimation.canSwitchFrames
           $150e = PopBalloonAnimation.frame0
           $1520 = PopBalloonAnimation.frame1
           $1532 = PopBalloonAnimation.clear
           $1542 = PopBalloonAnimation.endFrame
           $1547 = CactusFalling
           $1561 = CactusFalling.offScreen
           $1569 = CactusFalling.end
           $156a = NoMoreLives
           $1574 = PlayerUpdate
           $157b = PlayerUpdate.isAlive
           $1597 = PlayerUpdate.popped
           $15a2 = PlayerUpdate.popping
           $15aa = PlayerUpdate.falling
           $15b3 = PlayerUpdate.respawning
           $15ba = PlayerUpdate.noMoreLives
           $15be = PlayerUpdate.respawn
           $15c2 = DeathOfPlayer
           $15e6 = InvincibleBlink
           $15ec = InvincibleBlink.isStillInvincible
           $15fb = InvincibleBlink.blinkNormal
           $1602 = InvincibleBlink.blinkFast
           $1606 = InvincibleBlink.blinkEnd
           $161b = InvincibleBlink.defaultPalette
  SECTION: $1630-$1892 ($0263 bytes) ["graphics"]
           $1630 = AddBGTiles8800Method
           $163a = AddBGTiles8800Method.tilesFitBlock
           $163f = AddBGTiles8800Method.tilesExceedBlock
           $165e = AddBGTiles8800Method.end
           $1661 = LoadPlayerTiles
           $166e = LoadWindow
           $166e = LoadWindow.loadTiles
           $167a = LoadWindow.loadMap
           $1689 = LoadEnemyTiles
           $16ae = LoadWorld1
           $16ca = LoadClassicData
           $16d4 = LoadMenuOpeningData
           $16f0 = LoadMenuData
           $1709 = RefreshScore
           $1743 = RefreshLives
           $174c = RefreshBoostBar
           $1756 = RefreshBoostBar.isCharging
           $1760 = RefreshBoostBar.isHalfReady
           $1767 = RefreshBoostBar.isReady
           $176d = RefreshAttackBar
           $1777 = RefreshAttackBar.isCharging
           $1781 = RefreshAttackBar.isHalfReady
           $1788 = RefreshAttackBar.isReady
           $178e = RefreshWindow
           $17a1 = RefreshWindow.end
           $17a2 = ClearAllTiles
           $17ab = ClearAllTiles.loop_u4
           $17ba = ClearAllTiles.loop_u5
           $17c9 = ClearAllTiles.loop_u6
           $17d4 = ClearMap
           $17dd = ClearMap.loop_u7
           $17e8 = ReplaceTilemapHorizontal
           $1811 = ReplaceTilemapHorizontal.handleZero
           $1813 = ReplaceTilemapHorizontal.handleZeroEnd
           $181f = ReplaceTilemapHorizontal.loop
           $183d = ReplaceTilemapHorizontal.end
           $1842 = MoveToNextTilemap
           $1855 = MoveToNextTilemap.canUpdateTilemap
           $1868 = MoveToNextTilemap.clouds1
           $187d = MoveToNextTilemap.clouds2
           $1890 = MoveToNextTilemap.end
  SECTION: $1893-$19f9 ($0167 bytes) ["level data"]
           $1893 = W1L1W1
           $1896 = W1L1W2
           $1896 = W1L1W1End
           $189c = W1L1W3
           $189c = W1L1W2End
           $18a5 = W1L1W4
           $18a5 = W1L1W3End
           $18ab = W1L2W1
           $18ab = W1L1W4End
           $18b4 = W1L2W2
           $18b4 = W1L2W1End
           $18ba = W1L2W3
           $18ba = W1L2W2End
           $18c0 = W1L2W4
           $18c0 = W1L2W3End
           $18cc = W1L2W4End
           $18cc = W2L1
           $18cf = W2L1End
           $18cf = InitializeLevelVars
           $18db = LevelDataHandler
           $18db = LevelDataHandler.loop
           $18f6 = LevelDataHandler.pointBalloon
           $1905 = LevelDataHandler.balloonCactus
           $1914 = LevelDataHandler.bird
           $1923 = LevelDataHandler.bomb
           $1932 = LevelDataHandler.porcupine
           $1941 = LevelDataHandler.empty
           $1943 = LevelDataHandler.loopCheck
           $1949 = LevelDataHandler.end
           $194a = LevelDataManager
           $1967 = LevelDataManager.w1
           $1975 = LevelDataManager.w1_l1
           $198b = LevelDataManager.w1_l1_w1
           $1993 = LevelDataManager.w1_l1_w2
           $199b = LevelDataManager.w1_l1_w3
           $19a3 = LevelDataManager.w1_l1_w4
           $19b6 = LevelDataManager.w1_l2
           $19cb = LevelDataManager.w1_l2_w1
           $19d3 = LevelDataManager.w1_l2_w2
           $19db = LevelDataManager.w1_l2_w3
           $19e3 = LevelDataManager.w1_l2_w4
           $19eb = LevelDataManager.w2
           $19ed = LevelDataManager.w3
           $19ef = LevelDataManager.handle
           $19f9 = LevelDataManager.end
  SECTION: $19fa-$1ade ($00e5 bytes) ["rom"]
           $19fa = Start
           $1a34 = MenuLoopOpening
           $1a34 = StartMenu
           $1a4c = StartClassic
           $1a4c = MenuLoop
           $1a9d = ParkLoop
           $1a9d = PreGameLoop
           $1ac1 = GameLoopCountdown
           $1ad0 = GameLoop
  SECTION: $1adf-$1bac ($00ce bytes) ["interrupts"]
           $1adf = InitializeInterrupts
           $1af5 = VBlankInterrupt
           $1b05 = LCDInterrupt
           $1b0f = LCDInterruptEnd
           $1b13 = MenuLCDInterrupt
           $1b23 = MenuLCDInterrupt.reset
           $1b2c = MenuLCDInterrupt.far
           $1b3a = MenuLCDInterrupt.close
           $1b46 = MenuLCDInterrupt.end
           $1b49 = SetMenuInterrupts
           $1b57 = ParkLCDInterrupt
           $1b63 = ParkLCDInterrupt.clouds
           $1b71 = ParkLCDInterrupt.ground
           $1b76 = ParkLCDInterrupt.end
           $1b79 = SetParkInterrupts
           $1b7d = ClassicLCDInterrupt
           $1b9f = SetClassicInterrupts
  SECTION: $1bad-$1c24 ($0078 bytes) ["controller"]
           $1bad = InitializeController
           $1bb2 = ReadInput
           $1be2 = JOY_RIGHT
           $1bea = JOY_LEFT
           $1bf2 = JOY_UP
           $1bfa = JOY_DOWN
           $1c02 = JOY_A
           $1c0a = JOY_B
           $1c12 = JOY_SELECT
           $1c1a = JOY_START
           $1c22 = JOY_FALSE
  SECTION: $1c25-$1c42 ($001e bytes) ["OAM DMA routine"]
           $1c25 = CopyDMARoutine
           $1c2c = CopyDMARoutine.copy
           $1c33 = DMARoutine
           $1c37 = DMARoutine.wait
           $1c3b = DMARoutineEnd
           $1c3b = OAMDMA
    SLACK: $23ea bytes

ROMX bank #1:
  SECTION: $4000-$539f ($13a0 bytes) ["tilesets"]
           $4000 = PlayerSpriteTiles
           $4100 = EnemyTiles
           $4100 = PlayerSpriteTilesEnd
           $42c0 = PorcupineTiles
           $42c0 = EnemyTilesEnd
           $43a0 = PorcupineTilesEnd
           $43a0 = BackgroundTiles
           $46f0 = BackgroundTilesEnd
           $46f0 = ClassicParkTiles
           $4730 = CountdownTiles
           $4730 = ClassicParkTilesEnd
           $4830 = CountdownTilesEnd
           $4830 = WindowTiles
           $4a00 = WindowTilesEnd
           $4a00 = MenuTiles
           $4a20 = MenuTilesEnd
           $4a20 = MenuTitleTiles
           $53a0 = MenuTitleTilesEnd
  SECTION: $53a0-$5edd ($0b3e bytes) ["Song Data2"]
           $53a0 = angryTheme
           $53b5 = order_cnt
           $53b6 = order1
           $53c0 = order2
           $53ca = order3
           $53d4 = order4
           $53de = P0
           $549e = P1
           $555e = P2
           $561e = P3
           $56de = P4
           $579e = P5
           $585e = P6
           $591e = P7
           $59de = P8
           $5a9e = P9
           $5b5e = P10
           $5c1e = P11
           $5cde = duty_instruments
           $5cde = itSquareinst1
           $5ce2 = itSquareinst2
           $5ce6 = itSquareinst3
           $5cea = itSquareinst4
           $5cee = itSquareinst5
           $5cf2 = itSquareinst6
           $5cf6 = itSquareinst7
           $5cfa = itSquareinst8
           $5cfe = itSquareinst9
           $5d02 = itSquareinst10
           $5d06 = itSquareinst11
           $5d0a = itSquareinst12
           $5d0e = itSquareinst13
           $5d12 = itSquareinst14
           $5d16 = itSquareinst15
           $5d1a = wave_instruments
           $5d1a = itWaveinst1
           $5d1e = itWaveinst2
           $5d22 = itWaveinst3
           $5d26 = itWaveinst4
           $5d2a = itWaveinst5
           $5d2e = itWaveinst6
           $5d32 = itWaveinst7
           $5d36 = itWaveinst8
           $5d3a = itWaveinst9
           $5d3e = itWaveinst10
           $5d42 = itWaveinst11
           $5d46 = itWaveinst12
           $5d4a = itWaveinst13
           $5d4e = itWaveinst14
           $5d52 = itWaveinst15
           $5d56 = noise_instruments
           $5d56 = itNoiseinst1
           $5d5e = itNoiseinst2
           $5d66 = itNoiseinst3
           $5d6e = itNoiseinst4
           $5d76 = itNoiseinst5
           $5d7e = itNoiseinst6
           $5d86 = itNoiseinst7
           $5d8e = itNoiseinst8
           $5d96 = itNoiseinst9
           $5d9e = itNoiseinst10
           $5da6 = itNoiseinst11
           $5dae = itNoiseinst12
           $5db6 = itNoiseinst13
           $5dbe = itNoiseinst14
           $5dc6 = itNoiseinst15
           $5dce = routines
           $5dce = __end_hUGE_Routine_0
           $5dce = __hUGE_Routine_0
           $5dcf = __end_hUGE_Routine_1
           $5dcf = __hUGE_Routine_1
           $5dd0 = __end_hUGE_Routine_2
           $5dd0 = __hUGE_Routine_2
           $5dd1 = __end_hUGE_Routine_3
           $5dd1 = __hUGE_Routine_3
           $5dd2 = __end_hUGE_Routine_4
           $5dd2 = __hUGE_Routine_4
           $5dd3 = __end_hUGE_Routine_5
           $5dd3 = __hUGE_Routine_5
           $5dd4 = __end_hUGE_Routine_6
           $5dd4 = __hUGE_Routine_6
           $5dd5 = __end_hUGE_Routine_7
           $5dd5 = __hUGE_Routine_7
           $5dd6 = __hUGE_Routine_8
           $5dd6 = __end_hUGE_Routine_8
           $5dd7 = __hUGE_Routine_9
           $5dd7 = __end_hUGE_Routine_9
           $5dd8 = __hUGE_Routine_10
           $5dd8 = __end_hUGE_Routine_10
           $5dd9 = __hUGE_Routine_11
           $5dd9 = __end_hUGE_Routine_11
           $5dda = __hUGE_Routine_12
           $5dda = __end_hUGE_Routine_12
           $5ddb = __hUGE_Routine_13
           $5ddb = __end_hUGE_Routine_13
           $5ddc = __end_hUGE_Routine_14
           $5ddc = __hUGE_Routine_14
           $5ddd = __end_hUGE_Routine_15
           $5ddd = __hUGE_Routine_15
           $5dde = waves
           $5dde = wave0
           $5dee = wave1
           $5dfe = wave2
           $5e0e = wave3
           $5e1e = wave4
           $5e2e = wave5
           $5e3e = wave6
           $5e4e = wave7
           $5e5e = wave8
           $5e6e = wave9
           $5e7e = wave10
           $5e8e = wave11
           $5e9e = wave12
           $5eae = wave13
           $5ebe = wave14
           $5ece = wave15
  SECTION: $5ede-$63fb ($051e bytes) ["Song Data"]
           $5ede = menuTheme
           $5ef3 = order_cnt
           $5ef4 = order1
           $5ef6 = order2
           $5ef8 = order3
           $5efa = order4
           $5efc = P1
           $5fbc = P2
           $607c = P3
           $613c = P6
           $61fc = duty_instruments
           $61fc = itSquareinst1
           $6200 = itSquareinst2
           $6204 = itSquareinst3
           $6208 = itSquareinst4
           $620c = itSquareinst5
           $6210 = itSquareinst6
           $6214 = itSquareinst7
           $6218 = itSquareinst8
           $621c = itSquareinst9
           $6220 = itSquareinst10
           $6224 = itSquareinst11
           $6228 = itSquareinst12
           $622c = itSquareinst13
           $6230 = itSquareinst14
           $6234 = itSquareinst15
           $6238 = wave_instruments
           $6238 = itWaveinst1
           $623c = itWaveinst2
           $6240 = itWaveinst3
           $6244 = itWaveinst4
           $6248 = itWaveinst5
           $624c = itWaveinst6
           $6250 = itWaveinst7
           $6254 = itWaveinst8
           $6258 = itWaveinst9
           $625c = itWaveinst10
           $6260 = itWaveinst11
           $6264 = itWaveinst12
           $6268 = itWaveinst13
           $626c = itWaveinst14
           $6270 = itWaveinst15
           $6274 = noise_instruments
           $6274 = itNoiseinst1
           $627c = itNoiseinst2
           $6284 = itNoiseinst3
           $628c = itNoiseinst4
           $6294 = itNoiseinst5
           $629c = itNoiseinst6
           $62a4 = itNoiseinst7
           $62ac = itNoiseinst8
           $62b4 = itNoiseinst9
           $62bc = itNoiseinst10
           $62c4 = itNoiseinst11
           $62cc = itNoiseinst12
           $62d4 = itNoiseinst13
           $62dc = itNoiseinst14
           $62e4 = itNoiseinst15
           $62ec = routines
           $62ec = __end_hUGE_Routine_0
           $62ec = __hUGE_Routine_0
           $62ed = __end_hUGE_Routine_1
           $62ed = __hUGE_Routine_1
           $62ee = __end_hUGE_Routine_2
           $62ee = __hUGE_Routine_2
           $62ef = __end_hUGE_Routine_3
           $62ef = __hUGE_Routine_3
           $62f0 = __end_hUGE_Routine_4
           $62f0 = __hUGE_Routine_4
           $62f1 = __end_hUGE_Routine_5
           $62f1 = __hUGE_Routine_5
           $62f2 = __end_hUGE_Routine_6
           $62f2 = __hUGE_Routine_6
           $62f3 = __end_hUGE_Routine_7
           $62f3 = __hUGE_Routine_7
           $62f4 = __hUGE_Routine_8
           $62f4 = __end_hUGE_Routine_8
           $62f5 = __hUGE_Routine_9
           $62f5 = __end_hUGE_Routine_9
           $62f6 = __hUGE_Routine_10
           $62f6 = __end_hUGE_Routine_10
           $62f7 = __hUGE_Routine_11
           $62f7 = __end_hUGE_Routine_11
           $62f8 = __hUGE_Routine_12
           $62f8 = __end_hUGE_Routine_12
           $62f9 = __hUGE_Routine_13
           $62f9 = __end_hUGE_Routine_13
           $62fa = __end_hUGE_Routine_14
           $62fa = __hUGE_Routine_14
           $62fb = __end_hUGE_Routine_15
           $62fb = __hUGE_Routine_15
           $62fc = waves
           $62fc = wave0
           $630c = wave1
           $631c = wave2
           $632c = wave3
           $633c = wave4
           $634c = wave5
           $635c = wave6
           $636c = wave7
           $637c = wave8
           $638c = wave9
           $639c = wave10
           $63ac = wave11
           $63bc = wave12
           $63cc = wave13
           $63dc = wave14
           $63ec = wave15
  SECTION: $63fc-$675e ($0363 bytes) ["balloon cactus"]
           $63fc = InitializeBalloonCactus
           $6405 = InitializeBalloonCactus.loop_u1
           $6410 = SetStruct
           $644d = SpawnBalloonCactus
           $6460 = SpawnBalloonCactus.availableSpace
           $6469 = SpawnBalloonCactus.availableOAMSpace
           $6497 = SpawnBalloonCactus.isLeftside
           $6497 = SpawnBalloonCactus.balloonLeft
           $64af = SpawnBalloonCactus.balloonRight
           $64bf = SpawnBalloonCactus.cactusLeft
           $64cd = SpawnBalloonCactus.cactusRight
           $64dd = SpawnBalloonCactus.setStruct
           $64e2 = SpawnBalloonCactus.end
           $64e7 = ClearCactus
           $64fc = ClearBalloon
           $6510 = Clear
           $651a = PopBalloonAnimation
           $652b = PopBalloonAnimation.canSwitchFrames
           $6539 = PopBalloonAnimation.frame0
           $655b = PopBalloonAnimation.frame1
           $657d = PopBalloonAnimation.clear
           $659c = PopBalloonAnimation.endFrame
           $65a0 = PopBalloonAnimation.end
           $65a1 = CactusFalling
           $65b3 = CactusFalling.falling
           $65c9 = CactusFalling.skipAcceleration
           $65d5 = CactusFalling.offScreen
           $65d8 = CactusFalling.end
           $65d9 = UpdateBalloonPosition
           $65d9 = UpdateBalloonPosition.balloonLeft
           $65ee = UpdateBalloonPosition.balloonRight
           $65f9 = UpdateCactusPosition
           $65f9 = UpdateCactusPosition.cactusLeft
           $660e = UpdateCactusPosition.cactusRight
           $6619 = Move
           $6634 = Move.isLeftside
           $6642 = Move.updatePosition
           $6649 = DeathOfBalloonCactus
           $6678 = CollisionBalloonCactus
           $6678 = CollisionBalloonCactus.checkHit
           $6690 = CollisionBalloonCactus.checkHitPlayer
           $66af = BalloonCactusUpdate
           $66b6 = BalloonCactusUpdate.loop
           $670c = BalloonCactusUpdate.isAlive
           $6729 = BalloonCactusUpdate.offScreen
           $672e = BalloonCactusUpdate.popped
           $6738 = BalloonCactusUpdate.notPopping
           $6742 = BalloonCactusUpdate.checkLoop
           $6750 = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $675f-$6ab7 ($0359 bytes) ["bird"]
           $675f = InitializeBird
           $6768 = InitializeBird.loop_u1
           $6773 = SetStruct
           $6794 = SpawnBird
           $67a7 = SpawnBird.availableSpace
           $67b1 = SpawnBird.availableOAMSpace
           $67ce = SpawnBird.isRightside
           $67d3 = SpawnBird.birdLeft
           $67eb = SpawnBird.birdMiddle
           $67fb = SpawnBird.birdRight
           $680d = SpawnBird.isLeftside
           $680d = SpawnBird.leftBirdLeft
           $6825 = SpawnBird.leftBirdMiddle
           $6835 = SpawnBird.leftBirdRight
           $6845 = SpawnBird.setStruct
           $684a = SpawnBird.end
           $684f = BirdRightsideFlap
           $6856 = BirdRightsideFlap.soaring
           $687c = BirdRightsideFlap.flapping
           $68ab = BirdLeftsideFlap
           $68b2 = BirdLeftsideFlap.soaring
           $68d8 = BirdLeftsideFlap.flapping
           $6907 = Clear
           $6923 = UpdateBirdPosition
           $6923 = UpdateBirdPosition.birdLeft
           $6938 = UpdateBirdPosition.birdMiddle
           $6944 = UpdateBirdPosition.birdRight
           $694f = Move
           $6956 = Move.isRightside
           $6964 = Move.isLeftside
           $696e = Move.moveDown
           $697c = Move.moveEnd
           $6980 = BirdFall
           $698c = BirdFall.checkOffscreenY
           $699e = BirdFall.end
           $69a1 = DeathOfBird
           $69b9 = DeathOfBird.facingLeft
           $69e1 = DeathOfBird.facingRight
           $6a09 = CollisionBird
           $6a09 = CollisionBird.checkHitPlayer
           $6a28 = BirdUpdate
           $6a2f = BirdUpdate.loop
           $6a68 = BirdUpdate.isAlive
           $6a85 = BirdUpdate.offScreen
           $6a8a = BirdUpdate.isDead
           $6a9b = BirdUpdate.checkLoop
  SECTION: $6ab8-$6d4c ($0295 bytes) ["game"]
           $6ab8 = InitializeGame
           $6ac3 = UpdatePark.fadeIn
           $6ac3 = UpdatePark
           $6ac9 = UpdatePark.hasFadedIn
           $6ae2 = UpdatePark.fadeOut
           $6aea = UpdatePark.skipFade
           $6aed = UpdatePark.moveUp
           $6af6 = UpdatePark.flyUpNormal
           $6afc = UpdatePark.flyUpFast
           $6b00 = TryToUnpause
           $6b17 = TryToUnpause.end
           $6b18 = ParkEnteredClassic
           $6b20 = StartedClassic
           $6b28 = SpawnHandWave
           $6b4b = SpawnHandWave.end
           $6b4c = HandWaveAnimation
           $6b53 = HandWaveAnimation.frame0
           $6b6e = HandWaveAnimation.frame1
           $6b88 = HandWaveAnimation.end
           $6b89 = SpawnCountdown
           $6bb3 = SpawnCountdown.end
           $6bb4 = CountdownAnimation
           $6bbb = CountdownAnimation.countdown
           $6bc5 = CountdownAnimation.balloonPop
           $6bcd = CountdownAnimation.frames
           $6bf4 = CountdownAnimation.frame0
           $6c17 = CountdownAnimation.frame1
           $6c3a = CountdownAnimation.frame2
           $6c5d = CountdownAnimation.frame3
           $6c80 = CountdownAnimation.frame4
           $6ca3 = CountdownAnimation.frame5
           $6cc3 = CountdownAnimation.remove
           $6cdc = CountdownAnimation.end
           $6cdd = IncrementScrollOffset
           $6cdd = IncrementScrollOffset.close
           $6ceb = IncrementScrollOffset.far
           $6cf9 = IncrementScrollOffset.end
           $6cfa = SetGameMapStartPoint
           $6cff = UpdateSprites
           $6d15 = UpdateGameCountdown
           $6d2d = UpdateGame
           $6d4c = UpdateGame.end
  SECTION: $6d4d-$6fd9 ($028d bytes) ["bomb"]
           $6d4d = InitializeBomb
           $6d56 = InitializeBomb.loop_u1
           $6d61 = SetStruct
           $6d82 = SpawnBomb
           $6d94 = SpawnBomb.availableSpace
           $6d9d = SpawnBomb.availableOAMSpace
           $6db3 = SpawnBomb.balloonLeft
           $6dcc = SpawnBomb.balloonRight
           $6ddd = SpawnBomb.bombSpace
           $6de8 = SpawnBomb.setStruct
           $6ded = SpawnBomb.end
           $6df2 = Clear
           $6e0e = Move
           $6e16 = Move.balloonLeft
           $6e2b = Move.balloonRight
           $6e37 = Move.bombSpace
           $6e42 = DeathOfBomb
           $6e4c = CollisionBomb
           $6e68 = ExplosionAnimation
           $6e79 = ExplosionAnimation.canSwitchFrames
           $6e91 = ExplosionAnimation.frame0
           $6eb4 = ExplosionAnimation.frame1
           $6ef4 = ExplosionAnimation.frame2
           $6f1d = ExplosionAnimation.frame3
           $6f46 = ExplosionAnimation.clear
           $6f4a = ExplosionAnimation.endFrame
           $6f51 = ExplosionAnimation.end
           $6f52 = BombUpdate
           $6f59 = BombUpdate.loop
           $6f92 = BombUpdate.isAlive
           $6faf = BombUpdate.offScreen
           $6fb4 = BombUpdate.popped
           $6fbe = BombUpdate.checkLoop
  SECTION: $6fda-$71e7 ($020e bytes) ["point balloon"]
           $6fda = InitializePointBalloon
           $6fe3 = InitializePointBalloon.loop_u1
           $6fee = SetStruct
           $700f = SpawnPointBalloon
           $7021 = SpawnPointBalloon.availableSpace
           $702a = SpawnPointBalloon.availableOAMSpace
           $7040 = SpawnPointBalloon.balloonLeft
           $7058 = SpawnPointBalloon.balloonRight
           $7068 = SpawnPointBalloon.setStruct
           $706d = SpawnPointBalloon.end
           $7072 = PopBalloonAnimation
           $7083 = PopBalloonAnimation.canSwitchFrames
           $708f = PopBalloonAnimation.frame0
           $70b1 = PopBalloonAnimation.frame1
           $70d3 = PopBalloonAnimation.clear
           $70d7 = PopBalloonAnimation.endFrame
           $70dc = Clear
           $70f4 = Move
           $70fb = Move.balloonLeft
           $7110 = Move.balloonRight
           $711b = DeathOfPointBalloon
           $712d = CollisionPointBalloon
           $712d = CollisionPointBalloon.checkHit
           $7145 = CollisionPointBalloon.checkHitByBullet
           $7160 = PointBalloonUpdate
           $7167 = PointBalloonUpdate.loop
           $71a0 = PointBalloonUpdate.isAlive
           $71bd = PointBalloonUpdate.offScreen
           $71c2 = PointBalloonUpdate.popped
           $71cc = PointBalloonUpdate.checkLoop
           $71da = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $71e8-$733a ($0153 bytes) ["porcupine"]
           $71e8 = InitializePorcupine
           $71f1 = InitializePorcupine.loop_u1
           $71fc = GetStruct
           $7214 = SetStruct
           $722b = SpawnPorcupine
           $723e = SpawnPorcupine.availableSpace
           $7248 = SpawnPorcupine.availableOAMSpace
           $725e = SpawnPorcupine.topLeft
           $7276 = SpawnPorcupine.topMiddle
           $7286 = SpawnPorcupine.topMiddle2
           $7296 = SpawnPorcupine.topRight
           $72a6 = SpawnPorcupine.bottomLeft
           $72b6 = SpawnPorcupine.bottomMiddle
           $72c8 = SpawnPorcupine.bottomMiddle2
           $72da = SpawnPorcupine.bottomRight
           $72ec = SpawnPorcupine.setStruct
           $72f1 = SpawnPorcupine.end
           $72f6 = PorcupineUpdate
           $72fd = PorcupineUpdate.loop
           $7319 = PorcupineUpdate.offScreen
           $7319 = PorcupineUpdate.isAlive
           $731b = PorcupineUpdate.checkLoop
           $731b = PorcupineUpdate.isDead
           $7336 = PorcupineUpdate.end
  SECTION: $733b-$7437 ($00fd bytes) ["menu"]
           $733b = InitializeMenu
           $7347 = SpawnMenuCursor
           $7350 = SpawnMenuCursor.availableSpace
           $736a = SpawnMenuCursor.end
           $736b = BlinkMenuCursor
           $7373 = BlinkMenuCursor.blink
           $7383 = BlinkMenuCursor.show
           $7387 = BlinkMenuCursor.empty
           $738b = MoveCursor
           $738c = SelectMode
           $7393 = SelectMode.classicMode
           $739c = SelectMode.storyMode
           $739d = MenuInput
           $73a7 = MenuInput.moveSelected
           $73b0 = MenuInput.selectMode
           $73b9 = MenuInput.end
           $73ba = UpdateMenuOpening
           $73d6 = UpdateMenuOpening.startSound
           $73db = UpdateMenuOpening.scrollUpTitle
           $73e7 = UpdateMenuOpening.endSound
           $73ec = UpdateMenuOpening.scrollDownTitle
           $73f8 = UpdateMenuOpening.scrollUpTitle2
           $7404 = UpdateMenuOpening.fadeOut
           $740c = UpdateMenuOpening.next
           $7410 = UpdateMenuOpening.endFrame
           $7417 = UpdateMenuOpening.end
           $7418 = UpdateMenu
           $7418 = UpdateMenu.fadeIn
           $741e = UpdateMenu.hasFadedIn
           $742f = UpdateMenu.fadeOut
  SECTION: $7438-$74f1 ($00ba bytes) ["sound"]
           $7438 = AUDIO_OFF
           $743c = AUDIO_ON
           $7441 = PopSound
           $7454 = ExplosionSound
           $7461 = WaveSound
           $746e = FallingSound
           $7483 = RisingSound
           $7498 = StopSweepSound
           $749d = CollectSound
           $74b2 = WrongAnswerSound
           $74c9 = PercussionSound
           $74d6 = BassSound
           $74e7 = ClearSound
  SECTION: $74f2-$759a ($00a9 bytes) ["palettes"]
           $74f2 = SetupPalettes
           $7503 = SetupParkPalettes
           $7512 = FadeOutPalettes
           $7512 = FadeOutPalettes.fadeOut
           $752f = FadeOutPalettes.fade1
           $7533 = FadeOutPalettes.fade2
           $7537 = FadeOutPalettes.fade3
           $753b = FadeOutPalettes.fade4
           $753d = FadeOutPalettes.fadePalettes
           $754c = FadeOutPalettes.end
           $754e = FadeInPalettes
           $7555 = FadeInPalettes.hasFadedIn
           $7558 = FadeInPalettes.fadeIn
           $7574 = FadeInPalettes.fade1
           $7578 = FadeInPalettes.fade2
           $757c = FadeInPalettes.fade3
           $7580 = FadeInPalettes.fade4
           $7582 = FadeInPalettes.fadePalettes
           $7591 = FadeInPalettes.end
           $7593 = ResetFading
  SECTION: $759b-$7636 ($009c bytes) ["memory"]
           $759b = MEMCPY.memcpy_loop
           $759b = MEMCPY
           $759f = MEMCPY.memcpy_check_limit
           $75a5 = MEMCPY_WITH_OFFSET
           $75a6 = MEMCPY_WITH_OFFSET.memcpy_loop
           $75b1 = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $75b8 = ClearOAM
           $75bf = ClearOAM.loop_u1
           $75c8 = ClearRAM
           $75cf = ClearRAM.loop_u2
           $75d8 = RequestOAMSpace
           $75e1 = RequestOAMSpace.loop
           $75f8 = RequestOAMSpace.availableSpace
           $75fd = RequestOAMSpace.sufficientSpace
           $760d = RequestOAMSpace.isNotZero4
           $760e = RequestOAMSpace.isNotZero3
           $760f = RequestOAMSpace.isNotZero2
           $7610 = RequestOAMSpace.isNotZero1
           $7612 = RequestOAMSpace.notEnoughSprites
           $761a = RequestOAMSpace.end
           $761d = RequestRAMSpace
           $761d = RequestRAMSpace.loop
           $7622 = RequestRAMSpace.availableSpace
           $7626 = RequestRAMSpace.checkLoop
           $7635 = RequestRAMSpace.noFreeSpace
           $7636 = RequestRAMSpace.end
  SECTION: $7637-$767f ($0049 bytes) ["math"]
           $7637 = MODULO
           $7639 = MODULO.loop
           $763e = RANDOM
           $7647 = DIVISION
           $764d = DIVISION.loop
           $7652 = DIVISION.end
           $7655 = ToBCD
           $766c = ToBCD.end
           $766f = MULTIPLY
           $7672 = MULTIPLY.loop
           $767d = MULTIPLY.end
  SECTION: $7680-$76b1 ($0032 bytes) ["lcd"]
           $7680 = LCD_OFF
           $7687 = LCD_ON
           $768e = LCD_ON_NO_WINDOW
           $7695 = WaitVBlank
           $769c = WaitVBlank.loop
           $76a7 = SetupWindow
  SECTION: $76b2-$76d6 ($0025 bytes) ["score"]
           $76b2 = InitializeScore
           $76ba = AddPoints
           $76ca = AddPoints.carry
           $76d4 = AddPoints.end
  SECTION: $76d7-$76f7 ($0021 bytes) ["general initialization"]
           $76d7 = InitializeGameVars
  SECTION: $76f8-$76ff ($0008 bytes) ["timer"]
           $76f8 = UpdateGlobalTimer
    SLACK: $0900 bytes

WRAM0 bank #0:
  SECTION: $c000-$c00b ($000c bytes) ["general RAM vars"]
           $c000 = wFadeInFrame
           $c001 = wFadeOutFrame
           $c002 = wOAMGeneral1
           $c003 = wOAMGeneral2
           $c004 = wParallaxClose
           $c005 = wParallaxFar
           $c006 = wUpdateTilemapAddress
           $c008 = wUpdateTilemapOffset
           $c009 = wUpdateTilemapIndex
           $c00a = wHasUpdatedNextTilemapAddress
           $c00b = wLastUpdatedSCX
  SECTION: $c00c-$c051 ($0046 bytes) ["Playback variables"]
           $c00c = _start_vars
           $c00c = order_cnt
           $c00d = order1
           $c00d = _start_song_descriptor_pointers
           $c00f = order2
           $c011 = order3
           $c013 = order4
           $c015 = duty_instruments
           $c017 = wave_instruments
           $c019 = noise_instruments
           $c01b = routines
           $c01d = waves
           $c01f = mute_channels
           $c01f = _end_song_descriptor_pointers
           $c020 = pattern1
           $c022 = pattern2
           $c024 = pattern3
           $c026 = pattern4
           $c028 = ticks_per_row
           $c029 = current_order
           $c02a = next_order
           $c02b = row_break
           $c02c = temp_note_value
           $c02e = row
           $c02f = tick
           $c030 = counter
           $c031 = current_wave
           $c031 = _hUGE_current_wave
           $c032 = channel_period1
           $c032 = channels
           $c032 = channel1
           $c034 = toneporta_target1
           $c036 = channel_note1
           $c037 = vibrato_tremolo_phase1
           $c038 = envelope1
           $c039 = highmask1
           $c03a = channel_period2
           $c03a = channel2
           $c03c = toneporta_target2
           $c03e = channel_note2
           $c03f = vibrato_tremolo_phase2
           $c040 = envelope2
           $c041 = highmask2
           $c042 = channel_period3
           $c042 = channel3
           $c044 = toneporta_target3
           $c046 = channel_note3
           $c047 = vibrato_tremolo_phase3
           $c048 = envelope3
           $c049 = highmask3
           $c04a = channel_period4
           $c04a = channel4
           $c04c = toneporta_target4
           $c04e = channel_note4
           $c04f = vibrato_tremolo_phase4
           $c050 = envelope4
           $c051 = highmask4
           $c052 = _end_vars
  SECTION: $c052-$c071 ($0020 bytes) ["point balloon vars"]
           $c052 = pointBalloon
  SECTION: $c072-$c08f ($001e bytes) ["balloon cactus vars"]
           $c072 = balloonCactus
  SECTION: $c090-$c0a6 ($0017 bytes) ["player vars"]
           $c090 = wPlayerY
           $c091 = wPlayerX
           $c092 = wPlayerY2
           $c093 = wPlayerX2
           $c094 = wPlayerAlive
           $c095 = wPlayerPopping
           $c096 = wPlayerPoppingFrame
           $c097 = wPlayerPoppingTimer
           $c098 = wPlayerFalling
           $c099 = wPlayerFallSpeed
           $c09a = wPlayerFallingTimer
           $c09b = wPlayerDelayFallingTimer
           $c09c = wPlayerRespawnTimer
           $c09d = wPlayerSpeed
           $c09e = wPlayerLives
           $c09f = wPlayerRight
           $c0a0 = wPlayerBulletY
           $c0a1 = wPlayerBulletX
           $c0a2 = wPlayerBulletAlive
           $c0a3 = wPlayerBulletRight
           $c0a4 = wPlayerInvincible
           $c0a5 = wPlayerBoost
           $c0a6 = wPlayerAttack
  SECTION: $c0a7-$c0b6 ($0010 bytes) ["bird vars"]
           $c0a7 = bird
  SECTION: $c0b7-$c0c6 ($0010 bytes) ["enemy struct vars"]
           $c0b7 = wEnemyOffset
           $c0b8 = wEnemyY
           $c0b9 = wEnemyX
           $c0ba = wEnemyActive
           $c0bb = wEnemyOAM
           $c0bc = wEnemyAlive
           $c0bd = wEnemyPopping
           $c0be = wEnemyPoppingFrame
           $c0bf = wEnemyPoppingTimer
           $c0c0 = wEnemyRightside
           $c0c1 = wEnemyY2
           $c0c2 = wEnemyX2
           $c0c3 = wEnemyFalling
           $c0c4 = wEnemyFallingSpeed
           $c0c5 = wEnemyFallingTimer
           $c0c6 = wEnemyDelayFallingTimer
  SECTION: $c0c7-$c0d6 ($0010 bytes) ["bomb vars"]
           $c0c7 = bomb
  SECTION: $c0d7-$c0db ($0005 bytes) ["porcupine vars"]
           $c0d7 = porcupine
  SECTION: $c0dc-$c0de ($0003 bytes) ["controller vars"]
           $c0dc = wControllerDown
           $c0dd = wControllerPressed
           $c0de = wPaused
  SECTION: $c0df-$c0e1 ($0003 bytes) ["score vars"]
           $c0df = wScore
  SECTION: $c0e2-$c0e4 ($0003 bytes) ["game vars"]
           $c0e2 = wHandWavingFrame
           $c0e3 = wCountdownFrame
           $c0e4 = wClassicModeStage
  SECTION: $c0e5-$c0e7 ($0003 bytes) ["interrupts vars"]
           $c0e5 = wVBlankFlag
           $c0e6 = wLCDInterrupt
  SECTION: $c0e8-$c0ea ($0003 bytes) ["level vars"]
           $c0e8 = wWorld
           $c0e9 = wLevel
           $c0ea = wWave
  SECTION: $c0eb-$c0ec ($0002 bytes) ["menu vars"]
           $c0eb = wMenuFrame
           $c0ec = wSelectedMode
  SECTION: $c0ed-$c0ed ($0001 byte) ["timer vars"]
           $c0ed = wGlobalTimer
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e72 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1c16 bytes in 1 bank
    ROMX: $3700 bytes in 1 bank
    WRAM0: $018e bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
