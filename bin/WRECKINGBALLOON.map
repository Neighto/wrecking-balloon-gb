ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d9 ($008f bytes) ["interrupts"]
           $004b = VBlankInterrupt
           $005b = LCDInterrupt
           $0065 = LCDInterruptEnd
           $0069 = SetBaseInterrupts
           $007b = ParkLCDInterrupt
           $0087 = ParkLCDInterrupt.clouds
           $0095 = ParkLCDInterrupt.ground
           $009a = ParkLCDInterrupt.end
           $009d = SetParkInterrupts
           $00aa = ClassicLCDInterrupt
           $00cc = SetClassicInterrupts
  SECTION: $00da-$00fd ($0024 bytes) ["scroll"]
           $00da = HorizontalScroll
           $00e7 = HorizontalScroll.end
           $00e9 = VerticalScroll
           $00f6 = VerticalScroll.end
           $00f8 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$1595 ($03e5 bytes) ["player"]
           $11b1 = UpdateBalloonPosition
           $11ca = UpdateCactusPosition
           $11e3 = UpdatePlayerPosition
           $11ea = InitializePlayer
           $1265 = ClearPlayerCactus
           $1272 = ClearPlayerBalloon
           $127f = SpawnPlayer
           $128f = MoveCactusDriftLeft
           $12a4 = MoveCactusDriftLeft.end
           $12a5 = MoveCactusDriftRight
           $12b9 = MoveCactusDriftRight.end
           $12ba = MoveCactusDriftCenterX
           $12cc = MoveCactusDriftCenterX.moveRight
           $12ce = MoveCactusDriftCenterX.moveLeft
           $12cf = MoveCactusDriftCenterX.end
           $12d0 = MoveCactusDriftUp
           $12e5 = MoveCactusDriftUp.end
           $12e6 = MoveCactusDriftCenterY
           $12fb = MoveCactusDriftCenterY.moveUp
           $12fd = MoveCactusDriftCenterY.moveDown
           $12fe = MoveCactusDriftCenterY.end
           $12ff = MoveRight
           $1313 = MoveLeft
           $132b = MoveDown
           $133f = MoveUp
           $1354 = SpeedUp
           $135a = ResetSpeedUp
           $1360 = PlayerControls
           $1378 = PlayerControls.endRight
           $138e = PlayerControls.endLeft
           $13a4 = PlayerControls.endUp
           $13ba = PlayerControls.endDown
           $13c9 = PlayerControls.endDriftToCenterX
           $13d8 = PlayerControls.endDriftToCenterY
           $13e3 = PlayerControls.endStart
           $13e9 = PlayerControls.endA
           $13f4 = PlayerControls.endB
           $13f7 = PlayerControls.end
           $13fd = MovePlayer
           $140c = MovePlayerAutoMiddle
           $1419 = MovePlayerAutoMiddle.moveRight
           $141d = MovePlayerAutoMiddle.moveLeft
           $141f = MovePlayerAutoMiddle.end
           $1423 = MovePlayerAutoFlyUp
           $1439 = FallCactusDown
           $144e = FallCactusDown.skipAcceleration
           $1457 = PopBalloonAnimation
           $1478 = PopBalloonAnimation.frame0
           $148e = PopBalloonAnimation.frame1
           $14a4 = PopBalloonAnimation.clear
           $14b3 = PopBalloonAnimation.end
           $14b4 = CactusFalling
           $14ce = CactusFalling.offScreen
           $14d6 = CactusFalling.end
           $14d7 = NoMoreLives
           $14e1 = PlayerUpdate
           $14f4 = PlayerUpdate.popped
           $1509 = PlayerUpdate.respawn
           $150c = PlayerUpdate.respawnSkip
           $1516 = PlayerUpdate.notPopping
           $1520 = PlayerUpdate.end
           $1521 = DeathOfPlayer
           $1545 = InvincibleBlink
           $155e = InvincibleBlink.blinkNormal
           $1567 = InvincibleBlink.blinkFast
           $156c = InvincibleBlink.blinkEnd
           $1581 = InvincibleBlink.defaultPalette
           $1595 = InvincibleBlink.end
  SECTION: $1596-$17c2 ($022d bytes) ["graphics"]
           $1596 = AddBGTiles8800Method
           $15a0 = AddBGTiles8800Method.tilesFitBlock
           $15a5 = AddBGTiles8800Method.tilesExceedBlock
           $15c2 = AddBGTiles8800Method.end
           $15c5 = LoadClassicGameData
           $162c = LoadMenuData
           $164d = LoadMenuData.loop_u4
           $1665 = RefreshScore
           $16a3 = RefreshLives
           $16ae = RefreshLevel
           $16c1 = RefreshWindow
           $16d1 = RefreshWindow.end
           $16d2 = ClearAllTiles
           $16db = ClearAllTiles.loop_u5
           $16ea = ClearAllTiles.loop_u6
           $16f9 = ClearAllTiles.loop_u7
           $1704 = ClearMap
           $170d = ClearMap.loop_u8
           $1718 = ReplaceTilemapHorizontal
           $1741 = ReplaceTilemapHorizontal.handleZero
           $1743 = ReplaceTilemapHorizontal.handleZeroEnd
           $174f = ReplaceTilemapHorizontal.loop
           $176d = ReplaceTilemapHorizontal.end
           $1772 = MoveToNextTilemap
           $1785 = MoveToNextTilemap.canUpdateTilemap
           $1798 = MoveToNextTilemap.clouds1
           $17ad = MoveToNextTilemap.clouds2
           $17c0 = MoveToNextTilemap.end
  SECTION: $17c3-$192c ($016a bytes) ["level data"]
           $17c3 = W1L1W1
           $17c9 = W1L1W2
           $17c9 = W1L1W1End
           $17cf = W1L1W3
           $17cf = W1L1W2End
           $17d8 = W1L1W4
           $17d8 = W1L1W3End
           $17de = W1L2W1
           $17de = W1L1W4End
           $17e7 = W1L2W2
           $17e7 = W1L2W1End
           $17ed = W1L2W3
           $17ed = W1L2W2End
           $17f3 = W1L2W4
           $17f3 = W1L2W3End
           $17ff = W1L2W4End
           $17ff = W2L1
           $1802 = W2L1End
           $1802 = InitializeLevelVars
           $180e = LevelDataHandler
           $180e = LevelDataHandler.loop
           $1829 = LevelDataHandler.pointBalloon
           $1838 = LevelDataHandler.balloonCactus
           $1847 = LevelDataHandler.bird
           $1856 = LevelDataHandler.bomb
           $1865 = LevelDataHandler.porcupine
           $1874 = LevelDataHandler.empty
           $1876 = LevelDataHandler.loopCheck
           $187c = LevelDataHandler.end
           $187d = LevelDataManager
           $189a = LevelDataManager.w1
           $18a8 = LevelDataManager.w1_l1
           $18be = LevelDataManager.w1_l1_w1
           $18c6 = LevelDataManager.w1_l1_w2
           $18ce = LevelDataManager.w1_l1_w3
           $18d6 = LevelDataManager.w1_l1_w4
           $18e9 = LevelDataManager.w1_l2
           $18fe = LevelDataManager.w1_l2_w1
           $1906 = LevelDataManager.w1_l2_w2
           $190e = LevelDataManager.w1_l2_w3
           $1916 = LevelDataManager.w1_l2_w4
           $191e = LevelDataManager.w2
           $1920 = LevelDataManager.w3
           $1922 = LevelDataManager.handle
           $192c = LevelDataManager.end
  SECTION: $192d-$19ed ($00c1 bytes) ["rom"]
           $192d = Start
           $1961 = StartClassic
           $1961 = MenuLoop
           $19af = PreGameLoop
           $19d0 = GameLoopCountdown
           $19df = GameLoop
  SECTION: $19ee-$1a78 ($008b bytes) ["collision"]
           $19ee = CollisionCheck
           $19fb = CollisionCheck.tryOtherY
           $1a03 = CollisionCheck.skip8x8Adjustment
           $1a0f = CollisionCheck.checkX
           $1a1c = CollisionCheck.tryOtherX
           $1a29 = CollisionCheck.collision
           $1a2d = CollisionCheck.end
           $1a31 = CollisionWithPlayer
           $1a3c = CollisionFallingEnemy
           $1a3d = OffScreenXEnemies
           $1a4e = OffScreenXEnemies.end
           $1a50 = OffScreenYEnemies
           $1a61 = OffScreenYEnemies.end
           $1a63 = OffScreenX
           $1a6b = OffScreenX.end
           $1a6d = OffScreenY
           $1a77 = OffScreenY.end
  SECTION: $1a79-$1aeb ($0073 bytes) ["joypad"]
           $1a79 = ReadInput
           $1aa9 = JOY_RIGHT
           $1ab1 = JOY_LEFT
           $1ab9 = JOY_UP
           $1ac1 = JOY_DOWN
           $1ac9 = JOY_A
           $1ad1 = JOY_B
           $1ad9 = JOY_SELECT
           $1ae1 = JOY_START
           $1ae9 = JOY_FALSE
  SECTION: $1aec-$1b09 ($001e bytes) ["OAM DMA routine"]
           $1aec = CopyDMARoutine
           $1af3 = CopyDMARoutine.copy
           $1afa = DMARoutine
           $1afe = DMARoutine.wait
           $1b02 = DMARoutineEnd
           $1b02 = OAMDMA
    SLACK: $2512 bytes

ROMX bank #1:
  SECTION: $4000-$556f ($1570 bytes) ["tilesets"]
           $4000 = CactusTiles
           $42c0 = CactusTilesEnd
           $42c0 = PorcupineTiles
           $43a0 = PorcupineTilesEnd
           $43a0 = PropellerCactusTiles
           $43a0 = PropellerCactusTilesEnd
           $43a0 = BackgroundTiles
           $47e0 = BackgroundTilesEnd
           $47e0 = ClassicParkTiles
           $4820 = CountdownTiles
           $4820 = ClassicParkTilesEnd
           $4920 = CountdownTilesEnd
           $4920 = WindowTiles
           $4a50 = WindowTilesEnd
           $4a50 = MenuTiles
           $4a70 = MenuTilesEnd
           $4a70 = MenuTitleTiles
           $5570 = MenuTitleTilesEnd
  SECTION: $5570-$60ad ($0b3e bytes) ["Song Data2"]
           $5570 = angryTheme
           $5585 = order_cnt
           $5586 = order1
           $5590 = order2
           $559a = order3
           $55a4 = order4
           $55ae = P0
           $566e = P1
           $572e = P2
           $57ee = P3
           $58ae = P4
           $596e = P5
           $5a2e = P6
           $5aee = P7
           $5bae = P8
           $5c6e = P9
           $5d2e = P10
           $5dee = P11
           $5eae = duty_instruments
           $5eae = itSquareinst1
           $5eb2 = itSquareinst2
           $5eb6 = itSquareinst3
           $5eba = itSquareinst4
           $5ebe = itSquareinst5
           $5ec2 = itSquareinst6
           $5ec6 = itSquareinst7
           $5eca = itSquareinst8
           $5ece = itSquareinst9
           $5ed2 = itSquareinst10
           $5ed6 = itSquareinst11
           $5eda = itSquareinst12
           $5ede = itSquareinst13
           $5ee2 = itSquareinst14
           $5ee6 = itSquareinst15
           $5eea = wave_instruments
           $5eea = itWaveinst1
           $5eee = itWaveinst2
           $5ef2 = itWaveinst3
           $5ef6 = itWaveinst4
           $5efa = itWaveinst5
           $5efe = itWaveinst6
           $5f02 = itWaveinst7
           $5f06 = itWaveinst8
           $5f0a = itWaveinst9
           $5f0e = itWaveinst10
           $5f12 = itWaveinst11
           $5f16 = itWaveinst12
           $5f1a = itWaveinst13
           $5f1e = itWaveinst14
           $5f22 = itWaveinst15
           $5f26 = noise_instruments
           $5f26 = itNoiseinst1
           $5f2e = itNoiseinst2
           $5f36 = itNoiseinst3
           $5f3e = itNoiseinst4
           $5f46 = itNoiseinst5
           $5f4e = itNoiseinst6
           $5f56 = itNoiseinst7
           $5f5e = itNoiseinst8
           $5f66 = itNoiseinst9
           $5f6e = itNoiseinst10
           $5f76 = itNoiseinst11
           $5f7e = itNoiseinst12
           $5f86 = itNoiseinst13
           $5f8e = itNoiseinst14
           $5f96 = itNoiseinst15
           $5f9e = routines
           $5f9e = __end_hUGE_Routine_0
           $5f9e = __hUGE_Routine_0
           $5f9f = __end_hUGE_Routine_1
           $5f9f = __hUGE_Routine_1
           $5fa0 = __end_hUGE_Routine_2
           $5fa0 = __hUGE_Routine_2
           $5fa1 = __end_hUGE_Routine_3
           $5fa1 = __hUGE_Routine_3
           $5fa2 = __end_hUGE_Routine_4
           $5fa2 = __hUGE_Routine_4
           $5fa3 = __end_hUGE_Routine_5
           $5fa3 = __hUGE_Routine_5
           $5fa4 = __end_hUGE_Routine_6
           $5fa4 = __hUGE_Routine_6
           $5fa5 = __end_hUGE_Routine_7
           $5fa5 = __hUGE_Routine_7
           $5fa6 = __hUGE_Routine_8
           $5fa6 = __end_hUGE_Routine_8
           $5fa7 = __hUGE_Routine_9
           $5fa7 = __end_hUGE_Routine_9
           $5fa8 = __hUGE_Routine_10
           $5fa8 = __end_hUGE_Routine_10
           $5fa9 = __hUGE_Routine_11
           $5fa9 = __end_hUGE_Routine_11
           $5faa = __hUGE_Routine_12
           $5faa = __end_hUGE_Routine_12
           $5fab = __hUGE_Routine_13
           $5fab = __end_hUGE_Routine_13
           $5fac = __end_hUGE_Routine_14
           $5fac = __hUGE_Routine_14
           $5fad = __end_hUGE_Routine_15
           $5fad = __hUGE_Routine_15
           $5fae = waves
           $5fae = wave0
           $5fbe = wave1
           $5fce = wave2
           $5fde = wave3
           $5fee = wave4
           $5ffe = wave5
           $600e = wave6
           $601e = wave7
           $602e = wave8
           $603e = wave9
           $604e = wave10
           $605e = wave11
           $606e = wave12
           $607e = wave13
           $608e = wave14
           $609e = wave15
  SECTION: $60ae-$65cb ($051e bytes) ["Song Data"]
           $60ae = menuTheme
           $60c3 = order_cnt
           $60c4 = order1
           $60c6 = order2
           $60c8 = order3
           $60ca = order4
           $60cc = P1
           $618c = P2
           $624c = P3
           $630c = P6
           $63cc = duty_instruments
           $63cc = itSquareinst1
           $63d0 = itSquareinst2
           $63d4 = itSquareinst3
           $63d8 = itSquareinst4
           $63dc = itSquareinst5
           $63e0 = itSquareinst6
           $63e4 = itSquareinst7
           $63e8 = itSquareinst8
           $63ec = itSquareinst9
           $63f0 = itSquareinst10
           $63f4 = itSquareinst11
           $63f8 = itSquareinst12
           $63fc = itSquareinst13
           $6400 = itSquareinst14
           $6404 = itSquareinst15
           $6408 = wave_instruments
           $6408 = itWaveinst1
           $640c = itWaveinst2
           $6410 = itWaveinst3
           $6414 = itWaveinst4
           $6418 = itWaveinst5
           $641c = itWaveinst6
           $6420 = itWaveinst7
           $6424 = itWaveinst8
           $6428 = itWaveinst9
           $642c = itWaveinst10
           $6430 = itWaveinst11
           $6434 = itWaveinst12
           $6438 = itWaveinst13
           $643c = itWaveinst14
           $6440 = itWaveinst15
           $6444 = noise_instruments
           $6444 = itNoiseinst1
           $644c = itNoiseinst2
           $6454 = itNoiseinst3
           $645c = itNoiseinst4
           $6464 = itNoiseinst5
           $646c = itNoiseinst6
           $6474 = itNoiseinst7
           $647c = itNoiseinst8
           $6484 = itNoiseinst9
           $648c = itNoiseinst10
           $6494 = itNoiseinst11
           $649c = itNoiseinst12
           $64a4 = itNoiseinst13
           $64ac = itNoiseinst14
           $64b4 = itNoiseinst15
           $64bc = routines
           $64bc = __end_hUGE_Routine_0
           $64bc = __hUGE_Routine_0
           $64bd = __end_hUGE_Routine_1
           $64bd = __hUGE_Routine_1
           $64be = __end_hUGE_Routine_2
           $64be = __hUGE_Routine_2
           $64bf = __end_hUGE_Routine_3
           $64bf = __hUGE_Routine_3
           $64c0 = __end_hUGE_Routine_4
           $64c0 = __hUGE_Routine_4
           $64c1 = __end_hUGE_Routine_5
           $64c1 = __hUGE_Routine_5
           $64c2 = __end_hUGE_Routine_6
           $64c2 = __hUGE_Routine_6
           $64c3 = __end_hUGE_Routine_7
           $64c3 = __hUGE_Routine_7
           $64c4 = __hUGE_Routine_8
           $64c4 = __end_hUGE_Routine_8
           $64c5 = __hUGE_Routine_9
           $64c5 = __end_hUGE_Routine_9
           $64c6 = __hUGE_Routine_10
           $64c6 = __end_hUGE_Routine_10
           $64c7 = __hUGE_Routine_11
           $64c7 = __end_hUGE_Routine_11
           $64c8 = __hUGE_Routine_12
           $64c8 = __end_hUGE_Routine_12
           $64c9 = __hUGE_Routine_13
           $64c9 = __end_hUGE_Routine_13
           $64ca = __end_hUGE_Routine_14
           $64ca = __hUGE_Routine_14
           $64cb = __end_hUGE_Routine_15
           $64cb = __hUGE_Routine_15
           $64cc = waves
           $64cc = wave0
           $64dc = wave1
           $64ec = wave2
           $64fc = wave3
           $650c = wave4
           $651c = wave5
           $652c = wave6
           $653c = wave7
           $654c = wave8
           $655c = wave9
           $656c = wave10
           $657c = wave11
           $658c = wave12
           $659c = wave13
           $65ac = wave14
           $65bc = wave15
  SECTION: $65cc-$6936 ($036b bytes) ["balloon cactus"]
           $65cc = InitializeBalloonCactus
           $65d5 = InitializeBalloonCactus.loop_u1
           $65e0 = GetStruct
           $661f = SetStruct
           $665e = SpawnBalloonCactus
           $6671 = SpawnBalloonCactus.availableSpace
           $667a = SpawnBalloonCactus.availableOAMSpace
           $66a8 = SpawnBalloonCactus.isLeftside
           $66a8 = SpawnBalloonCactus.balloonLeft
           $66c0 = SpawnBalloonCactus.balloonRight
           $66d0 = SpawnBalloonCactus.cactusLeft
           $66de = SpawnBalloonCactus.cactusRight
           $66ee = SpawnBalloonCactus.setStruct
           $66f3 = SpawnBalloonCactus.end
           $66f8 = ClearCactus
           $670d = ClearBalloon
           $6721 = Clear
           $672b = PopBalloonAnimation
           $673c = PopBalloonAnimation.canSwitchFrames
           $674a = PopBalloonAnimation.frame0
           $676c = PopBalloonAnimation.frame1
           $678e = PopBalloonAnimation.clear
           $67ad = PopBalloonAnimation.endFrame
           $67b1 = PopBalloonAnimation.end
           $67b2 = CactusFalling
           $67c4 = CactusFalling.falling
           $67da = CactusFalling.skipAcceleration
           $67e6 = CactusFalling.offScreen
           $67e9 = CactusFalling.end
           $67ea = UpdateBalloonPosition
           $67ea = UpdateBalloonPosition.balloonLeft
           $67ff = UpdateBalloonPosition.balloonRight
           $680a = UpdateCactusPosition
           $680a = UpdateCactusPosition.cactusLeft
           $681f = UpdateCactusPosition.cactusRight
           $682a = Move
           $6845 = Move.isLeftside
           $6853 = Move.updatePosition
           $685a = DeathOfBalloonCactus
           $6889 = CollisionBalloonCactus
           $6889 = CollisionBalloonCactus.checkHit
           $68a0 = CollisionBalloonCactus.checkHitPlayer
           $68be = BalloonCactusUpdate
           $68c5 = BalloonCactusUpdate.loop
           $68e1 = BalloonCactusUpdate.isAlive
           $68fe = BalloonCactusUpdate.offScreen
           $6903 = BalloonCactusUpdate.popped
           $690d = BalloonCactusUpdate.notPopping
           $6917 = BalloonCactusUpdate.checkLoop
           $6932 = BalloonCactusUpdate.end
  SECTION: $6937-$6c6c ($0336 bytes) ["bird"]
           $6937 = InitializeBird
           $6940 = InitializeBird.loop_u1
           $694b = GetStruct
           $696e = SetStruct
           $6991 = SpawnBird
           $69a4 = SpawnBird.availableSpace
           $69ae = SpawnBird.availableOAMSpace
           $69cb = SpawnBird.isRightside
           $69d0 = SpawnBird.birdLeft
           $69e8 = SpawnBird.birdMiddle
           $69f8 = SpawnBird.birdRight
           $6a0a = SpawnBird.isLeftside
           $6a0a = SpawnBird.leftBirdLeft
           $6a22 = SpawnBird.leftBirdMiddle
           $6a32 = SpawnBird.leftBirdRight
           $6a42 = SpawnBird.setStruct
           $6a47 = SpawnBird.end
           $6a4c = BirdAnimate
           $6a55 = BirdAnimate.frame0
           $6a7e = BirdAnimate.frame0FacingLeft
           $6a89 = BirdAnimate.frame0FacingEnd
           $6a92 = BirdAnimate.frame1
           $6abb = BirdAnimate.frame1FacingLeft
           $6ac6 = BirdAnimate.frame1FacingEnd
           $6ad6 = BirdAnimate.end
           $6ad9 = Clear
           $6af5 = UpdateBirdPosition
           $6af5 = UpdateBirdPosition.birdLeft
           $6b0a = UpdateBirdPosition.birdMiddle
           $6b16 = UpdateBirdPosition.birdRight
           $6b21 = Move
           $6b28 = Move.isRightside
           $6b33 = Move.isLeftside
           $6b3a = Move.moveDown
           $6b48 = Move.moveEnd
           $6b4f = BirdFall
           $6b5b = BirdFall.checkOffscreenY
           $6b6d = BirdFall.end
           $6b70 = DeathOfBird
           $6b88 = DeathOfBird.facingLeft
           $6bb0 = DeathOfBird.facingRight
           $6bd8 = CollisionBird
           $6bd8 = CollisionBird.checkHitPlayer
           $6bf7 = BirdUpdate
           $6bfe = BirdUpdate.loop
           $6c1a = BirdUpdate.isAlive
           $6c37 = BirdUpdate.offScreen
           $6c3c = BirdUpdate.isDead
           $6c4d = BirdUpdate.checkLoop
           $6c68 = BirdUpdate.end
  SECTION: $6c6d-$6f04 ($0298 bytes) ["bomb"]
           $6c6d = InitializeBomb
           $6c76 = InitializeBomb.loop_u1
           $6c81 = GetStruct
           $6ca4 = SetStruct
           $6cc7 = SpawnBomb
           $6cd9 = SpawnBomb.availableSpace
           $6ce2 = SpawnBomb.availableOAMSpace
           $6cf8 = SpawnBomb.balloonLeft
           $6d11 = SpawnBomb.balloonRight
           $6d22 = SpawnBomb.bombSpace
           $6d2d = SpawnBomb.setStruct
           $6d32 = SpawnBomb.end
           $6d37 = Clear
           $6d53 = Move
           $6d5b = Move.balloonLeft
           $6d70 = Move.balloonRight
           $6d7c = Move.bombSpace
           $6d87 = DeathOfBomb
           $6d91 = CollisionBomb
           $6dac = ExplosionAnimation
           $6dbd = ExplosionAnimation.canSwitchFrames
           $6dd5 = ExplosionAnimation.frame0
           $6df8 = ExplosionAnimation.frame1
           $6e38 = ExplosionAnimation.frame2
           $6e61 = ExplosionAnimation.frame3
           $6e8a = ExplosionAnimation.clear
           $6e8e = ExplosionAnimation.endFrame
           $6e95 = ExplosionAnimation.end
           $6e96 = BombUpdate
           $6e9d = BombUpdate.loop
           $6eb9 = BombUpdate.isAlive
           $6ed6 = BombUpdate.offScreen
           $6edb = BombUpdate.popped
           $6ee5 = BombUpdate.checkLoop
           $6f00 = BombUpdate.end
  SECTION: $6f05-$718f ($028b bytes) ["classic"]
           $6f05 = InitializeClassicVars
           $6f0a = ParkFadeOut
           $6f1d = ParkFadeOut.startFadeOut
           $6f23 = ParkFadeOut.fadeOut
           $6f2e = ParkFadeOut.hasFadedOut
           $6f32 = UpdatePark
           $6f3b = UpdatePark.moveUp
           $6f44 = UpdatePark.flyUpNormal
           $6f4b = UpdatePark.flyUpFast
           $6f4e = UpdatePark.end
           $6f4f = TryToUnpause
           $6f66 = TryToUnpause.end
           $6f67 = ParkEnteredClassic
           $6f6f = StartedClassic
           $6f77 = SpawnHandWave
           $6f9a = SpawnHandWave.end
           $6f9b = HandWaveAnimation
           $6fa2 = HandWaveAnimation.frame0
           $6fbd = HandWaveAnimation.frame1
           $6fd7 = HandWaveAnimation.end
           $6fd8 = SpawnCountdown
           $7007 = SpawnCountdown.end
           $7008 = CountdownAnimation
           $700f = CountdownAnimation.countdown
           $7019 = CountdownAnimation.balloonPop
           $7021 = CountdownAnimation.frames
           $7048 = CountdownAnimation.frame0
           $706b = CountdownAnimation.frame1
           $708e = CountdownAnimation.frame2
           $70b1 = CountdownAnimation.frame3
           $70d4 = CountdownAnimation.frame4
           $70f7 = CountdownAnimation.frame5
           $7117 = CountdownAnimation.remove
           $7130 = CountdownAnimation.end
           $7131 = IncrementScrollOffset
           $713f = IncrementScrollOffset.end
           $7140 = SetClassicMapStartPoint
           $7145 = UpdateSprites
           $7158 = UpdateClassicCountdown
           $7170 = UpdateClassic
           $718f = UpdateClassic.end
  SECTION: $7190-$738e ($01ff bytes) ["point balloon"]
           $7190 = InitializePointBalloon
           $7199 = InitializePointBalloon.loop_u1
           $71a4 = GetStruct
           $71c7 = SetStruct
           $71ea = SpawnPointBalloon
           $71fc = SpawnPointBalloon.availableSpace
           $7205 = SpawnPointBalloon.availableOAMSpace
           $721b = SpawnPointBalloon.balloonLeft
           $7233 = SpawnPointBalloon.balloonRight
           $7243 = SpawnPointBalloon.setStruct
           $7248 = SpawnPointBalloon.end
           $724d = PopBalloonAnimation
           $725e = PopBalloonAnimation.canSwitchFrames
           $726a = PopBalloonAnimation.frame0
           $728c = PopBalloonAnimation.frame1
           $72ae = PopBalloonAnimation.clear
           $72b2 = PopBalloonAnimation.endFrame
           $72b6 = PopBalloonAnimation.end
           $72b7 = Clear
           $72cf = Move
           $72d6 = Move.balloonLeft
           $72eb = Move.balloonRight
           $72f6 = DeathOfPointBalloon
           $7308 = CollisionPointBalloon
           $7320 = PointBalloonUpdate
           $7327 = PointBalloonUpdate.loop
           $7343 = PointBalloonUpdate.isAlive
           $7360 = PointBalloonUpdate.offScreen
           $7365 = PointBalloonUpdate.popped
           $736f = PointBalloonUpdate.checkLoop
           $738a = PointBalloonUpdate.end
  SECTION: $738f-$74e1 ($0153 bytes) ["porcupine"]
           $738f = InitializePorcupine
           $7398 = InitializePorcupine.loop_u1
           $73a3 = GetStruct
           $73bb = SetStruct
           $73d2 = SpawnPorcupine
           $73e5 = SpawnPorcupine.availableSpace
           $73ef = SpawnPorcupine.availableOAMSpace
           $7405 = SpawnPorcupine.topLeft
           $741d = SpawnPorcupine.topMiddle
           $742d = SpawnPorcupine.topMiddle2
           $743d = SpawnPorcupine.topRight
           $744d = SpawnPorcupine.bottomLeft
           $745d = SpawnPorcupine.bottomMiddle
           $746f = SpawnPorcupine.bottomMiddle2
           $7481 = SpawnPorcupine.bottomRight
           $7493 = SpawnPorcupine.setStruct
           $7498 = SpawnPorcupine.end
           $749d = PorcupineUpdate
           $74a4 = PorcupineUpdate.loop
           $74c0 = PorcupineUpdate.offScreen
           $74c0 = PorcupineUpdate.isAlive
           $74c2 = PorcupineUpdate.checkLoop
           $74c2 = PorcupineUpdate.isDead
           $74dd = PorcupineUpdate.end
  SECTION: $74e2-$7601 ($0120 bytes) ["menu"]
           $74e2 = InitializeMenu
           $74eb = SpawnMenuCursor
           $74f4 = SpawnMenuCursor.availableSpace
           $750e = SpawnMenuCursor.end
           $750f = BlinkMenuCursor
           $7517 = BlinkMenuCursor.blink
           $7527 = BlinkMenuCursor.show
           $752b = BlinkMenuCursor.empty
           $752f = MoveCursor
           $7530 = SelectMode
           $7537 = SelectMode.classicMode
           $7540 = SelectMode.storyMode
           $7541 = MenuInput
           $754b = MenuInput.moveSelected
           $7554 = MenuInput.selectMode
           $755d = MenuInput.end
           $755e = UpdateMenuOpening
           $757e = UpdateMenuOpening.startSound
           $7583 = UpdateMenuOpening.scrollUpTitle
           $758f = UpdateMenuOpening.endSound
           $7594 = UpdateMenuOpening.scrollDownTitle
           $75a0 = UpdateMenuOpening.scrollUpTitle2
           $75ac = UpdateMenuOpening.fadeOut
           $75b7 = UpdateMenuOpening.loadFullMenu
           $75d1 = UpdateMenuOpening.fadeIn
           $75dd = UpdateMenuOpening.endFrame
           $75e4 = UpdateMenuOpening.end
           $75e5 = UpdateMenu
           $75f3 = UpdateMenu.fadeOut
           $75fe = UpdateMenu.hasFadedOut
  SECTION: $7602-$76bb ($00ba bytes) ["sound"]
           $7602 = AUDIO_OFF
           $7606 = AUDIO_ON
           $760b = PopSound
           $761e = ExplosionSound
           $762b = WaveSound
           $7638 = FallingSound
           $764d = RisingSound
           $7662 = StopSweepSound
           $7667 = CollectSound
           $767c = WrongAnswerSound
           $7693 = PercussionSound
           $76a0 = BassSound
           $76b1 = ClearSound
  SECTION: $76bc-$7761 ($00a6 bytes) ["palettes"]
           $76bc = SetupPalettes
           $76cd = SetupParkPalettes
           $76dc = FadeOutPalettes
           $76e2 = FadeOutPalettes.fadeOut
           $76f6 = FadeOutPalettes.fade1
           $76fa = FadeOutPalettes.fade2
           $76fe = FadeOutPalettes.fade3
           $7702 = FadeOutPalettes.fade4
           $7704 = FadeOutPalettes.end
           $7714 = FadeInPalettes
           $771a = FadeInPalettes.fadeIn
           $772e = FadeInPalettes.fade1
           $7732 = FadeInPalettes.fade2
           $7736 = FadeInPalettes.fade3
           $773a = FadeInPalettes.fade4
           $773c = FadeInPalettes.end
           $774c = HasFadedOut
           $7752 = HasFadedOut.false
           $7754 = HasFadedOut.true
           $7757 = HasFadedIn
           $775d = HasFadedIn.false
           $775f = HasFadedIn.true
  SECTION: $7762-$77ea ($0089 bytes) ["memory"]
           $7762 = MEMCPY.memcpy_loop
           $7762 = MEMCPY
           $7766 = MEMCPY.memcpy_check_limit
           $776c = ClearOAM
           $7773 = ClearOAM.loop_u1
           $777c = ClearRAM
           $7783 = ClearRAM.loop_u2
           $778c = RequestOAMSpace
           $7795 = RequestOAMSpace.loop
           $77ac = RequestOAMSpace.availableSpace
           $77b1 = RequestOAMSpace.sufficientSpace
           $77c1 = RequestOAMSpace.isNotZero4
           $77c2 = RequestOAMSpace.isNotZero3
           $77c3 = RequestOAMSpace.isNotZero2
           $77c4 = RequestOAMSpace.isNotZero1
           $77c6 = RequestOAMSpace.notEnoughSprites
           $77ce = RequestOAMSpace.end
           $77d1 = RequestRAMSpace
           $77d1 = RequestRAMSpace.loop
           $77d6 = RequestRAMSpace.availableSpace
           $77da = RequestRAMSpace.checkLoop
           $77e9 = RequestRAMSpace.noFreeSpace
           $77ea = RequestRAMSpace.end
  SECTION: $77eb-$7833 ($0049 bytes) ["math"]
           $77eb = MODULO
           $77ed = MODULO.loop
           $77f2 = RANDOM
           $77fb = DIVISION
           $7801 = DIVISION.loop
           $7806 = DIVISION.end
           $7809 = ToBCD
           $7820 = ToBCD.end
           $7823 = MULTIPLY
           $7826 = MULTIPLY.loop
           $7831 = MULTIPLY.end
  SECTION: $7834-$7865 ($0032 bytes) ["lcd"]
           $7834 = LCD_OFF
           $783b = LCD_ON
           $7842 = LCD_ON_NO_WINDOW
           $7849 = WaitVBlank
           $7850 = WaitVBlank.loop
           $785b = SetupWindow
  SECTION: $7866-$7892 ($002d bytes) ["general initialization"]
           $7866 = InitializeGameVars
  SECTION: $7893-$78b7 ($0025 bytes) ["score"]
           $7893 = InitializeScore
           $789b = AddPoints
           $78ab = AddPoints.carry
           $78b5 = AddPoints.end
  SECTION: $78b8-$78bf ($0008 bytes) ["timer"]
           $78b8 = UpdateGlobalTimer
    SLACK: $0740 bytes

WRAM0 bank #0:
  SECTION: $c000-$c017 ($0018 bytes) ["general RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = selected_mode
           $c009 = hand_waving_frame
           $c00a = countdown_frame
           $c00b = cloud_scroll_offset
           $c00c = classic_mode_stage
           $c00d = fade_frame
           $c00e = wOAMGeneral1
           $c00f = wOAMGeneral2
           $c010 = wLCDInterrupt
           $c012 = wUpdateTilemapAddress
           $c014 = wUpdateTilemapOffset
           $c015 = wUpdateTilemapIndex
           $c016 = wHasUpdatedNextTilemapAddress
           $c017 = wLastUpdatedSCX
  SECTION: $c018-$c05d ($0046 bytes) ["Playback variables"]
           $c018 = _start_vars
           $c018 = order_cnt
           $c019 = order1
           $c019 = _start_song_descriptor_pointers
           $c01b = order2
           $c01d = order3
           $c01f = order4
           $c021 = duty_instruments
           $c023 = wave_instruments
           $c025 = noise_instruments
           $c027 = routines
           $c029 = waves
           $c02b = mute_channels
           $c02b = _end_song_descriptor_pointers
           $c02c = pattern1
           $c02e = pattern2
           $c030 = pattern3
           $c032 = pattern4
           $c034 = ticks_per_row
           $c035 = current_order
           $c036 = next_order
           $c037 = row_break
           $c038 = temp_note_value
           $c03a = row
           $c03b = tick
           $c03c = counter
           $c03d = current_wave
           $c03d = _hUGE_current_wave
           $c03e = channel_period1
           $c03e = channels
           $c03e = channel1
           $c040 = toneporta_target1
           $c042 = channel_note1
           $c043 = vibrato_tremolo_phase1
           $c044 = envelope1
           $c045 = highmask1
           $c046 = channel_period2
           $c046 = channel2
           $c048 = toneporta_target2
           $c04a = channel_note2
           $c04b = vibrato_tremolo_phase2
           $c04c = envelope2
           $c04d = highmask2
           $c04e = channel_period3
           $c04e = channel3
           $c050 = toneporta_target3
           $c052 = channel_note3
           $c053 = vibrato_tremolo_phase3
           $c054 = envelope3
           $c055 = highmask3
           $c056 = channel_period4
           $c056 = channel4
           $c058 = toneporta_target4
           $c05a = channel_note4
           $c05b = vibrato_tremolo_phase4
           $c05c = envelope4
           $c05d = highmask4
           $c05e = _end_vars
  SECTION: $c05e-$c07d ($0020 bytes) ["point balloon vars"]
           $c05e = pointBalloon
  SECTION: $c07e-$c09b ($001e bytes) ["balloon cactus vars"]
           $c07e = balloonCactus
  SECTION: $c09c-$c0ab ($0010 bytes) ["bird vars"]
           $c09c = bird
  SECTION: $c0ac-$c0bb ($0010 bytes) ["enemy struct vars"]
           $c0ac = wEnemyOffset
           $c0ad = wEnemyY
           $c0ae = wEnemyX
           $c0af = wEnemyActive
           $c0b0 = wEnemyOAM
           $c0b1 = wEnemyAlive
           $c0b2 = wEnemyPopping
           $c0b3 = wEnemyPoppingFrame
           $c0b4 = wEnemyPoppingTimer
           $c0b5 = wEnemyRightside
           $c0b6 = wEnemyY2
           $c0b7 = wEnemyX2
           $c0b8 = wEnemyFalling
           $c0b9 = wEnemyFallingSpeed
           $c0ba = wEnemyFallingTimer
           $c0bb = wEnemyDelayFallingTimer
  SECTION: $c0bc-$c0cb ($0010 bytes) ["bomb vars"]
           $c0bc = bomb
  SECTION: $c0cc-$c0db ($0010 bytes) ["player vars"]
           $c0cc = wPlayerY
           $c0cd = wPlayerX
           $c0ce = wPlayerY2
           $c0cf = wPlayerX2
           $c0d0 = wPlayerAlive
           $c0d1 = wPlayerPopping
           $c0d2 = wPlayerPoppingFrame
           $c0d3 = wPlayerPoppingTimer
           $c0d4 = wPlayerFalling
           $c0d5 = wPlayerFallSpeed
           $c0d6 = wPlayerFallingTimer
           $c0d7 = wPlayerDelayFallingTimer
           $c0d8 = wPlayerRespawnTimer
           $c0d9 = wPlayerSpeed
           $c0da = wPlayerLives
           $c0db = wPlayerInvincible
  SECTION: $c0dc-$c0e0 ($0005 bytes) ["porcupine vars"]
           $c0dc = porcupine
  SECTION: $c0e1-$c0e3 ($0003 bytes) ["level vars"]
           $c0e1 = wWorld
           $c0e2 = wLevel
           $c0e3 = wWave
  SECTION: $c0e4-$c0e4 ($0001 byte) ["menu vars"]
           $c0e4 = wMenuFrame
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e7b bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1aee bytes in 1 bank
    ROMX: $38c0 bytes in 1 bank
    WRAM0: $0185 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
