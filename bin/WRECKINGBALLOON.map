ROM0 bank #0:
  SECTION: $0000-$002a ($002b bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00d9 ($008f bytes) ["interrupts"]
           $004b = VBlankInterrupt
           $005b = LCDInterrupt
           $0065 = LCDInterruptEnd
           $0069 = SetBaseInterrupts
           $007b = ParkLCDInterrupt
           $0087 = ParkLCDInterrupt.clouds
           $0095 = ParkLCDInterrupt.ground
           $009a = ParkLCDInterrupt.end
           $009d = SetParkInterrupts
           $00aa = ClassicLCDInterrupt
           $00cc = SetClassicInterrupts
  SECTION: $00da-$00fd ($0024 bytes) ["scroll"]
           $00da = HorizontalScroll
           $00e7 = HorizontalScroll.end
           $00e9 = VerticalScroll
           $00f6 = VerticalScroll.end
           $00f8 = ResetScroll
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a0f ($08c0 bytes) ["tilemaps"]
           $0150 = BackgroundMap
           $0550 = World2Map
           $0550 = BackgroundMapEnd
           $0790 = MenuMap
           $0790 = World2MapEnd
           $09d0 = WindowMap
           $09d0 = MenuMapEnd
           $0a10 = WindowMapEnd
  SECTION: $0a10-$11b0 ($07a1 bytes) ["Sound Driver"]
           $0a10 = _hUGE_init_banked
           $0a14 = _hUGE_init
           $0a16 = continue_init
           $0a1f = _hUGE_mute_channel_banked
           $0a23 = _hUGE_mute_channel
           $0a25 = continue_mute
           $0a30 = hUGE_mute_channel
           $0a36 = hUGE_mute_channel.enable_loop
           $0a3d = hUGE_mute_channel.enable_cut
           $0a4a = _hUGE_set_position_banked
           $0a4e = _hUGE_set_position
           $0a50 = continue_set_position
           $0a57 = hUGE_init
           $0a5e = hUGE_init.fill_loop
           $0a82 = hUGE_init.copy_song_descriptor_loop
           $0a8c = _refresh_patterns
           $0aa6 = _refresh_patterns.load_pattern
           $0ab6 = _load_note_data
           $0ac8 = _lookup_note
           $0ad2 = _convert_note
           $0ae0 = _convert_ch4_note
           $0af7 = _update_channel
           $0b01 = _update_channel1
           $0b0f = _update_channel2
           $0b1d = _update_channel3
           $0b2b = _update_channel4
           $0b3b = _playnote1
           $0b56 = _playnote2
           $0b71 = _playnote3
           $0b92 = _playnote4
           $0ba6 = _doeffect
           $0bbb = _doeffect.jump
           $0beb = setup_channel_pointer
           $0bf9 = fx_set_master_volume
           $0bfe = fx_call_routine
           $0c20 = fx_call_routine.call_hl
           $0c21 = fx_set_pan
           $0c26 = fx_set_duty
           $0c2b = fx_set_duty.chan2
           $0c35 = fx_set_duty.chan1
           $0c3f = fx_vol_slide
           $0c46 = fx_vol_slide.loop
           $0c4b = fx_vol_slide.cont
           $0c7d = fx_vol_slide.cont1
           $0c84 = fx_vol_slide.cont2
           $0c98 = _envelope_registers
           $0ca0 = fx_note_delay
           $0cb9 = fx_note_delay.play_note
           $0cd7 = _play_note_routines
           $0ce3 = fx_set_speed
           $0ce9 = hUGE_set_position
           $0ce9 = fx_pos_jump
           $0cf3 = fx_pattern_break
           $0cf8 = fx_note_cut
           $0d00 = fx_note_cut.loop
           $0d05 = fx_note_cut.cont
           $0d0a = note_cut
           $0d21 = fx_set_volume
           $0d22 = set_channel_volume
           $0d2d = set_chn_3_vol
           $0d3f = set_chn_3_vol.three
           $0d43 = set_chn_3_vol.two
           $0d47 = set_chn_3_vol.one
           $0d4b = set_chn_3_vol.zero
           $0d4c = set_chn_3_vol.done
           $0d4f = set_chn_2_vol
           $0d5f = set_chn_1_vol
           $0d6f = set_chn_4_vol
           $0d7b = fx_vibrato
           $0d8e = fx_vibrato.restore
           $0d93 = fx_vibrato.go_up
           $0d9e = fx_vibrato.finish_vibrato
           $0da4 = fx_arpeggio
           $0db0 = fx_arpeggio.greater_than_two
           $0db2 = fx_arpeggio.test_greater_than_two
           $0dc1 = fx_arpeggio.arp_options
           $0dc7 = fx_arpeggio.reset_arp
           $0dca = fx_arpeggio.set_arp2
           $0dcf = fx_arpeggio.set_arp1
           $0dd0 = fx_arpeggio.finish_arp
           $0dd3 = fx_arpeggio.finish_skip_add
           $0ddc = fx_porta_up
           $0deb = fx_porta_up.finish
           $0df2 = fx_porta_down
           $0e04 = fx_toneporta
           $0e16 = fx_toneporta.return_skip
           $0e20 = fx_toneporta.do_toneporta
           $0e35 = fx_toneporta.high_byte_same
           $0e3b = fx_toneporta.add
           $0e4d = fx_toneporta.subtract
           $0e63 = fx_toneporta.set_exact
           $0e65 = fx_toneporta.done
           $0e78 = _setup_instrument_pointer_ch4
           $0e83 = _setup_instrument_pointer
           $0e8a = _setup_instrument_pointer.finish
           $0e93 = _hUGE_dosound_banked
           $0e93 = _hUGE_dosound
           $0ed2 = _hUGE_dosound.write_mask1
           $0ed5 = _hUGE_dosound.do_setvol1
           $0ee8 = _hUGE_dosound.after_note1
           $0f1d = _hUGE_dosound.write_mask2
           $0f20 = _hUGE_dosound.do_setvol2
           $0f33 = _hUGE_dosound.after_note2
           $0fba = _hUGE_dosound.no_wave_copy
           $0fbb = _hUGE_dosound.write_mask3
           $0fbe = _hUGE_dosound.do_setvol3
           $0fc9 = _hUGE_dosound.after_note3
           $101a = _hUGE_dosound.write_mask4
           $101d = _hUGE_dosound.do_setvol4
           $1028 = _hUGE_dosound.after_note4
           $102b = _hUGE_dosound.process_effects
           $1047 = _hUGE_dosound.after_effect1
           $1063 = _hUGE_dosound.after_effect2
           $107f = _hUGE_dosound.after_effect3
           $10ca = _hUGE_dosound.done_macro
           $10d3 = process_tick
           $10d3 = _hUGE_dosound.after_effect4
           $10e5 = _newrow
           $10fd = _newrow.no_break
           $1108 = _neworder
           $1115 = _update_current_order
           $111c = _noreset
           $1121 = note_table
  SECTION: $11b1-$1595 ($03e5 bytes) ["player"]
           $11b1 = UpdateBalloonPosition
           $11ca = UpdateCactusPosition
           $11e3 = UpdatePlayerPosition
           $11ea = InitializePlayer
           $1265 = ClearPlayerCactus
           $1272 = ClearPlayerBalloon
           $127f = SpawnPlayer
           $128f = MoveCactusDriftLeft
           $12a4 = MoveCactusDriftLeft.end
           $12a5 = MoveCactusDriftRight
           $12b9 = MoveCactusDriftRight.end
           $12ba = MoveCactusDriftCenterX
           $12cc = MoveCactusDriftCenterX.moveRight
           $12ce = MoveCactusDriftCenterX.moveLeft
           $12cf = MoveCactusDriftCenterX.end
           $12d0 = MoveCactusDriftUp
           $12e5 = MoveCactusDriftUp.end
           $12e6 = MoveCactusDriftCenterY
           $12fb = MoveCactusDriftCenterY.moveUp
           $12fd = MoveCactusDriftCenterY.moveDown
           $12fe = MoveCactusDriftCenterY.end
           $12ff = MoveRight
           $1313 = MoveLeft
           $132b = MoveDown
           $133f = MoveUp
           $1354 = SpeedUp
           $135a = ResetSpeedUp
           $1360 = PlayerControls
           $1378 = PlayerControls.endRight
           $138e = PlayerControls.endLeft
           $13a4 = PlayerControls.endUp
           $13ba = PlayerControls.endDown
           $13c9 = PlayerControls.endDriftToCenterX
           $13d8 = PlayerControls.endDriftToCenterY
           $13e3 = PlayerControls.endStart
           $13e9 = PlayerControls.endA
           $13f4 = PlayerControls.endB
           $13f7 = PlayerControls.end
           $13fd = MovePlayer
           $140c = MovePlayerAutoMiddle
           $1419 = MovePlayerAutoMiddle.moveRight
           $141d = MovePlayerAutoMiddle.moveLeft
           $141f = MovePlayerAutoMiddle.end
           $1423 = MovePlayerAutoFlyUp
           $1439 = FallCactusDown
           $144e = FallCactusDown.skipAcceleration
           $1457 = PopBalloonAnimation
           $1478 = PopBalloonAnimation.frame0
           $148e = PopBalloonAnimation.frame1
           $14a4 = PopBalloonAnimation.clear
           $14b3 = PopBalloonAnimation.end
           $14b4 = CactusFalling
           $14ce = CactusFalling.offScreen
           $14d6 = CactusFalling.end
           $14d7 = NoMoreLives
           $14e1 = PlayerUpdate
           $14f4 = PlayerUpdate.popped
           $1509 = PlayerUpdate.respawn
           $150c = PlayerUpdate.respawnSkip
           $1516 = PlayerUpdate.notPopping
           $1520 = PlayerUpdate.end
           $1521 = DeathOfPlayer
           $1545 = InvincibleBlink
           $155e = InvincibleBlink.blinkNormal
           $1567 = InvincibleBlink.blinkFast
           $156c = InvincibleBlink.blinkEnd
           $1581 = InvincibleBlink.defaultPalette
           $1595 = InvincibleBlink.end
  SECTION: $1596-$17c4 ($022f bytes) ["graphics"]
           $1596 = AddBGTiles8800Method
           $15a0 = AddBGTiles8800Method.tilesFitBlock
           $15a5 = AddBGTiles8800Method.tilesExceedBlock
           $15c4 = AddBGTiles8800Method.end
           $15c7 = LoadClassicGameData
           $1630 = LoadMenuData
           $1651 = LoadMenuData.loop_u4
           $1669 = RefreshScore
           $16a3 = RefreshLives
           $16ac = RefreshBoostBar
           $16b6 = RefreshAttackBar
           $16c0 = RefreshWindow
           $16d3 = RefreshWindow.end
           $16d4 = ClearAllTiles
           $16dd = ClearAllTiles.loop_u5
           $16ec = ClearAllTiles.loop_u6
           $16fb = ClearAllTiles.loop_u7
           $1706 = ClearMap
           $170f = ClearMap.loop_u8
           $171a = ReplaceTilemapHorizontal
           $1743 = ReplaceTilemapHorizontal.handleZero
           $1745 = ReplaceTilemapHorizontal.handleZeroEnd
           $1751 = ReplaceTilemapHorizontal.loop
           $176f = ReplaceTilemapHorizontal.end
           $1774 = MoveToNextTilemap
           $1787 = MoveToNextTilemap.canUpdateTilemap
           $179a = MoveToNextTilemap.clouds1
           $17af = MoveToNextTilemap.clouds2
           $17c2 = MoveToNextTilemap.end
  SECTION: $17c5-$192b ($0167 bytes) ["level data"]
           $17c5 = W1L1W1
           $17c8 = W1L1W2
           $17c8 = W1L1W1End
           $17ce = W1L1W3
           $17ce = W1L1W2End
           $17d7 = W1L1W4
           $17d7 = W1L1W3End
           $17dd = W1L2W1
           $17dd = W1L1W4End
           $17e6 = W1L2W2
           $17e6 = W1L2W1End
           $17ec = W1L2W3
           $17ec = W1L2W2End
           $17f2 = W1L2W4
           $17f2 = W1L2W3End
           $17fe = W1L2W4End
           $17fe = W2L1
           $1801 = W2L1End
           $1801 = InitializeLevelVars
           $180d = LevelDataHandler
           $180d = LevelDataHandler.loop
           $1828 = LevelDataHandler.pointBalloon
           $1837 = LevelDataHandler.balloonCactus
           $1846 = LevelDataHandler.bird
           $1855 = LevelDataHandler.bomb
           $1864 = LevelDataHandler.porcupine
           $1873 = LevelDataHandler.empty
           $1875 = LevelDataHandler.loopCheck
           $187b = LevelDataHandler.end
           $187c = LevelDataManager
           $1899 = LevelDataManager.w1
           $18a7 = LevelDataManager.w1_l1
           $18bd = LevelDataManager.w1_l1_w1
           $18c5 = LevelDataManager.w1_l1_w2
           $18cd = LevelDataManager.w1_l1_w3
           $18d5 = LevelDataManager.w1_l1_w4
           $18e8 = LevelDataManager.w1_l2
           $18fd = LevelDataManager.w1_l2_w1
           $1905 = LevelDataManager.w1_l2_w2
           $190d = LevelDataManager.w1_l2_w3
           $1915 = LevelDataManager.w1_l2_w4
           $191d = LevelDataManager.w2
           $191f = LevelDataManager.w3
           $1921 = LevelDataManager.handle
           $192b = LevelDataManager.end
  SECTION: $192c-$19ec ($00c1 bytes) ["rom"]
           $192c = Start
           $1960 = StartClassic
           $1960 = MenuLoopOpening
           $1960 = MenuLoop
           $19ae = PreGameLoop
           $19cf = GameLoopCountdown
           $19de = GameLoop
  SECTION: $19ed-$1a77 ($008b bytes) ["collision"]
           $19ed = CollisionCheck
           $19fa = CollisionCheck.tryOtherY
           $1a02 = CollisionCheck.skip8x8Adjustment
           $1a0e = CollisionCheck.checkX
           $1a1b = CollisionCheck.tryOtherX
           $1a28 = CollisionCheck.collision
           $1a2c = CollisionCheck.end
           $1a30 = CollisionWithPlayer
           $1a3b = CollisionFallingEnemy
           $1a3c = OffScreenXEnemies
           $1a4d = OffScreenXEnemies.end
           $1a4f = OffScreenYEnemies
           $1a60 = OffScreenYEnemies.end
           $1a62 = OffScreenX
           $1a6a = OffScreenX.end
           $1a6c = OffScreenY
           $1a76 = OffScreenY.end
  SECTION: $1a78-$1aea ($0073 bytes) ["joypad"]
           $1a78 = ReadInput
           $1aa8 = JOY_RIGHT
           $1ab0 = JOY_LEFT
           $1ab8 = JOY_UP
           $1ac0 = JOY_DOWN
           $1ac8 = JOY_A
           $1ad0 = JOY_B
           $1ad8 = JOY_SELECT
           $1ae0 = JOY_START
           $1ae8 = JOY_FALSE
  SECTION: $1aeb-$1b08 ($001e bytes) ["OAM DMA routine"]
           $1aeb = CopyDMARoutine
           $1af2 = CopyDMARoutine.copy
           $1af9 = DMARoutine
           $1afd = DMARoutine.wait
           $1b01 = DMARoutineEnd
           $1b01 = OAMDMA
    SLACK: $2513 bytes

ROMX bank #1:
  SECTION: $4000-$560f ($1610 bytes) ["tilesets"]
           $4000 = CactusTiles
           $42c0 = CactusTilesEnd
           $42c0 = PorcupineTiles
           $43a0 = PorcupineTilesEnd
           $43a0 = PropellerCactusTiles
           $43a0 = PropellerCactusTilesEnd
           $43a0 = BackgroundTiles
           $47e0 = BackgroundTilesEnd
           $47e0 = ClassicParkTiles
           $4820 = CountdownTiles
           $4820 = ClassicParkTilesEnd
           $4920 = CountdownTilesEnd
           $4920 = WindowTiles
           $4af0 = WindowTilesEnd
           $4af0 = MenuTiles
           $4b10 = MenuTilesEnd
           $4b10 = MenuTitleTiles
           $5610 = MenuTitleTilesEnd
  SECTION: $5610-$614d ($0b3e bytes) ["Song Data2"]
           $5610 = angryTheme
           $5625 = order_cnt
           $5626 = order1
           $5630 = order2
           $563a = order3
           $5644 = order4
           $564e = P0
           $570e = P1
           $57ce = P2
           $588e = P3
           $594e = P4
           $5a0e = P5
           $5ace = P6
           $5b8e = P7
           $5c4e = P8
           $5d0e = P9
           $5dce = P10
           $5e8e = P11
           $5f4e = duty_instruments
           $5f4e = itSquareinst1
           $5f52 = itSquareinst2
           $5f56 = itSquareinst3
           $5f5a = itSquareinst4
           $5f5e = itSquareinst5
           $5f62 = itSquareinst6
           $5f66 = itSquareinst7
           $5f6a = itSquareinst8
           $5f6e = itSquareinst9
           $5f72 = itSquareinst10
           $5f76 = itSquareinst11
           $5f7a = itSquareinst12
           $5f7e = itSquareinst13
           $5f82 = itSquareinst14
           $5f86 = itSquareinst15
           $5f8a = wave_instruments
           $5f8a = itWaveinst1
           $5f8e = itWaveinst2
           $5f92 = itWaveinst3
           $5f96 = itWaveinst4
           $5f9a = itWaveinst5
           $5f9e = itWaveinst6
           $5fa2 = itWaveinst7
           $5fa6 = itWaveinst8
           $5faa = itWaveinst9
           $5fae = itWaveinst10
           $5fb2 = itWaveinst11
           $5fb6 = itWaveinst12
           $5fba = itWaveinst13
           $5fbe = itWaveinst14
           $5fc2 = itWaveinst15
           $5fc6 = noise_instruments
           $5fc6 = itNoiseinst1
           $5fce = itNoiseinst2
           $5fd6 = itNoiseinst3
           $5fde = itNoiseinst4
           $5fe6 = itNoiseinst5
           $5fee = itNoiseinst6
           $5ff6 = itNoiseinst7
           $5ffe = itNoiseinst8
           $6006 = itNoiseinst9
           $600e = itNoiseinst10
           $6016 = itNoiseinst11
           $601e = itNoiseinst12
           $6026 = itNoiseinst13
           $602e = itNoiseinst14
           $6036 = itNoiseinst15
           $603e = routines
           $603e = __end_hUGE_Routine_0
           $603e = __hUGE_Routine_0
           $603f = __end_hUGE_Routine_1
           $603f = __hUGE_Routine_1
           $6040 = __end_hUGE_Routine_2
           $6040 = __hUGE_Routine_2
           $6041 = __end_hUGE_Routine_3
           $6041 = __hUGE_Routine_3
           $6042 = __end_hUGE_Routine_4
           $6042 = __hUGE_Routine_4
           $6043 = __end_hUGE_Routine_5
           $6043 = __hUGE_Routine_5
           $6044 = __end_hUGE_Routine_6
           $6044 = __hUGE_Routine_6
           $6045 = __end_hUGE_Routine_7
           $6045 = __hUGE_Routine_7
           $6046 = __hUGE_Routine_8
           $6046 = __end_hUGE_Routine_8
           $6047 = __hUGE_Routine_9
           $6047 = __end_hUGE_Routine_9
           $6048 = __hUGE_Routine_10
           $6048 = __end_hUGE_Routine_10
           $6049 = __hUGE_Routine_11
           $6049 = __end_hUGE_Routine_11
           $604a = __hUGE_Routine_12
           $604a = __end_hUGE_Routine_12
           $604b = __hUGE_Routine_13
           $604b = __end_hUGE_Routine_13
           $604c = __end_hUGE_Routine_14
           $604c = __hUGE_Routine_14
           $604d = __end_hUGE_Routine_15
           $604d = __hUGE_Routine_15
           $604e = waves
           $604e = wave0
           $605e = wave1
           $606e = wave2
           $607e = wave3
           $608e = wave4
           $609e = wave5
           $60ae = wave6
           $60be = wave7
           $60ce = wave8
           $60de = wave9
           $60ee = wave10
           $60fe = wave11
           $610e = wave12
           $611e = wave13
           $612e = wave14
           $613e = wave15
  SECTION: $614e-$666b ($051e bytes) ["Song Data"]
           $614e = menuTheme
           $6163 = order_cnt
           $6164 = order1
           $6166 = order2
           $6168 = order3
           $616a = order4
           $616c = P1
           $622c = P2
           $62ec = P3
           $63ac = P6
           $646c = duty_instruments
           $646c = itSquareinst1
           $6470 = itSquareinst2
           $6474 = itSquareinst3
           $6478 = itSquareinst4
           $647c = itSquareinst5
           $6480 = itSquareinst6
           $6484 = itSquareinst7
           $6488 = itSquareinst8
           $648c = itSquareinst9
           $6490 = itSquareinst10
           $6494 = itSquareinst11
           $6498 = itSquareinst12
           $649c = itSquareinst13
           $64a0 = itSquareinst14
           $64a4 = itSquareinst15
           $64a8 = wave_instruments
           $64a8 = itWaveinst1
           $64ac = itWaveinst2
           $64b0 = itWaveinst3
           $64b4 = itWaveinst4
           $64b8 = itWaveinst5
           $64bc = itWaveinst6
           $64c0 = itWaveinst7
           $64c4 = itWaveinst8
           $64c8 = itWaveinst9
           $64cc = itWaveinst10
           $64d0 = itWaveinst11
           $64d4 = itWaveinst12
           $64d8 = itWaveinst13
           $64dc = itWaveinst14
           $64e0 = itWaveinst15
           $64e4 = noise_instruments
           $64e4 = itNoiseinst1
           $64ec = itNoiseinst2
           $64f4 = itNoiseinst3
           $64fc = itNoiseinst4
           $6504 = itNoiseinst5
           $650c = itNoiseinst6
           $6514 = itNoiseinst7
           $651c = itNoiseinst8
           $6524 = itNoiseinst9
           $652c = itNoiseinst10
           $6534 = itNoiseinst11
           $653c = itNoiseinst12
           $6544 = itNoiseinst13
           $654c = itNoiseinst14
           $6554 = itNoiseinst15
           $655c = routines
           $655c = __end_hUGE_Routine_0
           $655c = __hUGE_Routine_0
           $655d = __end_hUGE_Routine_1
           $655d = __hUGE_Routine_1
           $655e = __end_hUGE_Routine_2
           $655e = __hUGE_Routine_2
           $655f = __end_hUGE_Routine_3
           $655f = __hUGE_Routine_3
           $6560 = __end_hUGE_Routine_4
           $6560 = __hUGE_Routine_4
           $6561 = __end_hUGE_Routine_5
           $6561 = __hUGE_Routine_5
           $6562 = __end_hUGE_Routine_6
           $6562 = __hUGE_Routine_6
           $6563 = __end_hUGE_Routine_7
           $6563 = __hUGE_Routine_7
           $6564 = __hUGE_Routine_8
           $6564 = __end_hUGE_Routine_8
           $6565 = __hUGE_Routine_9
           $6565 = __end_hUGE_Routine_9
           $6566 = __hUGE_Routine_10
           $6566 = __end_hUGE_Routine_10
           $6567 = __hUGE_Routine_11
           $6567 = __end_hUGE_Routine_11
           $6568 = __hUGE_Routine_12
           $6568 = __end_hUGE_Routine_12
           $6569 = __hUGE_Routine_13
           $6569 = __end_hUGE_Routine_13
           $656a = __end_hUGE_Routine_14
           $656a = __hUGE_Routine_14
           $656b = __end_hUGE_Routine_15
           $656b = __hUGE_Routine_15
           $656c = waves
           $656c = wave0
           $657c = wave1
           $658c = wave2
           $659c = wave3
           $65ac = wave4
           $65bc = wave5
           $65cc = wave6
           $65dc = wave7
           $65ec = wave8
           $65fc = wave9
           $660c = wave10
           $661c = wave11
           $662c = wave12
           $663c = wave13
           $664c = wave14
           $665c = wave15
  SECTION: $666c-$69d6 ($036b bytes) ["balloon cactus"]
           $666c = InitializeBalloonCactus
           $6675 = InitializeBalloonCactus.loop_u1
           $6680 = GetStruct
           $66bf = SetStruct
           $66fe = SpawnBalloonCactus
           $6711 = SpawnBalloonCactus.availableSpace
           $671a = SpawnBalloonCactus.availableOAMSpace
           $6748 = SpawnBalloonCactus.isLeftside
           $6748 = SpawnBalloonCactus.balloonLeft
           $6760 = SpawnBalloonCactus.balloonRight
           $6770 = SpawnBalloonCactus.cactusLeft
           $677e = SpawnBalloonCactus.cactusRight
           $678e = SpawnBalloonCactus.setStruct
           $6793 = SpawnBalloonCactus.end
           $6798 = ClearCactus
           $67ad = ClearBalloon
           $67c1 = Clear
           $67cb = PopBalloonAnimation
           $67dc = PopBalloonAnimation.canSwitchFrames
           $67ea = PopBalloonAnimation.frame0
           $680c = PopBalloonAnimation.frame1
           $682e = PopBalloonAnimation.clear
           $684d = PopBalloonAnimation.endFrame
           $6851 = PopBalloonAnimation.end
           $6852 = CactusFalling
           $6864 = CactusFalling.falling
           $687a = CactusFalling.skipAcceleration
           $6886 = CactusFalling.offScreen
           $6889 = CactusFalling.end
           $688a = UpdateBalloonPosition
           $688a = UpdateBalloonPosition.balloonLeft
           $689f = UpdateBalloonPosition.balloonRight
           $68aa = UpdateCactusPosition
           $68aa = UpdateCactusPosition.cactusLeft
           $68bf = UpdateCactusPosition.cactusRight
           $68ca = Move
           $68e5 = Move.isLeftside
           $68f3 = Move.updatePosition
           $68fa = DeathOfBalloonCactus
           $6929 = CollisionBalloonCactus
           $6929 = CollisionBalloonCactus.checkHit
           $6940 = CollisionBalloonCactus.checkHitPlayer
           $695e = BalloonCactusUpdate
           $6965 = BalloonCactusUpdate.loop
           $6981 = BalloonCactusUpdate.isAlive
           $699e = BalloonCactusUpdate.offScreen
           $69a3 = BalloonCactusUpdate.popped
           $69ad = BalloonCactusUpdate.notPopping
           $69b7 = BalloonCactusUpdate.checkLoop
           $69d2 = BalloonCactusUpdate.end
  SECTION: $69d7-$6d3a ($0364 bytes) ["bird"]
           $69d7 = InitializeBird
           $69e0 = InitializeBird.loop_u1
           $69eb = GetStruct
           $6a0e = SetStruct
           $6a31 = SpawnBird
           $6a44 = SpawnBird.availableSpace
           $6a4e = SpawnBird.availableOAMSpace
           $6a6b = SpawnBird.isRightside
           $6a70 = SpawnBird.birdLeft
           $6a88 = SpawnBird.birdMiddle
           $6a98 = SpawnBird.birdRight
           $6aaa = SpawnBird.isLeftside
           $6aaa = SpawnBird.leftBirdLeft
           $6ac2 = SpawnBird.leftBirdMiddle
           $6ad2 = SpawnBird.leftBirdRight
           $6ae2 = SpawnBird.setStruct
           $6ae7 = SpawnBird.end
           $6aec = BirdRightsideFlap
           $6af3 = BirdRightsideFlap.soaring
           $6b19 = BirdRightsideFlap.flapping
           $6b48 = BirdLeftsideFlap
           $6b4f = BirdLeftsideFlap.soaring
           $6b75 = BirdLeftsideFlap.flapping
           $6ba4 = Clear
           $6bc0 = UpdateBirdPosition
           $6bc0 = UpdateBirdPosition.birdLeft
           $6bd5 = UpdateBirdPosition.birdMiddle
           $6be1 = UpdateBirdPosition.birdRight
           $6bec = Move
           $6bf3 = Move.isRightside
           $6c01 = Move.isLeftside
           $6c0b = Move.moveDown
           $6c19 = Move.moveEnd
           $6c1d = BirdFall
           $6c29 = BirdFall.checkOffscreenY
           $6c3b = BirdFall.end
           $6c3e = DeathOfBird
           $6c56 = DeathOfBird.facingLeft
           $6c7e = DeathOfBird.facingRight
           $6ca6 = CollisionBird
           $6ca6 = CollisionBird.checkHitPlayer
           $6cc5 = BirdUpdate
           $6ccc = BirdUpdate.loop
           $6ce8 = BirdUpdate.isAlive
           $6d05 = BirdUpdate.offScreen
           $6d0a = BirdUpdate.isDead
           $6d1b = BirdUpdate.checkLoop
           $6d36 = BirdUpdate.end
  SECTION: $6d3b-$6fd2 ($0298 bytes) ["bomb"]
           $6d3b = InitializeBomb
           $6d44 = InitializeBomb.loop_u1
           $6d4f = GetStruct
           $6d72 = SetStruct
           $6d95 = SpawnBomb
           $6da7 = SpawnBomb.availableSpace
           $6db0 = SpawnBomb.availableOAMSpace
           $6dc6 = SpawnBomb.balloonLeft
           $6ddf = SpawnBomb.balloonRight
           $6df0 = SpawnBomb.bombSpace
           $6dfb = SpawnBomb.setStruct
           $6e00 = SpawnBomb.end
           $6e05 = Clear
           $6e21 = Move
           $6e29 = Move.balloonLeft
           $6e3e = Move.balloonRight
           $6e4a = Move.bombSpace
           $6e55 = DeathOfBomb
           $6e5f = CollisionBomb
           $6e7a = ExplosionAnimation
           $6e8b = ExplosionAnimation.canSwitchFrames
           $6ea3 = ExplosionAnimation.frame0
           $6ec6 = ExplosionAnimation.frame1
           $6f06 = ExplosionAnimation.frame2
           $6f2f = ExplosionAnimation.frame3
           $6f58 = ExplosionAnimation.clear
           $6f5c = ExplosionAnimation.endFrame
           $6f63 = ExplosionAnimation.end
           $6f64 = BombUpdate
           $6f6b = BombUpdate.loop
           $6f87 = BombUpdate.isAlive
           $6fa4 = BombUpdate.offScreen
           $6fa9 = BombUpdate.popped
           $6fb3 = BombUpdate.checkLoop
           $6fce = BombUpdate.end
  SECTION: $6fd3-$725d ($028b bytes) ["classic"]
           $6fd3 = InitializeClassicVars
           $6fd8 = ParkFadeOut
           $6feb = ParkFadeOut.startFadeOut
           $6ff1 = ParkFadeOut.fadeOut
           $6ffc = ParkFadeOut.hasFadedOut
           $7000 = UpdatePark
           $7009 = UpdatePark.moveUp
           $7012 = UpdatePark.flyUpNormal
           $7019 = UpdatePark.flyUpFast
           $701c = UpdatePark.end
           $701d = TryToUnpause
           $7034 = TryToUnpause.end
           $7035 = ParkEnteredClassic
           $703d = StartedClassic
           $7045 = SpawnHandWave
           $7068 = SpawnHandWave.end
           $7069 = HandWaveAnimation
           $7070 = HandWaveAnimation.frame0
           $708b = HandWaveAnimation.frame1
           $70a5 = HandWaveAnimation.end
           $70a6 = SpawnCountdown
           $70d5 = SpawnCountdown.end
           $70d6 = CountdownAnimation
           $70dd = CountdownAnimation.countdown
           $70e7 = CountdownAnimation.balloonPop
           $70ef = CountdownAnimation.frames
           $7116 = CountdownAnimation.frame0
           $7139 = CountdownAnimation.frame1
           $715c = CountdownAnimation.frame2
           $717f = CountdownAnimation.frame3
           $71a2 = CountdownAnimation.frame4
           $71c5 = CountdownAnimation.frame5
           $71e5 = CountdownAnimation.remove
           $71fe = CountdownAnimation.end
           $71ff = IncrementScrollOffset
           $720d = IncrementScrollOffset.end
           $720e = SetClassicMapStartPoint
           $7213 = UpdateSprites
           $7226 = UpdateClassicCountdown
           $723e = UpdateClassic
           $725d = UpdateClassic.end
  SECTION: $725e-$745c ($01ff bytes) ["point balloon"]
           $725e = InitializePointBalloon
           $7267 = InitializePointBalloon.loop_u1
           $7272 = GetStruct
           $7295 = SetStruct
           $72b8 = SpawnPointBalloon
           $72ca = SpawnPointBalloon.availableSpace
           $72d3 = SpawnPointBalloon.availableOAMSpace
           $72e9 = SpawnPointBalloon.balloonLeft
           $7301 = SpawnPointBalloon.balloonRight
           $7311 = SpawnPointBalloon.setStruct
           $7316 = SpawnPointBalloon.end
           $731b = PopBalloonAnimation
           $732c = PopBalloonAnimation.canSwitchFrames
           $7338 = PopBalloonAnimation.frame0
           $735a = PopBalloonAnimation.frame1
           $737c = PopBalloonAnimation.clear
           $7380 = PopBalloonAnimation.endFrame
           $7384 = PopBalloonAnimation.end
           $7385 = Clear
           $739d = Move
           $73a4 = Move.balloonLeft
           $73b9 = Move.balloonRight
           $73c4 = DeathOfPointBalloon
           $73d6 = CollisionPointBalloon
           $73ee = PointBalloonUpdate
           $73f5 = PointBalloonUpdate.loop
           $7411 = PointBalloonUpdate.isAlive
           $742e = PointBalloonUpdate.offScreen
           $7433 = PointBalloonUpdate.popped
           $743d = PointBalloonUpdate.checkLoop
           $7458 = PointBalloonUpdate.end
  SECTION: $745d-$75af ($0153 bytes) ["porcupine"]
           $745d = InitializePorcupine
           $7466 = InitializePorcupine.loop_u1
           $7471 = GetStruct
           $7489 = SetStruct
           $74a0 = SpawnPorcupine
           $74b3 = SpawnPorcupine.availableSpace
           $74bd = SpawnPorcupine.availableOAMSpace
           $74d3 = SpawnPorcupine.topLeft
           $74eb = SpawnPorcupine.topMiddle
           $74fb = SpawnPorcupine.topMiddle2
           $750b = SpawnPorcupine.topRight
           $751b = SpawnPorcupine.bottomLeft
           $752b = SpawnPorcupine.bottomMiddle
           $753d = SpawnPorcupine.bottomMiddle2
           $754f = SpawnPorcupine.bottomRight
           $7561 = SpawnPorcupine.setStruct
           $7566 = SpawnPorcupine.end
           $756b = PorcupineUpdate
           $7572 = PorcupineUpdate.loop
           $758e = PorcupineUpdate.offScreen
           $758e = PorcupineUpdate.isAlive
           $7590 = PorcupineUpdate.checkLoop
           $7590 = PorcupineUpdate.isDead
           $75ab = PorcupineUpdate.end
  SECTION: $75b0-$76cf ($0120 bytes) ["menu"]
           $75b0 = InitializeMenu
           $75b9 = SpawnMenuCursor
           $75c2 = SpawnMenuCursor.availableSpace
           $75dc = SpawnMenuCursor.end
           $75dd = BlinkMenuCursor
           $75e5 = BlinkMenuCursor.blink
           $75f5 = BlinkMenuCursor.show
           $75f9 = BlinkMenuCursor.empty
           $75fd = MoveCursor
           $75fe = SelectMode
           $7605 = SelectMode.classicMode
           $760e = SelectMode.storyMode
           $760f = MenuInput
           $7619 = MenuInput.moveSelected
           $7622 = MenuInput.selectMode
           $762b = MenuInput.end
           $762c = UpdateMenuOpening
           $764c = UpdateMenuOpening.startSound
           $7651 = UpdateMenuOpening.scrollUpTitle
           $765d = UpdateMenuOpening.endSound
           $7662 = UpdateMenuOpening.scrollDownTitle
           $766e = UpdateMenuOpening.scrollUpTitle2
           $767a = UpdateMenuOpening.fadeOut
           $7685 = UpdateMenuOpening.loadFullMenu
           $769f = UpdateMenuOpening.fadeIn
           $76ab = UpdateMenuOpening.endFrame
           $76b2 = UpdateMenuOpening.end
           $76b3 = UpdateMenu
           $76c1 = UpdateMenu.fadeOut
           $76cc = UpdateMenu.hasFadedOut
  SECTION: $76d0-$7789 ($00ba bytes) ["sound"]
           $76d0 = AUDIO_OFF
           $76d4 = AUDIO_ON
           $76d9 = PopSound
           $76ec = ExplosionSound
           $76f9 = WaveSound
           $7706 = FallingSound
           $771b = RisingSound
           $7730 = StopSweepSound
           $7735 = CollectSound
           $774a = WrongAnswerSound
           $7761 = PercussionSound
           $776e = BassSound
           $777f = ClearSound
  SECTION: $778a-$782f ($00a6 bytes) ["palettes"]
           $778a = SetupPalettes
           $779b = SetupParkPalettes
           $77aa = FadeOutPalettes
           $77b0 = FadeOutPalettes.fadeOut
           $77c4 = FadeOutPalettes.fade1
           $77c8 = FadeOutPalettes.fade2
           $77cc = FadeOutPalettes.fade3
           $77d0 = FadeOutPalettes.fade4
           $77d2 = FadeOutPalettes.end
           $77e2 = FadeInPalettes
           $77e8 = FadeInPalettes.fadeIn
           $77fc = FadeInPalettes.fade1
           $7800 = FadeInPalettes.fade2
           $7804 = FadeInPalettes.fade3
           $7808 = FadeInPalettes.fade4
           $780a = FadeInPalettes.end
           $781a = HasFadedOut
           $7820 = HasFadedOut.false
           $7822 = HasFadedOut.true
           $7825 = HasFadedIn
           $782b = HasFadedIn.false
           $782d = HasFadedIn.true
  SECTION: $7830-$78cb ($009c bytes) ["memory"]
           $7830 = MEMCPY.memcpy_loop
           $7830 = MEMCPY
           $7834 = MEMCPY.memcpy_check_limit
           $783a = MEMCPY_WITH_OFFSET
           $783b = MEMCPY_WITH_OFFSET.memcpy_loop
           $7846 = MEMCPY_WITH_OFFSET.memcpy_check_limit
           $784d = ClearOAM
           $7854 = ClearOAM.loop_u1
           $785d = ClearRAM
           $7864 = ClearRAM.loop_u2
           $786d = RequestOAMSpace
           $7876 = RequestOAMSpace.loop
           $788d = RequestOAMSpace.availableSpace
           $7892 = RequestOAMSpace.sufficientSpace
           $78a2 = RequestOAMSpace.isNotZero4
           $78a3 = RequestOAMSpace.isNotZero3
           $78a4 = RequestOAMSpace.isNotZero2
           $78a5 = RequestOAMSpace.isNotZero1
           $78a7 = RequestOAMSpace.notEnoughSprites
           $78af = RequestOAMSpace.end
           $78b2 = RequestRAMSpace
           $78b2 = RequestRAMSpace.loop
           $78b7 = RequestRAMSpace.availableSpace
           $78bb = RequestRAMSpace.checkLoop
           $78ca = RequestRAMSpace.noFreeSpace
           $78cb = RequestRAMSpace.end
  SECTION: $78cc-$7914 ($0049 bytes) ["math"]
           $78cc = MODULO
           $78ce = MODULO.loop
           $78d3 = RANDOM
           $78dc = DIVISION
           $78e2 = DIVISION.loop
           $78e7 = DIVISION.end
           $78ea = ToBCD
           $7901 = ToBCD.end
           $7904 = MULTIPLY
           $7907 = MULTIPLY.loop
           $7912 = MULTIPLY.end
  SECTION: $7915-$7946 ($0032 bytes) ["lcd"]
           $7915 = LCD_OFF
           $791c = LCD_ON
           $7923 = LCD_ON_NO_WINDOW
           $792a = WaitVBlank
           $7931 = WaitVBlank.loop
           $793c = SetupWindow
  SECTION: $7947-$7973 ($002d bytes) ["general initialization"]
           $7947 = InitializeGameVars
  SECTION: $7974-$7998 ($0025 bytes) ["score"]
           $7974 = InitializeScore
           $797c = AddPoints
           $798c = AddPoints.carry
           $7996 = AddPoints.end
  SECTION: $7999-$79a0 ($0008 bytes) ["timer"]
           $7999 = UpdateGlobalTimer
    SLACK: $065f bytes

WRAM0 bank #0:
  SECTION: $c000-$c017 ($0018 bytes) ["general RAM vars"]
           $c000 = vblank_flag
           $c001 = score
           $c004 = global_timer
           $c005 = joypad_down
           $c006 = joypad_pressed
           $c007 = paused_game
           $c008 = selected_mode
           $c009 = hand_waving_frame
           $c00a = countdown_frame
           $c00b = cloud_scroll_offset
           $c00c = classic_mode_stage
           $c00d = fade_frame
           $c00e = wOAMGeneral1
           $c00f = wOAMGeneral2
           $c010 = wLCDInterrupt
           $c012 = wUpdateTilemapAddress
           $c014 = wUpdateTilemapOffset
           $c015 = wUpdateTilemapIndex
           $c016 = wHasUpdatedNextTilemapAddress
           $c017 = wLastUpdatedSCX
  SECTION: $c018-$c05d ($0046 bytes) ["Playback variables"]
           $c018 = _start_vars
           $c018 = order_cnt
           $c019 = order1
           $c019 = _start_song_descriptor_pointers
           $c01b = order2
           $c01d = order3
           $c01f = order4
           $c021 = duty_instruments
           $c023 = wave_instruments
           $c025 = noise_instruments
           $c027 = routines
           $c029 = waves
           $c02b = mute_channels
           $c02b = _end_song_descriptor_pointers
           $c02c = pattern1
           $c02e = pattern2
           $c030 = pattern3
           $c032 = pattern4
           $c034 = ticks_per_row
           $c035 = current_order
           $c036 = next_order
           $c037 = row_break
           $c038 = temp_note_value
           $c03a = row
           $c03b = tick
           $c03c = counter
           $c03d = current_wave
           $c03d = _hUGE_current_wave
           $c03e = channel_period1
           $c03e = channels
           $c03e = channel1
           $c040 = toneporta_target1
           $c042 = channel_note1
           $c043 = vibrato_tremolo_phase1
           $c044 = envelope1
           $c045 = highmask1
           $c046 = channel_period2
           $c046 = channel2
           $c048 = toneporta_target2
           $c04a = channel_note2
           $c04b = vibrato_tremolo_phase2
           $c04c = envelope2
           $c04d = highmask2
           $c04e = channel_period3
           $c04e = channel3
           $c050 = toneporta_target3
           $c052 = channel_note3
           $c053 = vibrato_tremolo_phase3
           $c054 = envelope3
           $c055 = highmask3
           $c056 = channel_period4
           $c056 = channel4
           $c058 = toneporta_target4
           $c05a = channel_note4
           $c05b = vibrato_tremolo_phase4
           $c05c = envelope4
           $c05d = highmask4
           $c05e = _end_vars
  SECTION: $c05e-$c07d ($0020 bytes) ["point balloon vars"]
           $c05e = pointBalloon
  SECTION: $c07e-$c09b ($001e bytes) ["balloon cactus vars"]
           $c07e = balloonCactus
  SECTION: $c09c-$c0ab ($0010 bytes) ["bird vars"]
           $c09c = bird
  SECTION: $c0ac-$c0bb ($0010 bytes) ["enemy struct vars"]
           $c0ac = wEnemyOffset
           $c0ad = wEnemyY
           $c0ae = wEnemyX
           $c0af = wEnemyActive
           $c0b0 = wEnemyOAM
           $c0b1 = wEnemyAlive
           $c0b2 = wEnemyPopping
           $c0b3 = wEnemyPoppingFrame
           $c0b4 = wEnemyPoppingTimer
           $c0b5 = wEnemyRightside
           $c0b6 = wEnemyY2
           $c0b7 = wEnemyX2
           $c0b8 = wEnemyFalling
           $c0b9 = wEnemyFallingSpeed
           $c0ba = wEnemyFallingTimer
           $c0bb = wEnemyDelayFallingTimer
  SECTION: $c0bc-$c0cb ($0010 bytes) ["bomb vars"]
           $c0bc = bomb
  SECTION: $c0cc-$c0db ($0010 bytes) ["player vars"]
           $c0cc = wPlayerY
           $c0cd = wPlayerX
           $c0ce = wPlayerY2
           $c0cf = wPlayerX2
           $c0d0 = wPlayerAlive
           $c0d1 = wPlayerPopping
           $c0d2 = wPlayerPoppingFrame
           $c0d3 = wPlayerPoppingTimer
           $c0d4 = wPlayerFalling
           $c0d5 = wPlayerFallSpeed
           $c0d6 = wPlayerFallingTimer
           $c0d7 = wPlayerDelayFallingTimer
           $c0d8 = wPlayerRespawnTimer
           $c0d9 = wPlayerSpeed
           $c0da = wPlayerLives
           $c0db = wPlayerInvincible
  SECTION: $c0dc-$c0e0 ($0005 bytes) ["porcupine vars"]
           $c0dc = porcupine
  SECTION: $c0e1-$c0e3 ($0003 bytes) ["level vars"]
           $c0e1 = wWorld
           $c0e2 = wLevel
           $c0e3 = wWave
  SECTION: $c0e4-$c0e4 ($0001 byte) ["menu vars"]
           $c0e4 = wMenuFrame
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = OAMVars
           $c110 = wOAM
           $c1a0 = OAMVarsEnd
    SLACK: $0e7b bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $1aed bytes in 1 bank
    ROMX: $39a1 bytes in 1 bank
    WRAM0: $0185 bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
