ROM0 bank #0:
  SECTION: $0000-$0032 ($0033 bytes) ["controller"]
           $0000 = InitializeController
           $000b = ReadController
           $000b = ReadController.dPad
           $0019 = ReadController.buttons
           $0026 = ReadController.setControllerVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00e1 ($0097 bytes) ["bullet"]
           $004b = InitializeBullet
           $005b = SpawnBullet
           $0075 = SpawnBullet.spawnFromLeft
           $007d = SpawnBullet.leftOAM
           $008b = SpawnBullet.spawnFromRight
           $0093 = SpawnBullet.rightOAM
           $00a1 = ClearBullet
           $00ad = BulletUpdate
           $00b3 = BulletUpdate.isAlive
           $00be = BulletUpdate.offScreen
           $00c1 = BulletUpdate.onScreen
           $00c6 = BulletUpdate.move
           $00d0 = BulletUpdate.moveLeft
           $00d9 = BulletUpdate.moveRight
  SECTION: $00e2-$00ff ($001e bytes) ["OAM DMA routine"]
           $00e2 = CopyDMARoutine
           $00e9 = CopyDMARoutine.copy
           $00f0 = DMARoutine
           $00f4 = DMARoutine.wait
           $00f8 = DMARoutineEnd
           $00f8 = OAMDMA
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0ccf ($0b80 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = StageClearMap
           $0420 = StageClearMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = Level3Map
           $0820 = Level2MapEnd
           $0aa0 = MenuMap
           $0aa0 = Level3MapEnd
           $0c08 = WindowMap
           $0c08 = MenuMapEnd
           $0c30 = WindowMapEnd
           $0c30 = CloudsMap
           $0c70 = CloudsMapEnd
           $0c70 = RainCloudsMap
           $0cd0 = RainCloudsMapEnd
  SECTION: $0cd0-$173f ($0a70 bytes) ["tilesets"]
           $0cd0 = GameSpriteTiles
           $11b0 = Level1Tiles
           $11b0 = GameSpriteTilesEnd
           $1640 = CloudsTiles
           $1640 = Level1TilesEnd
           $16c0 = RainCloudsTiles
           $16c0 = CloudsTilesEnd
           $1740 = RainCloudsTilesEnd
  SECTION: $1740-$1ee0 ($07a1 bytes) ["Sound Driver"]
           $1740 = _hUGE_init_banked
           $1744 = _hUGE_init
           $1746 = continue_init
           $174f = _hUGE_mute_channel_banked
           $1753 = _hUGE_mute_channel
           $1755 = continue_mute
           $1760 = hUGE_mute_channel
           $1766 = hUGE_mute_channel.enable_loop
           $176d = hUGE_mute_channel.enable_cut
           $177a = _hUGE_set_position_banked
           $177e = _hUGE_set_position
           $1780 = continue_set_position
           $1787 = hUGE_init
           $178e = hUGE_init.fill_loop
           $17b2 = hUGE_init.copy_song_descriptor_loop
           $17bc = _refresh_patterns
           $17d6 = _refresh_patterns.load_pattern
           $17e6 = _load_note_data
           $17f8 = _lookup_note
           $1802 = _convert_note
           $1810 = _convert_ch4_note
           $1827 = _update_channel
           $1831 = _update_channel1
           $183f = _update_channel2
           $184d = _update_channel3
           $185b = _update_channel4
           $186b = _playnote1
           $1886 = _playnote2
           $18a1 = _playnote3
           $18c2 = _playnote4
           $18d6 = _doeffect
           $18eb = _doeffect.jump
           $191b = setup_channel_pointer
           $1929 = fx_set_master_volume
           $192e = fx_call_routine
           $1950 = fx_call_routine.call_hl
           $1951 = fx_set_pan
           $1956 = fx_set_duty
           $195b = fx_set_duty.chan2
           $1965 = fx_set_duty.chan1
           $196f = fx_vol_slide
           $1976 = fx_vol_slide.loop
           $197b = fx_vol_slide.cont
           $19ad = fx_vol_slide.cont1
           $19b4 = fx_vol_slide.cont2
           $19c8 = _envelope_registers
           $19d0 = fx_note_delay
           $19e9 = fx_note_delay.play_note
           $1a07 = _play_note_routines
           $1a13 = fx_set_speed
           $1a19 = hUGE_set_position
           $1a19 = fx_pos_jump
           $1a23 = fx_pattern_break
           $1a28 = fx_note_cut
           $1a30 = fx_note_cut.loop
           $1a35 = fx_note_cut.cont
           $1a3a = note_cut
           $1a51 = fx_set_volume
           $1a52 = set_channel_volume
           $1a5d = set_chn_3_vol
           $1a6f = set_chn_3_vol.three
           $1a73 = set_chn_3_vol.two
           $1a77 = set_chn_3_vol.one
           $1a7b = set_chn_3_vol.zero
           $1a7c = set_chn_3_vol.done
           $1a7f = set_chn_2_vol
           $1a8f = set_chn_1_vol
           $1a9f = set_chn_4_vol
           $1aab = fx_vibrato
           $1abe = fx_vibrato.restore
           $1ac3 = fx_vibrato.go_up
           $1ace = fx_vibrato.finish_vibrato
           $1ad4 = fx_arpeggio
           $1ae0 = fx_arpeggio.greater_than_two
           $1ae2 = fx_arpeggio.test_greater_than_two
           $1af1 = fx_arpeggio.arp_options
           $1af7 = fx_arpeggio.reset_arp
           $1afa = fx_arpeggio.set_arp2
           $1aff = fx_arpeggio.set_arp1
           $1b00 = fx_arpeggio.finish_arp
           $1b03 = fx_arpeggio.finish_skip_add
           $1b0c = fx_porta_up
           $1b1b = fx_porta_up.finish
           $1b22 = fx_porta_down
           $1b34 = fx_toneporta
           $1b46 = fx_toneporta.return_skip
           $1b50 = fx_toneporta.do_toneporta
           $1b65 = fx_toneporta.high_byte_same
           $1b6b = fx_toneporta.add
           $1b7d = fx_toneporta.subtract
           $1b93 = fx_toneporta.set_exact
           $1b95 = fx_toneporta.done
           $1ba8 = _setup_instrument_pointer_ch4
           $1bb3 = _setup_instrument_pointer
           $1bba = _setup_instrument_pointer.finish
           $1bc3 = _hUGE_dosound_banked
           $1bc3 = _hUGE_dosound
           $1c02 = _hUGE_dosound.write_mask1
           $1c05 = _hUGE_dosound.do_setvol1
           $1c18 = _hUGE_dosound.after_note1
           $1c4d = _hUGE_dosound.write_mask2
           $1c50 = _hUGE_dosound.do_setvol2
           $1c63 = _hUGE_dosound.after_note2
           $1cea = _hUGE_dosound.no_wave_copy
           $1ceb = _hUGE_dosound.write_mask3
           $1cee = _hUGE_dosound.do_setvol3
           $1cf9 = _hUGE_dosound.after_note3
           $1d4a = _hUGE_dosound.write_mask4
           $1d4d = _hUGE_dosound.do_setvol4
           $1d58 = _hUGE_dosound.after_note4
           $1d5b = _hUGE_dosound.process_effects
           $1d77 = _hUGE_dosound.after_effect1
           $1d93 = _hUGE_dosound.after_effect2
           $1daf = _hUGE_dosound.after_effect3
           $1dfa = _hUGE_dosound.done_macro
           $1e03 = process_tick
           $1e03 = _hUGE_dosound.after_effect4
           $1e15 = _newrow
           $1e2d = _newrow.no_break
           $1e38 = _neworder
           $1e45 = _update_current_order
           $1e4c = _noreset
           $1e51 = note_table
  SECTION: $1ee1-$22b3 ($03d3 bytes) ["player"]
           $1ee1 = InitializePlayer
           $1f14 = UpdateBalloonPosition
           $1f14 = UpdateBalloonPosition.balloonLeft
           $1f21 = UpdateBalloonPosition.balloonRight
           $1f2c = UpdateCactusPosition
           $1f2c = UpdateCactusPosition.cactusLeft
           $1f39 = UpdateCactusPosition.cactusRight
           $1f44 = SetPlayerPosition
           $1f5b = SetPlayerPositionOpeningDefault
           $1f63 = SetPlayerPositionOpeningCutscene
           $1f6b = SpawnPlayer
           $1f6b = SpawnPlayer.cactusLeft
           $1f7b = SpawnPlayer.cactusRight
           $1f8b = SpawnPlayer.balloonLeft
           $1f9b = SpawnPlayer.balloonRight
           $1fac = ClearPlayerCactus
           $1fb9 = ClearPlayerBalloon
           $1fc6 = PlayerControls
           $1fc6 = PlayerControls.right
           $1fcb = PlayerControls.setFacingRight
           $1fd0 = PlayerControls.checkOffscreenRight
           $1fd5 = PlayerControls.offscreenRight
           $1fde = PlayerControls.moveRight
           $1fee = PlayerControls.canCactusDriftLeft
           $1ffb = PlayerControls.cactusDriftLeft
           $1ffc = PlayerControls.endRight
           $1ffc = PlayerControls.left
           $2001 = PlayerControls.setFacingLeft
           $2005 = PlayerControls.checkOffscreenLeft
           $200a = PlayerControls.offscreenLeft
           $2015 = PlayerControls.moveLeft
           $2029 = PlayerControls.canCactusDriftRight
           $2035 = PlayerControls.cactusDriftRight
           $2036 = PlayerControls.endLeft
           $2036 = PlayerControls.up
           $203b = PlayerControls.checkOffscreenUp
           $2040 = PlayerControls.offscreenUp
           $204b = PlayerControls.moveUp
           $205f = PlayerControls.endUp
           $205f = PlayerControls.down
           $2064 = PlayerControls.checkOffscreenDown
           $2069 = PlayerControls.offscreenDown
           $2072 = PlayerControls.moveDown
           $2082 = PlayerControls.canCactusDriftUp
           $208f = PlayerControls.cactusDriftUp
           $2090 = PlayerControls.endDown
           $2090 = PlayerControls.canCactusDriftCenterX
           $20ab = PlayerControls.driftCenterXRight
           $20ae = PlayerControls.driftCenterXLeft
           $20af = PlayerControls.endDriftToCenterX
           $20af = PlayerControls.canCactusDriftCenterY
           $20cd = PlayerControls.driftCenterYUp
           $20d0 = PlayerControls.driftCenterYDown
           $20d1 = PlayerControls.endDriftToCenterY
           $20d1 = PlayerControls.start
           $20db = PlayerControls.endStart
           $20db = PlayerControls.AButton
           $20e7 = PlayerControls.activateAttack
           $20ef = PlayerControls.endA
           $20ef = PlayerControls.BButton
           $20fb = PlayerControls.activateBoost
           $2105 = PlayerControls.endB
           $2106 = MovePlayerUpForCutscene
           $2116 = FallCactusDown
           $212b = FallCactusDown.skipAcceleration
           $2134 = PopBalloonAnimation
           $2145 = PopBalloonAnimation.canSwitchFrames
           $2151 = PopBalloonAnimation.frame0
           $2163 = PopBalloonAnimation.frame1
           $2175 = PopBalloonAnimation.clear
           $2185 = PopBalloonAnimation.endFrame
           $218d = CactusFalling
           $2197 = CactusFalling.checkOffscreen
           $219f = CactusFalling.moveDown
           $21a6 = CactusFalling.offScreen
           $21af = CollisionWithPlayer
           $21bb = CollisionWithPlayer.deathOfPlayer
           $21df = PlayerUpdate.checkAlive
           $21df = PlayerUpdate
           $21e7 = PlayerUpdate.isAlive
           $21e7 = PlayerUpdate.checkInvincible
           $21ee = PlayerUpdate.isInvincible
           $21fc = PlayerUpdate.blinkNormal
           $2202 = PlayerUpdate.blinkFast
           $2206 = PlayerUpdate.blinkEnd
           $221c = PlayerUpdate.noBlink
           $2230 = PlayerUpdate.endInvincible
           $2230 = PlayerUpdate.checkMove
           $2236 = PlayerUpdate.canMove
           $224c = PlayerUpdate.endMove
           $224c = PlayerUpdate.checkBoost
           $2259 = PlayerUpdate.isChargingBoost
           $2261 = PlayerUpdate.resetBoost
           $2266 = PlayerUpdate.endBoost
           $2266 = PlayerUpdate.checkAttack
           $2273 = PlayerUpdate.isChargingAttack
           $2277 = PlayerUpdate.endAttack
           $2278 = PlayerUpdate.popped
           $2278 = PlayerUpdate.checkRespawn
           $2281 = PlayerUpdate.popping
           $2289 = PlayerUpdate.falling
           $2292 = PlayerUpdate.respawning
           $2299 = PlayerUpdate.respawn
           $22ab = PlayerUpdate.noMoreLives
  SECTION: $22b4-$2583 ($02d0 bytes) ["level data"]
           $22b4 = Level1
           $2311 = Level2
           $23e2 = Level3
           $24d3 = InitializeNewLevel
           $24eb = InitializeNewLevel.level1
           $24f0 = InitializeNewLevel.level2
           $24f5 = InitializeNewLevel.level3
           $24fa = InitializeNewLevel.level4
           $24fb = InitializeNewLevel.setLevelDataAddress
           $2503 = InitializeLevelVars
           $250c = SpawnDataHandler
           $2531 = LevelDataHandler
           $254c = LevelDataHandler.spawn
           $2559 = LevelDataHandler.wait
           $2565 = LevelDataHandler.waitEnd
           $2573 = LevelDataHandler.end
  SECTION: $2584-$2799 ($0216 bytes) ["game"]
           $2584 = InitializeGame
           $258c = LoadGameSpriteTiles
           $2599 = LoadLevel1Graphics
           $25b3 = LoadLevel2Graphics
           $25cc = LoadLevel3Graphics
           $25fe = SpawnCountdown
           $2629 = SpawnCountdown.end
           $262a = Countdown
           $2631 = Countdown.hasCountedDown
           $2634 = Countdown.countdown
           $2644 = Countdown.balloonPop
           $264b = Countdown.frames
           $2674 = Countdown.frame0
           $2696 = Countdown.frame1
           $26b8 = Countdown.frame2
           $26d9 = Countdown.frame3
           $26fa = Countdown.frame4
           $271b = Countdown.frame5
           $2739 = Countdown.remove
           $274e = Countdown.endFrame
           $2755 = Countdown.end
           $2757 = UpdateGameCountdown
           $276c = UpdateGame
           $276c = UpdateGame.tryToUnpause
           $2773 = UpdateGame.isPaused
           $2784 = UpdateGame.isNotPaused
           $2784 = UpdateGame.updateSprites
           $278d = UpdateGame.rest
  SECTION: $279a-$2935 ($019c bytes) ["interrupts"]
           $279a = InitializeInterrupts
           $27b0 = VBlankInterrupt
           $27c0 = LCDInterrupt
           $27ca = LCDInterruptEnd
           $27ce = MenuLCDInterrupt
           $27de = MenuLCDInterrupt.reset
           $27e7 = MenuLCDInterrupt.far
           $27f2 = MenuLCDInterrupt.close
           $27fb = MenuLCDInterrupt.end
           $27fe = SetMenuInterrupts
           $280c = OpeningCutsceneLCDInterrupt
           $2818 = OpeningCutsceneLCDInterrupt.hide
           $2823 = OpeningCutsceneLCDInterrupt.show
           $282c = OpeningCutsceneLCDInterrupt.end
           $282f = SetOpeningCutsceneInterrupts
           $283d = Level1LCDInterrupt
           $2851 = Level1LCDInterrupt.reset
           $285f = Level1LCDInterrupt.far
           $286a = Level1LCDInterrupt.middle
           $2875 = Level1LCDInterrupt.close2
           $287e = Level1LCDInterrupt.end
           $2881 = SetLevel1Interrupts
           $288f = Level2LCDInterrupt
           $28a3 = Level2LCDInterrupt.reset
           $28b1 = Level2LCDInterrupt.far
           $28bc = Level2LCDInterrupt.middle
           $28c7 = Level2LCDInterrupt.close
           $28d0 = Level2LCDInterrupt.end
           $28d3 = SetLevel2Interrupts
           $28e1 = Level3LCDInterrupt
           $28f5 = Level3LCDInterrupt.reset
           $2903 = Level3LCDInterrupt.close
           $290e = Level3LCDInterrupt.middle
           $2919 = Level3LCDInterrupt.rain
           $2925 = Level3LCDInterrupt.end
           $2928 = SetLevel3Interrupts
  SECTION: $2936-$2a8c ($0157 bytes) ["rom"]
           $2936 = Start
           $2973 = MenuLoopOpening
           $2973 = StartMenu
           $298b = MenuLoop
           $298b = StartGame
           $29d0 = OpeningCutsceneLoop
           $29d0 = SetupNextLevel
           $29f4 = SetupNextLevel.level1
           $29fc = SetupNextLevel.level2
           $2a04 = SetupNextLevel.level3
           $2a0f = SetupNextLevel.endLevelSetup
           $2a0f = SetupNextLevel.level6
           $2a0f = SetupNextLevel.level5
           $2a0f = SetupNextLevel.level4
           $2a36 = GameCountdownLoop
           $2a45 = GameLoop
           $2a54 = StageClear
           $2a7e = StageClearLoop
  SECTION: $2a8d-$2b98 ($010c bytes) ["window"]
           $2a8d = RefreshScore
           $2abd = RefreshTotal
           $2aef = LoadWindow.loadTiles
           $2aef = LoadWindow
           $2afb = LoadWindow.drawMap
           $2b15 = RefreshWindow
           $2b1a = RefreshWindow.refreshScore
           $2b20 = RefreshWindow.refreshLives
           $2b28 = RefreshWindow.refreshBoostBar
           $2b32 = RefreshWindow.isBoostCharging
           $2b3e = RefreshWindow.isBoostEmpty
           $2b45 = RefreshWindow.isBoost25Percent
           $2b4d = RefreshWindow.isBoost50Percent
           $2b55 = RefreshWindow.isBoost75Percent
           $2b5d = RefreshWindow.isBoostReady
           $2b62 = RefreshWindow.refreshAttackBar
           $2b6c = RefreshWindow.isAttackCharging
           $2b78 = RefreshWindow.isAttackEmpty
           $2b7e = RefreshWindow.isAttack25Percent
           $2b85 = RefreshWindow.isAttack50Percent
           $2b8c = RefreshWindow.isAttack75Percent
           $2b93 = RefreshWindow.isAttackReady
  SECTION: $2b99-$2c16 ($007e bytes) ["graphics"]
           $2b99 = AddBGTiles8800Method
           $2ba3 = AddBGTiles8800Method.tilesFitBlock
           $2ba8 = AddBGTiles8800Method.tilesExceedBlock
           $2bc2 = AddBGTiles8800Method.end
           $2bc5 = ClearAllTiles
           $2bce = ClearAllTiles.loop_u4
           $2bdd = ClearAllTiles.loop_u5
           $2bec = ClearAllTiles.loop_u6
           $2bf7 = ClearMap
           $2bfe = ClearMap.loop_u7
           $2c07 = ClearWindow
           $2c0e = ClearWindow.loop_u8
  SECTION: $2c17-$2c8b ($0075 bytes) ["enemy"]
           $2c17 = InitializeEnemies
           $2c1e = InitializeEnemies.loop_u1
           $2c27 = UpdateEnemy
           $2c30 = UpdateEnemy.loop
           $2c61 = UpdateEnemy.pointBalloon
           $2c66 = UpdateEnemy.balloonCactus
           $2c6b = UpdateEnemy.bird
           $2c70 = UpdateEnemy.bomb
           $2c75 = UpdateEnemy.porcupine
           $2c7a = UpdateEnemy.checkLoop
  SECTION: $2c8c-$2ce3 ($0058 bytes) ["collision"]
           $2c8c = CollisionCheck
           $2c97 = CollisionCheck.tryOtherY
           $2ca3 = CollisionCheck.checkX
           $2cb0 = CollisionCheck.tryOtherX
           $2cbd = CollisionCheck.collision
           $2cc0 = CollisionCheck.noCollision
           $2cc2 = OffScreenXEnemies
           $2cd3 = OffScreenXEnemies.end
           $2cd5 = OffScreenYEnemies
           $2ce2 = OffScreenYEnemies.end
  SECTION: $2ce4-$2d27 ($0044 bytes) ["scroll"]
           $2ce4 = InitializeParallaxScrolling
           $2cf2 = IncrementScrollOffset
           $2cf5 = IncrementScrollOffset.close
           $2cfd = IncrementScrollOffset.middle
           $2d06 = IncrementScrollOffset.far
           $2d0f = IncrementScrollOffset.endParallax
           $2d0f = IncrementScrollOffset.rain
           $2d1c = IncrementScrollOffset.resetRain
           $2d22 = ResetScroll
  SECTION: $2d28-$2d58 ($0031 bytes) ["enemy struct"]
           $2d28 = InitializeEnemyStructVars
    SLACK: $12b9 bytes

ROMX bank #1:
  SECTION: $4000-$52df ($12e0 bytes) ["tilesets 2"]
           $4000 = OpeningCutsceneTiles
           $44b0 = StageClearTiles
           $44b0 = OpeningCutsceneTilesEnd
           $4660 = StageClearTilesEnd
           $4660 = Level2Tiles
           $4b20 = Level2TilesEnd
           $4b20 = Level3Tiles
           $4b40 = WindowTiles
           $4b40 = Level3TilesEnd
           $4d40 = WindowTilesEnd
           $4d40 = MenuTiles
           $4d60 = MenuTilesEnd
           $4d60 = MenuTitleTiles
           $52e0 = MenuTitleTilesEnd
  SECTION: $52e0-$5e1d ($0b3e bytes) ["Song Data2"]
           $52e0 = angryTheme
           $52f5 = order_cnt
           $52f6 = order1
           $5300 = order2
           $530a = order3
           $5314 = order4
           $531e = P0
           $53de = P1
           $549e = P2
           $555e = P3
           $561e = P4
           $56de = P5
           $579e = P6
           $585e = P7
           $591e = P8
           $59de = P9
           $5a9e = P10
           $5b5e = P11
           $5c1e = duty_instruments
           $5c1e = itSquareinst1
           $5c22 = itSquareinst2
           $5c26 = itSquareinst3
           $5c2a = itSquareinst4
           $5c2e = itSquareinst5
           $5c32 = itSquareinst6
           $5c36 = itSquareinst7
           $5c3a = itSquareinst8
           $5c3e = itSquareinst9
           $5c42 = itSquareinst10
           $5c46 = itSquareinst11
           $5c4a = itSquareinst12
           $5c4e = itSquareinst13
           $5c52 = itSquareinst14
           $5c56 = itSquareinst15
           $5c5a = wave_instruments
           $5c5a = itWaveinst1
           $5c5e = itWaveinst2
           $5c62 = itWaveinst3
           $5c66 = itWaveinst4
           $5c6a = itWaveinst5
           $5c6e = itWaveinst6
           $5c72 = itWaveinst7
           $5c76 = itWaveinst8
           $5c7a = itWaveinst9
           $5c7e = itWaveinst10
           $5c82 = itWaveinst11
           $5c86 = itWaveinst12
           $5c8a = itWaveinst13
           $5c8e = itWaveinst14
           $5c92 = itWaveinst15
           $5c96 = noise_instruments
           $5c96 = itNoiseinst1
           $5c9e = itNoiseinst2
           $5ca6 = itNoiseinst3
           $5cae = itNoiseinst4
           $5cb6 = itNoiseinst5
           $5cbe = itNoiseinst6
           $5cc6 = itNoiseinst7
           $5cce = itNoiseinst8
           $5cd6 = itNoiseinst9
           $5cde = itNoiseinst10
           $5ce6 = itNoiseinst11
           $5cee = itNoiseinst12
           $5cf6 = itNoiseinst13
           $5cfe = itNoiseinst14
           $5d06 = itNoiseinst15
           $5d0e = routines
           $5d0e = __end_hUGE_Routine_0
           $5d0e = __hUGE_Routine_0
           $5d0f = __end_hUGE_Routine_1
           $5d0f = __hUGE_Routine_1
           $5d10 = __end_hUGE_Routine_2
           $5d10 = __hUGE_Routine_2
           $5d11 = __end_hUGE_Routine_3
           $5d11 = __hUGE_Routine_3
           $5d12 = __end_hUGE_Routine_4
           $5d12 = __hUGE_Routine_4
           $5d13 = __end_hUGE_Routine_5
           $5d13 = __hUGE_Routine_5
           $5d14 = __end_hUGE_Routine_6
           $5d14 = __hUGE_Routine_6
           $5d15 = __end_hUGE_Routine_7
           $5d15 = __hUGE_Routine_7
           $5d16 = __hUGE_Routine_8
           $5d16 = __end_hUGE_Routine_8
           $5d17 = __hUGE_Routine_9
           $5d17 = __end_hUGE_Routine_9
           $5d18 = __hUGE_Routine_10
           $5d18 = __end_hUGE_Routine_10
           $5d19 = __hUGE_Routine_11
           $5d19 = __end_hUGE_Routine_11
           $5d1a = __hUGE_Routine_12
           $5d1a = __end_hUGE_Routine_12
           $5d1b = __hUGE_Routine_13
           $5d1b = __end_hUGE_Routine_13
           $5d1c = __end_hUGE_Routine_14
           $5d1c = __hUGE_Routine_14
           $5d1d = __end_hUGE_Routine_15
           $5d1d = __hUGE_Routine_15
           $5d1e = waves
           $5d1e = wave0
           $5d2e = wave1
           $5d3e = wave2
           $5d4e = wave3
           $5d5e = wave4
           $5d6e = wave5
           $5d7e = wave6
           $5d8e = wave7
           $5d9e = wave8
           $5dae = wave9
           $5dbe = wave10
           $5dce = wave11
           $5dde = wave12
           $5dee = wave13
           $5dfe = wave14
           $5e0e = wave15
  SECTION: $5e1e-$633b ($051e bytes) ["Song Data"]
           $5e1e = menuTheme
           $5e33 = order_cnt
           $5e34 = order1
           $5e36 = order2
           $5e38 = order3
           $5e3a = order4
           $5e3c = P1
           $5efc = P2
           $5fbc = P3
           $607c = P6
           $613c = duty_instruments
           $613c = itSquareinst1
           $6140 = itSquareinst2
           $6144 = itSquareinst3
           $6148 = itSquareinst4
           $614c = itSquareinst5
           $6150 = itSquareinst6
           $6154 = itSquareinst7
           $6158 = itSquareinst8
           $615c = itSquareinst9
           $6160 = itSquareinst10
           $6164 = itSquareinst11
           $6168 = itSquareinst12
           $616c = itSquareinst13
           $6170 = itSquareinst14
           $6174 = itSquareinst15
           $6178 = wave_instruments
           $6178 = itWaveinst1
           $617c = itWaveinst2
           $6180 = itWaveinst3
           $6184 = itWaveinst4
           $6188 = itWaveinst5
           $618c = itWaveinst6
           $6190 = itWaveinst7
           $6194 = itWaveinst8
           $6198 = itWaveinst9
           $619c = itWaveinst10
           $61a0 = itWaveinst11
           $61a4 = itWaveinst12
           $61a8 = itWaveinst13
           $61ac = itWaveinst14
           $61b0 = itWaveinst15
           $61b4 = noise_instruments
           $61b4 = itNoiseinst1
           $61bc = itNoiseinst2
           $61c4 = itNoiseinst3
           $61cc = itNoiseinst4
           $61d4 = itNoiseinst5
           $61dc = itNoiseinst6
           $61e4 = itNoiseinst7
           $61ec = itNoiseinst8
           $61f4 = itNoiseinst9
           $61fc = itNoiseinst10
           $6204 = itNoiseinst11
           $620c = itNoiseinst12
           $6214 = itNoiseinst13
           $621c = itNoiseinst14
           $6224 = itNoiseinst15
           $622c = routines
           $622c = __end_hUGE_Routine_0
           $622c = __hUGE_Routine_0
           $622d = __end_hUGE_Routine_1
           $622d = __hUGE_Routine_1
           $622e = __end_hUGE_Routine_2
           $622e = __hUGE_Routine_2
           $622f = __end_hUGE_Routine_3
           $622f = __hUGE_Routine_3
           $6230 = __end_hUGE_Routine_4
           $6230 = __hUGE_Routine_4
           $6231 = __end_hUGE_Routine_5
           $6231 = __hUGE_Routine_5
           $6232 = __end_hUGE_Routine_6
           $6232 = __hUGE_Routine_6
           $6233 = __end_hUGE_Routine_7
           $6233 = __hUGE_Routine_7
           $6234 = __hUGE_Routine_8
           $6234 = __end_hUGE_Routine_8
           $6235 = __hUGE_Routine_9
           $6235 = __end_hUGE_Routine_9
           $6236 = __hUGE_Routine_10
           $6236 = __end_hUGE_Routine_10
           $6237 = __hUGE_Routine_11
           $6237 = __end_hUGE_Routine_11
           $6238 = __hUGE_Routine_12
           $6238 = __end_hUGE_Routine_12
           $6239 = __hUGE_Routine_13
           $6239 = __end_hUGE_Routine_13
           $623a = __end_hUGE_Routine_14
           $623a = __hUGE_Routine_14
           $623b = __end_hUGE_Routine_15
           $623b = __hUGE_Routine_15
           $623c = waves
           $623c = wave0
           $624c = wave1
           $625c = wave2
           $626c = wave3
           $627c = wave4
           $628c = wave5
           $629c = wave6
           $62ac = wave7
           $62bc = wave8
           $62cc = wave9
           $62dc = wave10
           $62ec = wave11
           $62fc = wave12
           $630c = wave13
           $631c = wave14
           $632c = wave15
  SECTION: $633c-$6693 ($0358 bytes) ["balloon cactus"]
           $633c = SetStruct
           $637d = SpawnBalloonCactus
           $638d = SpawnBalloonCactus.availableSpace
           $6396 = SpawnBalloonCactus.availableOAMSpace
           $63c9 = SpawnBalloonCactus.isLeftside
           $63c9 = SpawnBalloonCactus.balloonLeft
           $63e2 = SpawnBalloonCactus.balloonRight
           $63f2 = SpawnBalloonCactus.cactusLeft
           $6400 = SpawnBalloonCactus.cactusRight
           $6410 = SpawnBalloonCactus.setStruct
           $6415 = SpawnBalloonCactus.end
           $6417 = ClearCactus
           $642d = ClearBalloon
           $6443 = Clear
           $644d = PopBalloonAnimation
           $645e = PopBalloonAnimation.canSwitchFrames
           $646c = PopBalloonAnimation.frame0
           $6490 = PopBalloonAnimation.frame1
           $64b4 = PopBalloonAnimation.clear
           $64d5 = PopBalloonAnimation.endFrame
           $64dc = PopBalloonAnimation.end
           $64dd = CactusFallingCollision
           $64de = CactusFalling
           $64f0 = CactusFalling.falling
           $6509 = CactusFalling.skipAcceleration
           $6515 = CactusFalling.offScreen
           $6519 = UpdateBalloonPosition
           $6519 = UpdateBalloonPosition.balloonLeft
           $652f = UpdateBalloonPosition.balloonRight
           $653a = UpdateCactusPosition
           $653a = UpdateCactusPosition.cactusLeft
           $6550 = UpdateCactusPosition.cactusRight
           $655b = Move
           $6576 = Move.isLeftside
           $6584 = Move.updatePosition
           $658b = DeathOfBalloonCactus
           $65bc = CollisionBalloonCactus
           $65bc = CollisionBalloonCactus.checkHit
           $65d7 = CollisionBalloonCactus.checkHitByBullet
           $65f7 = CollisionBalloonCactus.checkHitPlayer
           $6611 = BalloonCactusUpdate
           $6650 = BalloonCactusUpdate.isAlive
           $666b = BalloonCactusUpdate.offScreen
           $6670 = BalloonCactusUpdate.popped
           $667a = BalloonCactusUpdate.notPopping
           $6684 = BalloonCactusUpdate.checkLoop
  SECTION: $6694-$69c4 ($0331 bytes) ["bird"]
           $6694 = SetStruct
           $66bd = SpawnBird
           $66cd = SpawnBird.availableSpace
           $66d7 = SpawnBird.availableOAMSpace
           $66f9 = SpawnBird.isRightside
           $66fe = SpawnBird.birdLeft
           $6717 = SpawnBird.birdMiddle
           $6727 = SpawnBird.birdRight
           $6739 = SpawnBird.isLeftside
           $6739 = SpawnBird.leftBirdLeft
           $6752 = SpawnBird.leftBirdMiddle
           $6762 = SpawnBird.leftBirdRight
           $6772 = SpawnBird.setStruct
           $6777 = SpawnBird.end
           $6779 = BirdRightsideFlap
           $6780 = BirdRightsideFlap.soaring
           $67a7 = BirdRightsideFlap.flapping
           $67d7 = BirdLeftsideFlap
           $67de = BirdLeftsideFlap.soaring
           $6805 = BirdLeftsideFlap.flapping
           $6835 = Clear
           $6852 = UpdateBirdPosition
           $6852 = UpdateBirdPosition.birdLeft
           $6868 = UpdateBirdPosition.birdMiddle
           $6874 = UpdateBirdPosition.birdRight
           $687f = Move
           $6886 = Move.isRightside
           $6894 = Move.isLeftside
           $689e = Move.moveDown
           $68ab = Move.moveEnd
           $68af = BirdFall
           $68ba = BirdFall.checkOffscreenY
           $68cc = BirdFall.end
           $68ce = DeathOfBird
           $68e6 = DeathOfBird.facingLeft
           $6911 = DeathOfBird.facingRight
           $693c = CollisionBird
           $693c = CollisionBird.checkHitPlayer
           $6956 = BirdUpdate
           $697d = BirdUpdate.isAlive
           $69a0 = BirdUpdate.offScreen
           $69a5 = BirdUpdate.isDead
           $69b5 = BirdUpdate.checkLoop
  SECTION: $69c5-$6c46 ($0282 bytes) ["bomb"]
           $69c5 = SetStruct
           $69ea = SpawnBomb
           $69f9 = SpawnBomb.availableSpace
           $6a02 = SpawnBomb.availableOAMSpace
           $6a1d = SpawnBomb.balloonLeft
           $6a37 = SpawnBomb.balloonRight
           $6a48 = SpawnBomb.bombSpace
           $6a53 = SpawnBomb.setStruct
           $6a58 = SpawnBomb.end
           $6a5a = Clear
           $6a77 = Move
           $6a7f = Move.balloonLeft
           $6a95 = Move.balloonRight
           $6aa1 = Move.bombSpace
           $6aac = DeathOfBomb
           $6ab6 = CollisionBomb
           $6ab6 = CollisionBomb.checkHit
           $6ad4 = CollisionBomb.checkHitByBullet
           $6af4 = CollisionBomb.end
           $6af5 = ExplosionAnimation
           $6b06 = ExplosionAnimation.canSwitchFrames
           $6b1e = ExplosionAnimation.frame0
           $6b43 = ExplosionAnimation.frame1
           $6b86 = ExplosionAnimation.frame2
           $6bb2 = ExplosionAnimation.frame3
           $6bde = ExplosionAnimation.clear
           $6be2 = ExplosionAnimation.endFrame
           $6be9 = ExplosionAnimation.end
           $6bea = BombUpdate
           $6c0d = BombUpdate.isAlive
           $6c28 = BombUpdate.offScreen
           $6c2d = BombUpdate.popped
           $6c37 = BombUpdate.checkLoop
  SECTION: $6c47-$6e63 ($021d bytes) ["point balloon"]
           $6c47 = SetStruct
           $6c6c = SpawnPointBalloon
           $6c7b = SpawnPointBalloon.availableSpace
           $6c84 = SpawnPointBalloon.availableOAMSpace
           $6c9f = SpawnPointBalloon.balloonLeft
           $6cb8 = SpawnPointBalloon.balloonRight
           $6cc8 = SpawnPointBalloon.setStruct
           $6ccd = SpawnPointBalloon.end
           $6ccf = PopBalloonAnimation
           $6ce0 = PopBalloonAnimation.canSwitchFrames
           $6cec = PopBalloonAnimation.frame0
           $6d10 = PopBalloonAnimation.frame1
           $6d34 = PopBalloonAnimation.clear
           $6d38 = PopBalloonAnimation.endFrame
           $6d40 = Clear
           $6d59 = CollisionPointBalloon.checkHit
           $6d59 = CollisionPointBalloon
           $6d71 = CollisionPointBalloon.checkHitByBullet
           $6d8d = CollisionPointBalloon.deathOfPointBalloon
           $6d9f = PointBalloonUpdate
           $6dbb = PointBalloonUpdate.checkAlive
           $6dc3 = PointBalloonUpdate.checkMove
           $6dc3 = PointBalloonUpdate.isAlive
           $6dc9 = PointBalloonUpdate.canMove
           $6dcd = PointBalloonUpdate.balloonLeft
           $6de3 = PointBalloonUpdate.balloonRight
           $6ded = PointBalloonUpdate.endMove
           $6ded = PointBalloonUpdate.checkCollision
           $6df3 = PointBalloonUpdate.checkHit
           $6e0b = PointBalloonUpdate.checkHitByBullet
           $6e28 = PointBalloonUpdate.deathOfPointBalloon
           $6e39 = PointBalloonUpdate.endCollision
           $6e39 = PointBalloonUpdate.checkOffscreen
           $6e47 = PointBalloonUpdate.offscreen
           $6e4c = PointBalloonUpdate.popped
           $6e4c = PointBalloonUpdate.endOffscreen
           $6e54 = PointBalloonUpdate.setStruct
  SECTION: $6e64-$6f9d ($013a bytes) ["menu"]
           $6e64 = InitializeMenu
           $6e70 = LoadMenuOpeningGraphics
           $6e88 = LoadMenuGraphics
           $6eba = SpawnMenuCursor
           $6ec3 = SpawnMenuCursor.availableSpace
           $6ede = SpawnMenuCursor.end
           $6edf = BlinkMenuCursor
           $6ee6 = BlinkMenuCursor.blink
           $6ef7 = BlinkMenuCursor.show
           $6efb = BlinkMenuCursor.empty
           $6eff = SelectMode
           $6f08 = MenuInput
           $6f11 = MenuInput.moveSelected
           $6f16 = MenuInput.selectMode
           $6f1e = MenuInput.end
           $6f1f = UpdateMenuOpening
           $6f3b = UpdateMenuOpening.startSound
           $6f40 = UpdateMenuOpening.scrollUpTitle
           $6f4c = UpdateMenuOpening.endSound
           $6f51 = UpdateMenuOpening.scrollDownTitle
           $6f5d = UpdateMenuOpening.scrollUpTitle2
           $6f69 = UpdateMenuOpening.fadeOut
           $6f6f = UpdateMenuOpening.next
           $6f73 = UpdateMenuOpening.endFrame
           $6f7a = UpdateMenuOpening.end
           $6f7b = UpdateMenu
           $6f7b = UpdateMenu.fadeIn
           $6f81 = UpdateMenu.hasFadedIn
           $6f95 = UpdateMenu.fadeOut
  SECTION: $6f9e-$70aa ($010d bytes) ["porcupine"]
           $6f9e = SetStruct
           $6fb7 = SpawnPorcupine
           $6fc7 = SpawnPorcupine.availableSpace
           $6fd1 = SpawnPorcupine.availableOAMSpace
           $6fec = SpawnPorcupine.topLeft
           $7005 = SpawnPorcupine.topMiddle
           $7015 = SpawnPorcupine.topMiddle2
           $7025 = SpawnPorcupine.topRight
           $7035 = SpawnPorcupine.bottomLeft
           $7045 = SpawnPorcupine.bottomMiddle
           $7057 = SpawnPorcupine.bottomMiddle2
           $7069 = SpawnPorcupine.bottomRight
           $707b = SpawnPorcupine.setStruct
           $7080 = SpawnPorcupine.end
           $7082 = PorcupineUpdate
           $7099 = PorcupineUpdate.offScreen
           $7099 = PorcupineUpdate.isAlive
           $709b = PorcupineUpdate.isDead
           $709b = PorcupineUpdate.checkLoop
  SECTION: $70ab-$71a8 ($00fe bytes) ["palettes"]
           $70ab = ResetFading
           $70b9 = InitializePalettes
           $70c9 = InitializeFlicker
           $70cf = FadeOutPalettes
           $70d6 = FadeOutPalettes.hasFadedIn
           $70d9 = FadeOutPalettes.fadeOut
           $70f8 = FadeOutPalettes.fade1
           $7100 = FadeOutPalettes.fade2
           $7108 = FadeOutPalettes.fade3
           $7110 = FadeOutPalettes.fade4
           $7116 = FadeOutPalettes.fadePalettes
           $711c = FadeOutPalettes.increaseFrame
           $7123 = FadeOutPalettes.end
           $7125 = FadeInPalettes
           $712c = FadeInPalettes.hasFadedIn
           $712f = FadeInPalettes.fadeIn
           $714e = FadeInPalettes.fade1
           $7156 = FadeInPalettes.fade2
           $715e = FadeInPalettes.fade3
           $7166 = FadeInPalettes.fade4
           $716c = FadeInPalettes.fadePalettes
           $7172 = FadeInPalettes.increaseFrame
           $7179 = FadeInPalettes.end
           $717b = FlickerBackgroundPalette
           $7193 = FlickerBackgroundPalette.flickerOn
           $719e = FlickerBackgroundPalette.flickerOff
           $71a2 = FlickerBackgroundPalette.flickerEnd
  SECTION: $71a9-$7283 ($00db bytes) ["stage clear"]
           $71a9 = InitializeStageClear
           $71b6 = LoadStageClearGraphics
           $71ce = RefreshAddLives
           $71dd = RefreshAddLives.hasLivesToAdd
           $71ea = RefreshStageClear
           $7202 = UpdateStageClear
           $7231 = UpdateStageClear.pause
           $7242 = UpdateStageClear.copyFirstDigitToTotal
           $7256 = UpdateStageClear.copyPointsToTotal
           $7266 = UpdateStageClear.addGainedLives
           $727c = UpdateStageClear.endFrame
  SECTION: $7284-$7347 ($00c4 bytes) ["opening cutscene"]
           $7284 = InitializeOpeningCutscene
           $7289 = LoadParkGraphics
           $72a1 = SpawnHandWave
           $72c5 = HandWaveAnimation
           $72cc = HandWaveAnimation.frame0
           $72e7 = HandWaveAnimation.frame1
           $7301 = HandWaveAnimation.end
           $7302 = UpdatePark.fadeIn
           $7302 = UpdatePark
           $7308 = UpdatePark.hasFadedIn
           $7321 = UpdatePark.fadeOut
           $7329 = UpdatePark.skipFade
           $732c = UpdatePark.moveUp
           $7337 = UpdatePark.flyUpNormal
           $733c = UpdatePark.flyUpFast
           $733f = UpdatePark.flyUp
  SECTION: $7348-$7401 ($00ba bytes) ["sound"]
           $7348 = AUDIO_OFF
           $734c = AUDIO_ON
           $7351 = PopSound
           $7364 = ExplosionSound
           $7371 = WaveSound
           $737e = FallingSound
           $7393 = RisingSound
           $73a8 = StopSweepSound
           $73ad = CollectSound
           $73c2 = WrongAnswerSound
           $73d9 = PercussionSound
           $73e6 = BassSound
           $73f7 = ClearSound
  SECTION: $7402-$74b5 ($00b4 bytes) ["memory"]
           $7402 = MEMCPY
           $7402 = MEMCPY.loop
           $7406 = MEMCPY.checkLoop
           $740b = MEMCPY_WITH_OFFSET
           $740c = MEMCPY_WITH_OFFSET.loop
           $7417 = MEMCPY_WITH_OFFSET.checkLoop
           $741d = MEMCPY_SINGLE_SCREEN
           $741f = MEMCPY_SINGLE_SCREEN.loop
           $7433 = MEMCPY_SINGLE_SCREEN.checkLoop
           $7439 = ClearOAM
           $7440 = ClearOAM.loop_u2
           $7449 = ClearRAM
           $7450 = ClearRAM.loop_u3
           $7459 = RequestOAMSpace
           $7462 = RequestOAMSpace.loop
           $7479 = RequestOAMSpace.availableSpace
           $747e = RequestOAMSpace.sufficientSpace
           $748e = RequestOAMSpace.isNotZero4
           $748f = RequestOAMSpace.isNotZero3
           $7490 = RequestOAMSpace.isNotZero2
           $7491 = RequestOAMSpace.isNotZero1
           $7493 = RequestOAMSpace.notEnoughSprites
           $749b = RequestOAMSpace.end
           $749e = RequestRAMSpace
           $749e = RequestRAMSpace.loop
           $74a3 = RequestRAMSpace.availableSpace
           $74a7 = RequestRAMSpace.checkLoop
           $74b4 = RequestRAMSpace.noFreeSpace
           $74b5 = RequestRAMSpace.end
  SECTION: $74b6-$7531 ($007c bytes) ["score"]
           $74b6 = InitializeScore
           $74be = InitializeTotal
           $74c6 = AddPoints
           $74cd = AddPoints.carry
           $74d6 = DecrementPoints
           $74df = DecrementPoints.carry
           $74e6 = DecrementPoints.checkCapAtZero
           $74ef = DecrementPoints.noCap
           $74f4 = IsScoreZero
           $7503 = AddTotal
           $7506 = AddTotal.saveFourthDigit
           $750e = AddTotal.toBCD
           $7512 = AddTotal.carry
           $7516 = AddTotal.checkAddLife
           $7520 = AddTotal.addLife
           $752b = AddTotal.checkLoop
  SECTION: $7532-$756b ($003a bytes) ["math"]
           $7532 = MODULO
           $7534 = MODULO.loop
           $7539 = DIVISION
           $753f = DIVISION.loop
           $7544 = DIVISION.end
           $7547 = ToBCD
           $755d = MULTIPLY
           $755f = MULTIPLY.loop
           $756a = MULTIPLY.end
  SECTION: $756c-$759d ($0032 bytes) ["lcd"]
           $756c = LCD_OFF
           $7573 = LCD_ON
           $757a = LCD_ON_NO_WINDOW
           $7581 = WaitVBlank
           $7588 = WaitVBlank.loop
           $7593 = SetupWindow
  SECTION: $759e-$75b2 ($0015 bytes) ["general initialization"]
           $759e = InitializeGeneralVars
  SECTION: $75b3-$75b8 ($0006 bytes) ["timer"]
           $75b3 = UpdateGlobalTimer
    SLACK: $0a47 bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c092 ($008b bytes) ["enemy data vars"]
           $c008 = wEnemies
           $c090 = wEnemyOffset
           $c091 = wEnemyOffset2
           $c092 = wEnemyLoopIndex
  SECTION: $c093-$c0d8 ($0046 bytes) ["Playback variables"]
           $c093 = _start_vars
           $c093 = order_cnt
           $c094 = order1
           $c094 = _start_song_descriptor_pointers
           $c096 = order2
           $c098 = order3
           $c09a = order4
           $c09c = duty_instruments
           $c09e = wave_instruments
           $c0a0 = noise_instruments
           $c0a2 = routines
           $c0a4 = waves
           $c0a6 = mute_channels
           $c0a6 = _end_song_descriptor_pointers
           $c0a7 = pattern1
           $c0a9 = pattern2
           $c0ab = pattern3
           $c0ad = pattern4
           $c0af = ticks_per_row
           $c0b0 = current_order
           $c0b1 = next_order
           $c0b2 = row_break
           $c0b3 = temp_note_value
           $c0b5 = row
           $c0b6 = tick
           $c0b7 = counter
           $c0b8 = current_wave
           $c0b8 = _hUGE_current_wave
           $c0b9 = channel_period1
           $c0b9 = channels
           $c0b9 = channel1
           $c0bb = toneporta_target1
           $c0bd = channel_note1
           $c0be = vibrato_tremolo_phase1
           $c0bf = envelope1
           $c0c0 = highmask1
           $c0c1 = channel_period2
           $c0c1 = channel2
           $c0c3 = toneporta_target2
           $c0c5 = channel_note2
           $c0c6 = vibrato_tremolo_phase2
           $c0c7 = envelope2
           $c0c8 = highmask2
           $c0c9 = channel_period3
           $c0c9 = channel3
           $c0cb = toneporta_target3
           $c0cd = channel_note3
           $c0ce = vibrato_tremolo_phase3
           $c0cf = envelope3
           $c0d0 = highmask3
           $c0d1 = channel_period4
           $c0d1 = channel4
           $c0d3 = toneporta_target4
           $c0d5 = channel_note4
           $c0d6 = vibrato_tremolo_phase4
           $c0d7 = envelope4
           $c0d8 = highmask4
           $c0d9 = _end_vars
  SECTION: $c0d9-$c0eb ($0013 bytes) ["player vars"]
           $c0d9 = wPlayerY
           $c0da = wPlayerX
           $c0db = wPlayerY2
           $c0dc = wPlayerX2
           $c0dd = wPlayerAlive
           $c0de = wPlayerPopping
           $c0df = wPlayerPoppingFrame
           $c0e0 = wPlayerPoppingTimer
           $c0e1 = wPlayerFalling
           $c0e2 = wPlayerFallSpeed
           $c0e3 = wPlayerFallingTimer
           $c0e4 = wPlayerDelayFallingTimer
           $c0e5 = wPlayerRespawnTimer
           $c0e6 = wPlayerSpeed
           $c0e7 = wPlayerLives
           $c0e8 = wPlayerRight
           $c0e9 = wPlayerInvincible
           $c0ea = wPlayerBoost
           $c0eb = wPlayerAttack
  SECTION: $c0ec-$c0fc ($0011 bytes) ["enemy struct vars"]
           $c0ec = wEnemyActive
           $c0ed = wEnemyNumber
           $c0ee = wEnemyY
           $c0ef = wEnemyX
           $c0f0 = wEnemyOAM
           $c0f1 = wEnemyAlive
           $c0f2 = wEnemyPopping
           $c0f3 = wEnemyPoppingFrame
           $c0f4 = wEnemyPoppingTimer
           $c0f5 = wEnemyRightside
           $c0f6 = wEnemyY2
           $c0f7 = wEnemyX2
           $c0f8 = wEnemyFalling
           $c0f9 = wEnemyFallingSpeed
           $c0fa = wEnemyFallingTimer
           $c0fb = wEnemyDelayFallingTimer
           $c0fc = wEnemyToDie
  SECTION: $c0fd-$c0ff ($0003 bytes) ["stage clear vars"]
           $c0fd = wStageClearTimer
           $c0fe = wStageClearFrame
           $c0ff = wLivesToAdd
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a5 ($0006 bytes) ["score vars"]
           $c1a0 = wScore
           $c1a3 = wTotal
  SECTION: $c1a6-$c1aa ($0005 bytes) ["palettes vars"]
           $c1a6 = wFadeInFrame
           $c1a7 = wFadeOutFrame
           $c1a8 = wTriggerFadeIn
           $c1a9 = wTriggerFadeOut
           $c1aa = wFlickerTimer
  SECTION: $c1ab-$c1ae ($0004 bytes) ["bullet vars"]
           $c1ab = wPlayerBulletY
           $c1ac = wPlayerBulletX
           $c1ad = wPlayerBulletAlive
           $c1ae = wPlayerBulletRight
  SECTION: $c1af-$c1b2 ($0004 bytes) ["scroll vars"]
           $c1af = wParallaxClose
           $c1b0 = wParallaxMiddle
           $c1b1 = wParallaxFar
           $c1b2 = wRain
  SECTION: $c1b3-$c1b6 ($0004 bytes) ["level vars"]
           $c1b3 = wLevel
           $c1b4 = wLevelWaitCounter
           $c1b5 = wLevelDataAddress
  SECTION: $c1b7-$c1b9 ($0003 bytes) ["controller vars"]
           $c1b7 = wControllerDown
           $c1b8 = wControllerPressed
           $c1b9 = wPaused
  SECTION: $c1ba-$c1bc ($0003 bytes) ["interrupts vars"]
           $c1ba = wVBlankFlag
           $c1bb = wLCDInterrupt
  SECTION: $c1bd-$c1be ($0002 bytes) ["menu vars"]
           $c1bd = wMenuFrame
           $c1be = wSelectedMode
  SECTION: $c1bf-$c1bf ($0001 byte) ["game vars"]
           $c1bf = wCountdownFrame
  SECTION: $c1c0-$c1c0 ($0001 byte) ["opening cutscene vars"]
           $c1c0 = wHandWavingFrame
    SLACK: $0e3f bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
  SECTION: $ff88-$ff88 ($0001 byte) ["timer vars"]
           $ff88 = hGlobalTimer
    SLACK: $0076 bytes

USED:
    ROM0: $2d47 bytes in 1 bank
    ROMX: $35b9 bytes in 1 bank
    WRAM0: $01c1 bytes in 1 bank
    HRAM: $0009 bytes in 1 bank
