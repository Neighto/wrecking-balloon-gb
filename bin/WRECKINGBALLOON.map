ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$0a87 ($0938 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level2MapEnd
           $0a60 = WindowMap
           $0a60 = MenuMapEnd
           $0a88 = WindowMapEnd
  SECTION: $0a88-$1228 ($07a1 bytes) ["Sound Driver"]
           $0a88 = _hUGE_init_banked
           $0a8c = _hUGE_init
           $0a8e = continue_init
           $0a97 = _hUGE_mute_channel_banked
           $0a9b = _hUGE_mute_channel
           $0a9d = continue_mute
           $0aa8 = hUGE_mute_channel
           $0aae = hUGE_mute_channel.enable_loop
           $0ab5 = hUGE_mute_channel.enable_cut
           $0ac2 = _hUGE_set_position_banked
           $0ac6 = _hUGE_set_position
           $0ac8 = continue_set_position
           $0acf = hUGE_init
           $0ad6 = hUGE_init.fill_loop
           $0afa = hUGE_init.copy_song_descriptor_loop
           $0b04 = _refresh_patterns
           $0b1e = _refresh_patterns.load_pattern
           $0b2e = _load_note_data
           $0b40 = _lookup_note
           $0b4a = _convert_note
           $0b58 = _convert_ch4_note
           $0b6f = _update_channel
           $0b79 = _update_channel1
           $0b87 = _update_channel2
           $0b95 = _update_channel3
           $0ba3 = _update_channel4
           $0bb3 = _playnote1
           $0bce = _playnote2
           $0be9 = _playnote3
           $0c0a = _playnote4
           $0c1e = _doeffect
           $0c33 = _doeffect.jump
           $0c63 = setup_channel_pointer
           $0c71 = fx_set_master_volume
           $0c76 = fx_call_routine
           $0c98 = fx_call_routine.call_hl
           $0c99 = fx_set_pan
           $0c9e = fx_set_duty
           $0ca3 = fx_set_duty.chan2
           $0cad = fx_set_duty.chan1
           $0cb7 = fx_vol_slide
           $0cbe = fx_vol_slide.loop
           $0cc3 = fx_vol_slide.cont
           $0cf5 = fx_vol_slide.cont1
           $0cfc = fx_vol_slide.cont2
           $0d10 = _envelope_registers
           $0d18 = fx_note_delay
           $0d31 = fx_note_delay.play_note
           $0d4f = _play_note_routines
           $0d5b = fx_set_speed
           $0d61 = hUGE_set_position
           $0d61 = fx_pos_jump
           $0d6b = fx_pattern_break
           $0d70 = fx_note_cut
           $0d78 = fx_note_cut.loop
           $0d7d = fx_note_cut.cont
           $0d82 = note_cut
           $0d99 = fx_set_volume
           $0d9a = set_channel_volume
           $0da5 = set_chn_3_vol
           $0db7 = set_chn_3_vol.three
           $0dbb = set_chn_3_vol.two
           $0dbf = set_chn_3_vol.one
           $0dc3 = set_chn_3_vol.zero
           $0dc4 = set_chn_3_vol.done
           $0dc7 = set_chn_2_vol
           $0dd7 = set_chn_1_vol
           $0de7 = set_chn_4_vol
           $0df3 = fx_vibrato
           $0e06 = fx_vibrato.restore
           $0e0b = fx_vibrato.go_up
           $0e16 = fx_vibrato.finish_vibrato
           $0e1c = fx_arpeggio
           $0e28 = fx_arpeggio.greater_than_two
           $0e2a = fx_arpeggio.test_greater_than_two
           $0e39 = fx_arpeggio.arp_options
           $0e3f = fx_arpeggio.reset_arp
           $0e42 = fx_arpeggio.set_arp2
           $0e47 = fx_arpeggio.set_arp1
           $0e48 = fx_arpeggio.finish_arp
           $0e4b = fx_arpeggio.finish_skip_add
           $0e54 = fx_porta_up
           $0e63 = fx_porta_up.finish
           $0e6a = fx_porta_down
           $0e7c = fx_toneporta
           $0e8e = fx_toneporta.return_skip
           $0e98 = fx_toneporta.do_toneporta
           $0ead = fx_toneporta.high_byte_same
           $0eb3 = fx_toneporta.add
           $0ec5 = fx_toneporta.subtract
           $0edb = fx_toneporta.set_exact
           $0edd = fx_toneporta.done
           $0ef0 = _setup_instrument_pointer_ch4
           $0efb = _setup_instrument_pointer
           $0f02 = _setup_instrument_pointer.finish
           $0f0b = _hUGE_dosound_banked
           $0f0b = _hUGE_dosound
           $0f4a = _hUGE_dosound.write_mask1
           $0f4d = _hUGE_dosound.do_setvol1
           $0f60 = _hUGE_dosound.after_note1
           $0f95 = _hUGE_dosound.write_mask2
           $0f98 = _hUGE_dosound.do_setvol2
           $0fab = _hUGE_dosound.after_note2
           $1032 = _hUGE_dosound.no_wave_copy
           $1033 = _hUGE_dosound.write_mask3
           $1036 = _hUGE_dosound.do_setvol3
           $1041 = _hUGE_dosound.after_note3
           $1092 = _hUGE_dosound.write_mask4
           $1095 = _hUGE_dosound.do_setvol4
           $10a0 = _hUGE_dosound.after_note4
           $10a3 = _hUGE_dosound.process_effects
           $10bf = _hUGE_dosound.after_effect1
           $10db = _hUGE_dosound.after_effect2
           $10f7 = _hUGE_dosound.after_effect3
           $1142 = _hUGE_dosound.done_macro
           $114b = process_tick
           $114b = _hUGE_dosound.after_effect4
           $115d = _newrow
           $1175 = _newrow.no_break
           $1180 = _neworder
           $118d = _update_current_order
           $1194 = _noreset
           $1199 = note_table
  SECTION: $1229-$19c8 ($07a0 bytes) ["tilesets"]
           $1229 = PlayerSpriteTiles
           $1329 = EnemyTiles
           $1329 = PlayerSpriteTilesEnd
           $14e9 = Level1Tiles
           $14e9 = EnemyTilesEnd
           $19c9 = Level1TilesEnd
  SECTION: $19c9-$1e4a ($0482 bytes) ["player"]
           $19c9 = InitializePlayer
           $1a1c = UpdateBalloonPosition
           $1a1c = UpdateBalloonPosition.balloonLeft
           $1a29 = UpdateBalloonPosition.balloonRight
           $1a34 = UpdateCactusPosition
           $1a34 = UpdateCactusPosition.cactusLeft
           $1a41 = UpdateCactusPosition.cactusRight
           $1a4c = SpawnPlayer
           $1a4c = SpawnPlayer.cactusLeft
           $1a5c = SpawnPlayer.cactusRight
           $1a6c = SpawnPlayer.balloonLeft
           $1a7c = SpawnPlayer.balloonRight
           $1a8d = ClearPlayerCactus
           $1a9a = ClearPlayerBalloon
           $1aa7 = RespawnPlayer
           $1aba = MoveRight
           $1aca = MoveRight.canCactusDriftLeft
           $1adc = MoveRight.cactusDriftLeft
           $1ade = MoveLeft
           $1af2 = MoveLeft.canCactusDriftRight
           $1b03 = MoveLeft.cactusDriftRight
           $1b05 = MoveDown
           $1b15 = MoveDown.canCactusDriftUp
           $1b27 = MoveDown.cactusDriftUp
           $1b29 = ChargeBoost
           $1b2f = ChargeBoost.isCharging
           $1b36 = ChargeBoost.resetBoost
           $1b3c = ChargeAttack
           $1b42 = ChargeAttack.isCharging
           $1b47 = SpawnBullet
           $1b61 = SpawnBullet.spawnFromLeft
           $1b69 = SpawnBullet.leftOAM
           $1b77 = SpawnBullet.spawnFromRight
           $1b7f = SpawnBullet.rightOAM
           $1b8d = ClearBullet
           $1b99 = BulletUpdate
           $1b9f = BulletUpdate.isAlive
           $1baa = BulletUpdate.offScreen
           $1bae = BulletUpdate.onScreen
           $1bb4 = BulletUpdate.move
           $1bbe = BulletUpdate.moveLeft
           $1bc2 = BulletUpdate.moveRight
           $1bc4 = BulletUpdate.endMove
           $1bcc = PlayerControls
           $1bcc = PlayerControls.right
           $1bdf = PlayerControls.moveRight
           $1be7 = PlayerControls.endRight
           $1be7 = PlayerControls.left
           $1bfa = PlayerControls.moveLeft
           $1c01 = PlayerControls.endLeft
           $1c01 = PlayerControls.up
           $1c14 = PlayerControls.moveUp
           $1c28 = PlayerControls.endUp
           $1c28 = PlayerControls.down
           $1c3e = PlayerControls.endDown
           $1c3e = PlayerControls.canCactusDriftCenterX
           $1c5c = PlayerControls.driftCenterXRight
           $1c5f = PlayerControls.driftCenterXLeft
           $1c60 = PlayerControls.endDriftToCenterX
           $1c60 = PlayerControls.canCactusDriftCenterY
           $1c81 = PlayerControls.driftCenterYUp
           $1c84 = PlayerControls.driftCenterYDown
           $1c85 = PlayerControls.endDriftToCenterY
           $1c85 = PlayerControls.start
           $1c90 = PlayerControls.endStart
           $1c90 = PlayerControls.AButton
           $1c9d = PlayerControls.activateAttack
           $1ca5 = PlayerControls.endA
           $1ca5 = PlayerControls.BButton
           $1cb2 = PlayerControls.activateBoost
           $1cbc = PlayerControls.endB
           $1cbd = MovePlayer
           $1cd2 = MovePlayerAutoFlyUp
           $1ceb = FallCactusDown
           $1d00 = FallCactusDown.skipAcceleration
           $1d09 = PopBalloonAnimation
           $1d1a = PopBalloonAnimation.canSwitchFrames
           $1d26 = PopBalloonAnimation.frame0
           $1d38 = PopBalloonAnimation.frame1
           $1d4a = PopBalloonAnimation.clear
           $1d5a = PopBalloonAnimation.endFrame
           $1d62 = CactusFalling
           $1d7c = CactusFalling.offScreen
           $1d84 = CactusFalling.end
           $1d85 = NoMoreLives
           $1d8f = PlayerUpdate
           $1d96 = PlayerUpdate.isAlive
           $1db2 = PlayerUpdate.popped
           $1dbd = PlayerUpdate.popping
           $1dc5 = PlayerUpdate.falling
           $1dce = PlayerUpdate.respawning
           $1dd5 = PlayerUpdate.noMoreLives
           $1dd9 = PlayerUpdate.respawn
           $1ddd = DeathOfPlayer
           $1e01 = InvincibleBlink
           $1e07 = InvincibleBlink.isStillInvincible
           $1e16 = InvincibleBlink.blinkNormal
           $1e1d = InvincibleBlink.blinkFast
           $1e21 = InvincibleBlink.blinkEnd
           $1e36 = InvincibleBlink.defaultPalette
  SECTION: $1e4b-$21d8 ($038e bytes) ["level data"]
           $1e4b = Level1
           $1ea8 = Level2
           $2017 = Level3
           $2108 = InitializeNewLevel
           $2120 = InitializeNewLevel.level1
           $2125 = InitializeNewLevel.level2
           $212a = InitializeNewLevel.level3
           $212f = InitializeNewLevel.level4
           $2130 = InitializeNewLevel.setLevelDataAddress
           $2138 = InitializeLevelVars
           $2141 = LevelDataHandler
           $2149 = LevelDataHandler.notEmpty
           $2168 = LevelDataHandler.pointBalloon
           $216c = LevelDataHandler.balloonCactus
           $2170 = LevelDataHandler.bird
           $2174 = LevelDataHandler.bomb
           $2178 = LevelDataHandler.porcupine
           $217c = LevelDataManager
           $21a0 = LevelDataManager.spawn
           $21ad = LevelDataManager.wait
           $21ba = LevelDataManager.waitEnd
           $21c8 = LevelDataManager.end
  SECTION: $21d9-$23dc ($0204 bytes) ["game"]
           $21d9 = InitializeGame
           $21e1 = LoadLevel1Graphics
           $2204 = LoadLevel2Graphics
           $2226 = TryToUnpause
           $223d = TryToUnpause.end
           $223e = SpawnCountdown
           $2269 = SpawnCountdown.end
           $226a = Countdown
           $2271 = Countdown.hasCountedDown
           $2274 = Countdown.countdown
           $2285 = Countdown.balloonPop
           $228d = Countdown.frames
           $22b6 = Countdown.frame0
           $22d8 = Countdown.frame1
           $22fa = Countdown.frame2
           $231b = Countdown.frame3
           $233c = Countdown.frame4
           $235d = Countdown.frame5
           $237b = Countdown.remove
           $2390 = Countdown.endFrame
           $2397 = Countdown.end
           $2399 = UpdateSprites
           $23af = UpdateGameCountdown
           $23c4 = UpdateGame
  SECTION: $23dd-$254f ($0173 bytes) ["rom"]
           $23dd = Start
           $241a = MenuLoopOpening
           $2426 = StartMenu
           $243e = MenuLoop
           $244d = StartGame
           $2486 = OpeningCutsceneLoop
           $2495 = SetupNextLevel
           $24b6 = SetupNextLevel.level1
           $24be = SetupNextLevel.level2
           $24c6 = SetupNextLevel.level3
           $24c6 = SetupNextLevel.endLevelSetup
           $24c6 = SetupNextLevel.level6
           $24c6 = SetupNextLevel.level5
           $24c6 = SetupNextLevel.level4
           $24f6 = GameCountdownLoop
           $2505 = GameLoop
           $2514 = StageClear
           $2541 = StageClearLoop
  SECTION: $2550-$26a4 ($0155 bytes) ["window"]
           $2550 = RefreshScore
           $2587 = RefreshTotal
           $25be = RefreshLives
           $25c7 = RefreshBoostBar
           $25d1 = RefreshBoostBar.isCharging
           $25dd = RefreshBoostBar.isEmpty
           $25e3 = RefreshBoostBar.is25Percent
           $25ea = RefreshBoostBar.is50Percent
           $25f1 = RefreshBoostBar.is75Percent
           $25f8 = RefreshBoostBar.isReady
           $25fe = RefreshAttackBar
           $2608 = RefreshAttackBar.isCharging
           $2614 = RefreshAttackBar.isEmpty
           $261a = RefreshAttackBar.is25Percent
           $2621 = RefreshAttackBar.is50Percent
           $2628 = RefreshAttackBar.is75Percent
           $262f = RefreshAttackBar.isReady
           $2635 = LoadWindow.loadTiles
           $2635 = LoadWindow
           $2641 = LoadWindow.drawMap
           $265b = RefreshWindow
           $2671 = RefreshAddLives
           $2680 = RefreshAddLives.hasLivesToAdd
           $268d = RefreshStageClear
  SECTION: $26a5-$27e6 ($0142 bytes) ["interrupts"]
           $26a5 = InitializeInterrupts
           $26bb = VBlankInterrupt
           $26cb = LCDInterrupt
           $26d5 = LCDInterruptEnd
           $26d9 = MenuLCDInterrupt
           $26e9 = MenuLCDInterrupt.reset
           $26f2 = MenuLCDInterrupt.far
           $2700 = MenuLCDInterrupt.close
           $270c = MenuLCDInterrupt.end
           $270f = SetMenuInterrupts
           $271d = ParkLCDInterrupt
           $2729 = ParkLCDInterrupt.clouds
           $2737 = ParkLCDInterrupt.ground
           $273c = ParkLCDInterrupt.end
           $273f = SetParkInterrupts
           $2743 = Level1LCDInterrupt
           $2753 = Level1LCDInterrupt.reset
           $2761 = Level1LCDInterrupt.far
           $276f = Level1LCDInterrupt.close
           $277b = Level1LCDInterrupt.end
           $277e = SetLevel1Interrupts
           $278c = Level2LCDInterrupt
           $27a0 = Level2LCDInterrupt.reset
           $27ae = Level2LCDInterrupt.far
           $27bc = Level2LCDInterrupt.middle
           $27ca = Level2LCDInterrupt.close
           $27d6 = Level2LCDInterrupt.end
           $27d9 = SetLevel2Interrupts
  SECTION: $27e7-$2868 ($0082 bytes) ["collision"]
           $27e7 = CollisionCheck
           $27f2 = CollisionCheck.tryOtherY
           $27fe = CollisionCheck.checkX
           $280b = CollisionCheck.tryOtherX
           $2818 = CollisionCheck.collision
           $281b = CollisionCheck.noCollision
           $281d = CollisionWithPlayer
           $282d = OffScreenXEnemies
           $283e = OffScreenXEnemies.end
           $2840 = OffScreenYEnemies
           $2851 = OffScreenYEnemies.end
           $2853 = OffScreenX
           $285b = OffScreenX.end
           $285d = OffScreenY
           $2867 = OffScreenY.end
  SECTION: $2869-$28e0 ($0078 bytes) ["controller"]
           $2869 = InitializeController
           $286e = ReadInput
           $289e = JOY_RIGHT
           $28a6 = JOY_LEFT
           $28ae = JOY_UP
           $28b6 = JOY_DOWN
           $28be = JOY_A
           $28c6 = JOY_B
           $28ce = JOY_SELECT
           $28d6 = JOY_START
           $28de = JOY_FALSE
  SECTION: $28e1-$293a ($005a bytes) ["scroll"]
           $28e1 = InitializeParallaxScrolling
           $28ec = IncrementScrollOffset
           $28ec = IncrementScrollOffset.close
           $28fa = IncrementScrollOffset.middle
           $2908 = IncrementScrollOffset.far
           $2916 = IncrementScrollOffset.end
           $2917 = HorizontalScroll
           $2924 = HorizontalScroll.end
           $2926 = VerticalScroll
           $2933 = VerticalScroll.end
           $2935 = ResetScroll
  SECTION: $293b-$2958 ($001e bytes) ["OAM DMA routine"]
           $293b = CopyDMARoutine
           $2942 = CopyDMARoutine.copy
           $2949 = DMARoutine
           $294d = DMARoutine.wait
           $2951 = DMARoutineEnd
           $2951 = OAMDMA
    SLACK: $16c3 bytes

ROMX bank #1:
  SECTION: $4000-$577f ($1780 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4460 = OpeningCutsceneTilesEnd
           $4460 = OpeningCutsceneSpriteTiles
           $44a0 = OpeningCutsceneSpriteTilesEnd
           $44a0 = IntermissionTiles
           $4650 = IntermissionTilesEnd
           $4650 = Level2Tiles
           $4ae0 = Level2TilesEnd
           $4ae0 = CountdownTiles
           $4be0 = CountdownTilesEnd
           $4be0 = WindowTiles
           $4de0 = WindowTilesEnd
           $4de0 = MenuTiles
           $4e00 = MenuTilesEnd
           $4e00 = MenuTitleTiles
           $5780 = MenuTitleTilesEnd
  SECTION: $5780-$62bd ($0b3e bytes) ["Song Data2"]
           $5780 = angryTheme
           $5795 = order_cnt
           $5796 = order1
           $57a0 = order2
           $57aa = order3
           $57b4 = order4
           $57be = P0
           $587e = P1
           $593e = P2
           $59fe = P3
           $5abe = P4
           $5b7e = P5
           $5c3e = P6
           $5cfe = P7
           $5dbe = P8
           $5e7e = P9
           $5f3e = P10
           $5ffe = P11
           $60be = duty_instruments
           $60be = itSquareinst1
           $60c2 = itSquareinst2
           $60c6 = itSquareinst3
           $60ca = itSquareinst4
           $60ce = itSquareinst5
           $60d2 = itSquareinst6
           $60d6 = itSquareinst7
           $60da = itSquareinst8
           $60de = itSquareinst9
           $60e2 = itSquareinst10
           $60e6 = itSquareinst11
           $60ea = itSquareinst12
           $60ee = itSquareinst13
           $60f2 = itSquareinst14
           $60f6 = itSquareinst15
           $60fa = wave_instruments
           $60fa = itWaveinst1
           $60fe = itWaveinst2
           $6102 = itWaveinst3
           $6106 = itWaveinst4
           $610a = itWaveinst5
           $610e = itWaveinst6
           $6112 = itWaveinst7
           $6116 = itWaveinst8
           $611a = itWaveinst9
           $611e = itWaveinst10
           $6122 = itWaveinst11
           $6126 = itWaveinst12
           $612a = itWaveinst13
           $612e = itWaveinst14
           $6132 = itWaveinst15
           $6136 = noise_instruments
           $6136 = itNoiseinst1
           $613e = itNoiseinst2
           $6146 = itNoiseinst3
           $614e = itNoiseinst4
           $6156 = itNoiseinst5
           $615e = itNoiseinst6
           $6166 = itNoiseinst7
           $616e = itNoiseinst8
           $6176 = itNoiseinst9
           $617e = itNoiseinst10
           $6186 = itNoiseinst11
           $618e = itNoiseinst12
           $6196 = itNoiseinst13
           $619e = itNoiseinst14
           $61a6 = itNoiseinst15
           $61ae = routines
           $61ae = __end_hUGE_Routine_0
           $61ae = __hUGE_Routine_0
           $61af = __end_hUGE_Routine_1
           $61af = __hUGE_Routine_1
           $61b0 = __end_hUGE_Routine_2
           $61b0 = __hUGE_Routine_2
           $61b1 = __end_hUGE_Routine_3
           $61b1 = __hUGE_Routine_3
           $61b2 = __end_hUGE_Routine_4
           $61b2 = __hUGE_Routine_4
           $61b3 = __end_hUGE_Routine_5
           $61b3 = __hUGE_Routine_5
           $61b4 = __end_hUGE_Routine_6
           $61b4 = __hUGE_Routine_6
           $61b5 = __end_hUGE_Routine_7
           $61b5 = __hUGE_Routine_7
           $61b6 = __hUGE_Routine_8
           $61b6 = __end_hUGE_Routine_8
           $61b7 = __hUGE_Routine_9
           $61b7 = __end_hUGE_Routine_9
           $61b8 = __hUGE_Routine_10
           $61b8 = __end_hUGE_Routine_10
           $61b9 = __hUGE_Routine_11
           $61b9 = __end_hUGE_Routine_11
           $61ba = __hUGE_Routine_12
           $61ba = __end_hUGE_Routine_12
           $61bb = __hUGE_Routine_13
           $61bb = __end_hUGE_Routine_13
           $61bc = __end_hUGE_Routine_14
           $61bc = __hUGE_Routine_14
           $61bd = __end_hUGE_Routine_15
           $61bd = __hUGE_Routine_15
           $61be = waves
           $61be = wave0
           $61ce = wave1
           $61de = wave2
           $61ee = wave3
           $61fe = wave4
           $620e = wave5
           $621e = wave6
           $622e = wave7
           $623e = wave8
           $624e = wave9
           $625e = wave10
           $626e = wave11
           $627e = wave12
           $628e = wave13
           $629e = wave14
           $62ae = wave15
  SECTION: $62be-$67db ($051e bytes) ["Song Data"]
           $62be = menuTheme
           $62d3 = order_cnt
           $62d4 = order1
           $62d6 = order2
           $62d8 = order3
           $62da = order4
           $62dc = P1
           $639c = P2
           $645c = P3
           $651c = P6
           $65dc = duty_instruments
           $65dc = itSquareinst1
           $65e0 = itSquareinst2
           $65e4 = itSquareinst3
           $65e8 = itSquareinst4
           $65ec = itSquareinst5
           $65f0 = itSquareinst6
           $65f4 = itSquareinst7
           $65f8 = itSquareinst8
           $65fc = itSquareinst9
           $6600 = itSquareinst10
           $6604 = itSquareinst11
           $6608 = itSquareinst12
           $660c = itSquareinst13
           $6610 = itSquareinst14
           $6614 = itSquareinst15
           $6618 = wave_instruments
           $6618 = itWaveinst1
           $661c = itWaveinst2
           $6620 = itWaveinst3
           $6624 = itWaveinst4
           $6628 = itWaveinst5
           $662c = itWaveinst6
           $6630 = itWaveinst7
           $6634 = itWaveinst8
           $6638 = itWaveinst9
           $663c = itWaveinst10
           $6640 = itWaveinst11
           $6644 = itWaveinst12
           $6648 = itWaveinst13
           $664c = itWaveinst14
           $6650 = itWaveinst15
           $6654 = noise_instruments
           $6654 = itNoiseinst1
           $665c = itNoiseinst2
           $6664 = itNoiseinst3
           $666c = itNoiseinst4
           $6674 = itNoiseinst5
           $667c = itNoiseinst6
           $6684 = itNoiseinst7
           $668c = itNoiseinst8
           $6694 = itNoiseinst9
           $669c = itNoiseinst10
           $66a4 = itNoiseinst11
           $66ac = itNoiseinst12
           $66b4 = itNoiseinst13
           $66bc = itNoiseinst14
           $66c4 = itNoiseinst15
           $66cc = routines
           $66cc = __end_hUGE_Routine_0
           $66cc = __hUGE_Routine_0
           $66cd = __end_hUGE_Routine_1
           $66cd = __hUGE_Routine_1
           $66ce = __end_hUGE_Routine_2
           $66ce = __hUGE_Routine_2
           $66cf = __end_hUGE_Routine_3
           $66cf = __hUGE_Routine_3
           $66d0 = __end_hUGE_Routine_4
           $66d0 = __hUGE_Routine_4
           $66d1 = __end_hUGE_Routine_5
           $66d1 = __hUGE_Routine_5
           $66d2 = __end_hUGE_Routine_6
           $66d2 = __hUGE_Routine_6
           $66d3 = __end_hUGE_Routine_7
           $66d3 = __hUGE_Routine_7
           $66d4 = __hUGE_Routine_8
           $66d4 = __end_hUGE_Routine_8
           $66d5 = __hUGE_Routine_9
           $66d5 = __end_hUGE_Routine_9
           $66d6 = __hUGE_Routine_10
           $66d6 = __end_hUGE_Routine_10
           $66d7 = __hUGE_Routine_11
           $66d7 = __end_hUGE_Routine_11
           $66d8 = __hUGE_Routine_12
           $66d8 = __end_hUGE_Routine_12
           $66d9 = __hUGE_Routine_13
           $66d9 = __end_hUGE_Routine_13
           $66da = __end_hUGE_Routine_14
           $66da = __hUGE_Routine_14
           $66db = __end_hUGE_Routine_15
           $66db = __hUGE_Routine_15
           $66dc = waves
           $66dc = wave0
           $66ec = wave1
           $66fc = wave2
           $670c = wave3
           $671c = wave4
           $672c = wave5
           $673c = wave6
           $674c = wave7
           $675c = wave8
           $676c = wave9
           $677c = wave10
           $678c = wave11
           $679c = wave12
           $67ac = wave13
           $67bc = wave14
           $67cc = wave15
  SECTION: $67dc-$6bd8 ($03fd bytes) ["balloon cactus"]
           $67dc = InitializeBalloonCactus
           $67e5 = InitializeBalloonCactus.loop_u1
           $67f0 = SetStruct
           $682d = SpawnBalloonCactus
           $6840 = SpawnBalloonCactus.availableSpace
           $6849 = SpawnBalloonCactus.availableOAMSpace
           $6877 = SpawnBalloonCactus.isLeftside
           $6877 = SpawnBalloonCactus.balloonLeft
           $6890 = SpawnBalloonCactus.balloonRight
           $68a0 = SpawnBalloonCactus.cactusLeft
           $68ae = SpawnBalloonCactus.cactusRight
           $68be = SpawnBalloonCactus.setStruct
           $68c3 = SpawnBalloonCactus.end
           $68c8 = ClearCactus
           $68de = ClearBalloon
           $68f4 = Clear
           $68fe = PopBalloonAnimation
           $690f = PopBalloonAnimation.canSwitchFrames
           $691d = PopBalloonAnimation.frame0
           $6941 = PopBalloonAnimation.frame1
           $6965 = PopBalloonAnimation.clear
           $6986 = PopBalloonAnimation.endFrame
           $698d = PopBalloonAnimation.end
           $698e = CactusFallingCollision
           $698f = CactusFallingCollision.checkBird
           $6996 = CactusFallingCollision.birdLoop
           $69a7 = CactusFallingCollision.isAlive
           $69d7 = CactusFallingCollision.hitBird
           $69e5 = CactusFallingCollision.checkBirdLoop
           $69f2 = CactusFallingCollision.end
           $69f4 = CactusFalling
           $6a06 = CactusFalling.falling
           $6a1f = CactusFalling.skipAcceleration
           $6a2b = CactusFalling.offScreen
           $6a2f = UpdateBalloonPosition
           $6a2f = UpdateBalloonPosition.balloonLeft
           $6a45 = UpdateBalloonPosition.balloonRight
           $6a50 = UpdateCactusPosition
           $6a50 = UpdateCactusPosition.cactusLeft
           $6a66 = UpdateCactusPosition.cactusRight
           $6a71 = Move
           $6a8c = Move.isLeftside
           $6a9a = Move.updatePosition
           $6aa1 = DeathOfBalloonCactus
           $6ad2 = CollisionBalloonCactus
           $6ad2 = CollisionBalloonCactus.checkHit
           $6aed = CollisionBalloonCactus.checkHitByBullet
           $6b0d = CollisionBalloonCactus.checkHitPlayer
           $6b27 = BalloonCactusUpdate
           $6b2e = BalloonCactusUpdate.loop
           $6b85 = BalloonCactusUpdate.isAlive
           $6ba2 = BalloonCactusUpdate.offScreen
           $6ba7 = BalloonCactusUpdate.popped
           $6bb1 = BalloonCactusUpdate.notPopping
           $6bbb = BalloonCactusUpdate.checkLoop
           $6bca = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6bd9-$6f4e ($0376 bytes) ["bird"]
           $6bd9 = InitializeBird
           $6be2 = InitializeBird.loop_u1
           $6bed = SetStruct
           $6c12 = SpawnBird
           $6c25 = SpawnBird.availableSpace
           $6c2f = SpawnBird.availableOAMSpace
           $6c4c = SpawnBird.isRightside
           $6c51 = SpawnBird.birdLeft
           $6c6a = SpawnBird.birdMiddle
           $6c7a = SpawnBird.birdRight
           $6c8c = SpawnBird.isLeftside
           $6c8c = SpawnBird.leftBirdLeft
           $6ca5 = SpawnBird.leftBirdMiddle
           $6cb5 = SpawnBird.leftBirdRight
           $6cc5 = SpawnBird.setStruct
           $6cca = SpawnBird.end
           $6ccf = BirdRightsideFlap
           $6cd6 = BirdRightsideFlap.soaring
           $6cfe = BirdRightsideFlap.flapping
           $6d2f = BirdLeftsideFlap
           $6d36 = BirdLeftsideFlap.soaring
           $6d5e = BirdLeftsideFlap.flapping
           $6d8f = Clear
           $6dac = UpdateBirdPosition
           $6dac = UpdateBirdPosition.birdLeft
           $6dc2 = UpdateBirdPosition.birdMiddle
           $6dce = UpdateBirdPosition.birdRight
           $6dd9 = Move
           $6de0 = Move.isRightside
           $6dee = Move.isLeftside
           $6df8 = Move.moveDown
           $6e06 = Move.moveEnd
           $6e0a = BirdFall
           $6e15 = BirdFall.checkOffscreenY
           $6e27 = BirdFall.end
           $6e29 = DeathOfBird
           $6e41 = DeathOfBird.facingLeft
           $6e6c = DeathOfBird.facingRight
           $6e97 = CollisionBird
           $6e97 = CollisionBird.checkHitPlayer
           $6eb1 = BirdUpdate
           $6eb8 = BirdUpdate.loop
           $6ef6 = BirdUpdate.isAlive
           $6f1b = BirdUpdate.offScreen
           $6f20 = BirdUpdate.isDead
           $6f31 = BirdUpdate.checkLoop
  SECTION: $6f4f-$720f ($02c1 bytes) ["bomb"]
           $6f4f = InitializeBomb
           $6f58 = InitializeBomb.loop_u1
           $6f63 = SetStruct
           $6f84 = SpawnBomb
           $6f96 = SpawnBomb.availableSpace
           $6f9f = SpawnBomb.availableOAMSpace
           $6fb5 = SpawnBomb.balloonLeft
           $6fcf = SpawnBomb.balloonRight
           $6fe0 = SpawnBomb.bombSpace
           $6feb = SpawnBomb.setStruct
           $6ff0 = SpawnBomb.end
           $6ff5 = Clear
           $7012 = Move
           $701a = Move.balloonLeft
           $7030 = Move.balloonRight
           $703c = Move.bombSpace
           $7047 = DeathOfBomb
           $7051 = CollisionBomb
           $7051 = CollisionBomb.checkHit
           $706f = CollisionBomb.checkHitByBullet
           $708f = CollisionBomb.end
           $7090 = ExplosionAnimation
           $70a1 = ExplosionAnimation.canSwitchFrames
           $70b9 = ExplosionAnimation.frame0
           $70de = ExplosionAnimation.frame1
           $7121 = ExplosionAnimation.frame2
           $714d = ExplosionAnimation.frame3
           $7179 = ExplosionAnimation.clear
           $717d = ExplosionAnimation.endFrame
           $7184 = ExplosionAnimation.end
           $7185 = BombUpdate
           $718c = BombUpdate.loop
           $71c6 = BombUpdate.isAlive
           $71e3 = BombUpdate.offScreen
           $71e8 = BombUpdate.popped
           $71f2 = BombUpdate.checkLoop
  SECTION: $7210-$7433 ($0224 bytes) ["point balloon"]
           $7210 = InitializePointBalloon
           $7219 = InitializePointBalloon.loop_u1
           $7224 = SetStruct
           $7245 = SpawnPointBalloon
           $7257 = SpawnPointBalloon.availableSpace
           $7260 = SpawnPointBalloon.availableOAMSpace
           $7276 = SpawnPointBalloon.balloonLeft
           $728f = SpawnPointBalloon.balloonRight
           $729f = SpawnPointBalloon.setStruct
           $72a4 = SpawnPointBalloon.end
           $72a9 = PopBalloonAnimation
           $72ba = PopBalloonAnimation.canSwitchFrames
           $72c6 = PopBalloonAnimation.frame0
           $72ea = PopBalloonAnimation.frame1
           $730e = PopBalloonAnimation.clear
           $7312 = PopBalloonAnimation.endFrame
           $731a = Clear
           $7333 = Move
           $733a = Move.balloonLeft
           $7350 = Move.balloonRight
           $735b = DeathOfPointBalloon
           $736d = CollisionPointBalloon
           $736d = CollisionPointBalloon.checkHit
           $7388 = CollisionPointBalloon.checkHitByBullet
           $73a8 = CollisionPointBalloon.end
           $73a9 = PointBalloonUpdate
           $73b0 = PointBalloonUpdate.loop
           $73ea = PointBalloonUpdate.isAlive
           $7407 = PointBalloonUpdate.offScreen
           $740c = PointBalloonUpdate.popped
           $7416 = PointBalloonUpdate.checkLoop
           $7425 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $7434-$757c ($0149 bytes) ["porcupine"]
           $7434 = InitializePorcupine
           $743d = InitializePorcupine.loop_u1
           $7448 = SetStruct
           $745d = SpawnPorcupine
           $7470 = SpawnPorcupine.availableSpace
           $747a = SpawnPorcupine.availableOAMSpace
           $7490 = SpawnPorcupine.topLeft
           $74a9 = SpawnPorcupine.topMiddle
           $74b9 = SpawnPorcupine.topMiddle2
           $74c9 = SpawnPorcupine.topRight
           $74d9 = SpawnPorcupine.bottomLeft
           $74e9 = SpawnPorcupine.bottomMiddle
           $74fb = SpawnPorcupine.bottomMiddle2
           $750d = SpawnPorcupine.bottomRight
           $751f = SpawnPorcupine.setStruct
           $7524 = SpawnPorcupine.end
           $7529 = PorcupineUpdate
           $7530 = PorcupineUpdate.loop
           $755e = PorcupineUpdate.offScreen
           $755e = PorcupineUpdate.isAlive
           $7560 = PorcupineUpdate.isDead
           $7560 = PorcupineUpdate.checkLoop
           $756f = PorcupineUpdate.checkLoopSkipSet
  SECTION: $757d-$769f ($0123 bytes) ["menu"]
           $757d = InitializeMenu
           $7589 = LoadMenuOpeningGraphics
           $759f = LoadMenuGraphics
           $75b8 = SpawnMenuCursor
           $75c1 = SpawnMenuCursor.availableSpace
           $75dc = SpawnMenuCursor.end
           $75dd = BlinkMenuCursor
           $75e5 = BlinkMenuCursor.blink
           $75f6 = BlinkMenuCursor.show
           $75fa = BlinkMenuCursor.empty
           $75fe = SelectMode
           $7607 = MenuInput
           $7611 = MenuInput.moveSelected
           $7617 = MenuInput.selectMode
           $7620 = MenuInput.end
           $7621 = UpdateMenuOpening
           $763d = UpdateMenuOpening.startSound
           $7642 = UpdateMenuOpening.scrollUpTitle
           $764e = UpdateMenuOpening.endSound
           $7653 = UpdateMenuOpening.scrollDownTitle
           $765f = UpdateMenuOpening.scrollUpTitle2
           $766b = UpdateMenuOpening.fadeOut
           $7671 = UpdateMenuOpening.next
           $7675 = UpdateMenuOpening.endFrame
           $767c = UpdateMenuOpening.end
           $767d = UpdateMenu
           $767d = UpdateMenu.fadeIn
           $7683 = UpdateMenu.hasFadedIn
           $7697 = UpdateMenu.fadeOut
  SECTION: $76a0-$776d ($00ce bytes) ["palettes"]
           $76a0 = ResetFading
           $76ae = InitializePalettes
           $76c0 = FadeOutPalettes
           $76c7 = FadeOutPalettes.hasFadedIn
           $76ca = FadeOutPalettes.fadeOut
           $76ea = FadeOutPalettes.fade1
           $76f2 = FadeOutPalettes.fade2
           $76fa = FadeOutPalettes.fade3
           $7702 = FadeOutPalettes.fade4
           $7708 = FadeOutPalettes.fadePalettes
           $770e = FadeOutPalettes.increaseFrame
           $7715 = FadeOutPalettes.end
           $7717 = FadeInPalettes
           $771e = FadeInPalettes.hasFadedIn
           $7721 = FadeInPalettes.fadeIn
           $7741 = FadeInPalettes.fade1
           $7749 = FadeInPalettes.fade2
           $7751 = FadeInPalettes.fade3
           $7759 = FadeInPalettes.fade4
           $775f = FadeInPalettes.fadePalettes
           $7765 = FadeInPalettes.increaseFrame
           $776c = FadeInPalettes.end
  SECTION: $776e-$783a ($00cd bytes) ["opening cutscene"]
           $776e = InitializeOpeningCutscene
           $7773 = LoadParkGraphics
           $779b = SpawnHandWave
           $77bf = HandWaveAnimation
           $77c6 = HandWaveAnimation.frame0
           $77e2 = HandWaveAnimation.frame1
           $77fd = HandWaveAnimation.end
           $77fe = UpdatePark.fadeIn
           $77fe = UpdatePark
           $7804 = UpdatePark.hasFadedIn
           $781d = UpdatePark.fadeOut
           $7825 = UpdatePark.skipFade
           $7828 = UpdatePark.moveUp
           $7831 = UpdatePark.flyUpNormal
           $7837 = UpdatePark.flyUpFast
  SECTION: $783b-$78f4 ($00ba bytes) ["sound"]
           $783b = AUDIO_OFF
           $783f = AUDIO_ON
           $7844 = PopSound
           $7857 = ExplosionSound
           $7864 = WaveSound
           $7871 = FallingSound
           $7886 = RisingSound
           $789b = StopSweepSound
           $78a0 = CollectSound
           $78b5 = WrongAnswerSound
           $78cc = PercussionSound
           $78d9 = BassSound
           $78ea = ClearSound
  SECTION: $78f5-$79aa ($00b6 bytes) ["memory"]
           $78f5 = MEMCPY
           $78f5 = MEMCPY.loop
           $78f9 = MEMCPY.checkLoop
           $78fe = MEMCPY_WITH_OFFSET
           $78ff = MEMCPY_WITH_OFFSET.loop
           $790a = MEMCPY_WITH_OFFSET.checkLoop
           $7910 = MEMCPY_SINGLE_SCREEN
           $7914 = MEMCPY_SINGLE_SCREEN.loop
           $7928 = MEMCPY_SINGLE_SCREEN.checkLoop
           $792e = ClearOAM
           $7935 = ClearOAM.loop_u2
           $793e = ClearRAM
           $7945 = ClearRAM.loop_u3
           $794e = RequestOAMSpace
           $7957 = RequestOAMSpace.loop
           $796e = RequestOAMSpace.availableSpace
           $7973 = RequestOAMSpace.sufficientSpace
           $7983 = RequestOAMSpace.isNotZero4
           $7984 = RequestOAMSpace.isNotZero3
           $7985 = RequestOAMSpace.isNotZero2
           $7986 = RequestOAMSpace.isNotZero1
           $7988 = RequestOAMSpace.notEnoughSprites
           $7990 = RequestOAMSpace.end
           $7993 = RequestRAMSpace
           $7993 = RequestRAMSpace.loop
           $7998 = RequestRAMSpace.availableSpace
           $799c = RequestRAMSpace.checkLoop
           $79a9 = RequestRAMSpace.noFreeSpace
           $79aa = RequestRAMSpace.end
  SECTION: $79ab-$7a53 ($00a9 bytes) ["stage clear"]
           $79ab = InitializeStageClear
           $79b8 = LoadStageClearGraphics
           $79d1 = UpdateStageClear
           $7a01 = UpdateStageClear.pause
           $7a12 = UpdateStageClear.copyFirstDigitToTotal
           $7a26 = UpdateStageClear.copyPointsToTotal
           $7a36 = UpdateStageClear.addGainedLives
           $7a4c = UpdateStageClear.endFrame
  SECTION: $7a54-$7acf ($007c bytes) ["score"]
           $7a54 = InitializeScore
           $7a5c = InitializeTotal
           $7a64 = AddPoints
           $7a6b = AddPoints.carry
           $7a74 = DecrementPoints
           $7a7d = DecrementPoints.carry
           $7a84 = DecrementPoints.checkCapAtZero
           $7a8d = DecrementPoints.noCap
           $7a92 = IsScoreZero
           $7aa1 = AddTotal
           $7aa4 = AddTotal.saveFourthDigit
           $7aac = AddTotal.toBCD
           $7ab0 = AddTotal.carry
           $7ab4 = AddTotal.checkAddLife
           $7abe = AddTotal.addLife
           $7ac9 = AddTotal.checkLoop
  SECTION: $7ad0-$7b09 ($003a bytes) ["math"]
           $7ad0 = MODULO
           $7ad2 = MODULO.loop
           $7ad7 = DIVISION
           $7add = DIVISION.loop
           $7ae2 = DIVISION.end
           $7ae5 = ToBCD
           $7afb = MULTIPLY
           $7afd = MULTIPLY.loop
           $7b08 = MULTIPLY.end
  SECTION: $7b0a-$7b3b ($0032 bytes) ["lcd"]
           $7b0a = LCD_OFF
           $7b11 = LCD_ON
           $7b18 = LCD_ON_NO_WINDOW
           $7b1f = WaitVBlank
           $7b26 = WaitVBlank.loop
           $7b31 = SetupWindow
  SECTION: $7b3c-$7b50 ($0015 bytes) ["general initialization"]
           $7b3c = InitializeGeneralVars
  SECTION: $7b51-$7b58 ($0008 bytes) ["timer"]
           $7b51 = UpdateGlobalTimer
    SLACK: $04a7 bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["level vars"]
           $c0f6 = wLevel
           $c0f7 = wLevelWaitCounter
           $c0f8 = wLevelDataAddress
  SECTION: $c0fa-$c0fc ($0003 bytes) ["stage clear vars"]
           $c0fa = wStageClearTimer
           $c0fb = wStageClearFrame
           $c0fc = wLivesToAdd
  SECTION: $c0fd-$c0ff ($0003 bytes) ["controller vars"]
           $c0fd = wControllerDown
           $c0fe = wControllerPressed
           $c0ff = wPaused
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["scroll vars"]
           $c1a0 = wParallaxClose
           $c1a1 = wParallaxMiddle
           $c1a2 = wParallaxFar
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["timer vars"]
           $c1a8 = wGlobalTimer
  SECTION: $c1a9-$c1a9 ($0001 byte) ["game vars"]
           $c1a9 = wCountdownFrame
  SECTION: $c1aa-$c1aa ($0001 byte) ["opening cutscene vars"]
           $c1aa = wHandWavingFrame
    SLACK: $0e55 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $293d bytes in 1 bank
    ROMX: $3b59 bytes in 1 bank
    WRAM0: $01ab bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
