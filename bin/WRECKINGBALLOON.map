ROM0 bank #0:
  SECTION: $0000-$002d ($002e bytes) ["enemy struct"]
           $0000 = InitializeEnemyStructVars
  SECTION: $0040-$0042 ($0003 bytes) ["vblank IRQ"]
  SECTION: $0048-$004a ($0003 bytes) ["LCD IRQ"]
  SECTION: $004b-$00fa ($00b0 bytes) ["graphics"]
           $004b = AddBGTiles8800Method
           $0055 = AddBGTiles8800Method.tilesFitBlock
           $005a = AddBGTiles8800Method.tilesExceedBlock
           $0074 = AddBGTiles8800Method.end
           $0077 = LoadPlayerTiles
           $0084 = LoadEnemyTiles
           $00a9 = ClearAllTiles
           $00b2 = ClearAllTiles.loop_u4
           $00c1 = ClearAllTiles.loop_u5
           $00d0 = ClearAllTiles.loop_u6
           $00db = ClearMap
           $00e2 = ClearMap.loop_u7
           $00eb = ClearWindow
           $00f2 = ClearWindow.loop_u8
  SECTION: $0100-$014f ($0050 bytes) ["header"]
  SECTION: $0150-$09ef ($08a0 bytes) ["tilemaps"]
           $0150 = OpeningCutsceneMap
           $02b8 = OpeningCutsceneMapEnd
           $02b8 = IntermissionMap
           $0420 = IntermissionMapEnd
           $0420 = Level1Map
           $0620 = Level1MapEnd
           $0620 = Level2Map
           $0820 = MenuMap
           $0820 = Level3Map
           $0820 = Level3MapEnd
           $0820 = Level2MapEnd
           $0988 = WindowMap
           $0988 = MenuMapEnd
           $09b0 = WindowMapEnd
           $09b0 = CloudsMap
           $09f0 = CloudsMapEnd
  SECTION: $09f0-$119f ($07b0 bytes) ["tilesets"]
           $09f0 = PlayerSpriteTiles
           $0af0 = EnemyTiles
           $0af0 = PlayerSpriteTilesEnd
           $0cb0 = Level1Tiles
           $0cb0 = EnemyTilesEnd
           $1120 = CloudsTiles
           $1120 = Level1TilesEnd
           $11a0 = CloudsTilesEnd
  SECTION: $11a0-$1940 ($07a1 bytes) ["Sound Driver"]
           $11a0 = _hUGE_init_banked
           $11a4 = _hUGE_init
           $11a6 = continue_init
           $11af = _hUGE_mute_channel_banked
           $11b3 = _hUGE_mute_channel
           $11b5 = continue_mute
           $11c0 = hUGE_mute_channel
           $11c6 = hUGE_mute_channel.enable_loop
           $11cd = hUGE_mute_channel.enable_cut
           $11da = _hUGE_set_position_banked
           $11de = _hUGE_set_position
           $11e0 = continue_set_position
           $11e7 = hUGE_init
           $11ee = hUGE_init.fill_loop
           $1212 = hUGE_init.copy_song_descriptor_loop
           $121c = _refresh_patterns
           $1236 = _refresh_patterns.load_pattern
           $1246 = _load_note_data
           $1258 = _lookup_note
           $1262 = _convert_note
           $1270 = _convert_ch4_note
           $1287 = _update_channel
           $1291 = _update_channel1
           $129f = _update_channel2
           $12ad = _update_channel3
           $12bb = _update_channel4
           $12cb = _playnote1
           $12e6 = _playnote2
           $1301 = _playnote3
           $1322 = _playnote4
           $1336 = _doeffect
           $134b = _doeffect.jump
           $137b = setup_channel_pointer
           $1389 = fx_set_master_volume
           $138e = fx_call_routine
           $13b0 = fx_call_routine.call_hl
           $13b1 = fx_set_pan
           $13b6 = fx_set_duty
           $13bb = fx_set_duty.chan2
           $13c5 = fx_set_duty.chan1
           $13cf = fx_vol_slide
           $13d6 = fx_vol_slide.loop
           $13db = fx_vol_slide.cont
           $140d = fx_vol_slide.cont1
           $1414 = fx_vol_slide.cont2
           $1428 = _envelope_registers
           $1430 = fx_note_delay
           $1449 = fx_note_delay.play_note
           $1467 = _play_note_routines
           $1473 = fx_set_speed
           $1479 = hUGE_set_position
           $1479 = fx_pos_jump
           $1483 = fx_pattern_break
           $1488 = fx_note_cut
           $1490 = fx_note_cut.loop
           $1495 = fx_note_cut.cont
           $149a = note_cut
           $14b1 = fx_set_volume
           $14b2 = set_channel_volume
           $14bd = set_chn_3_vol
           $14cf = set_chn_3_vol.three
           $14d3 = set_chn_3_vol.two
           $14d7 = set_chn_3_vol.one
           $14db = set_chn_3_vol.zero
           $14dc = set_chn_3_vol.done
           $14df = set_chn_2_vol
           $14ef = set_chn_1_vol
           $14ff = set_chn_4_vol
           $150b = fx_vibrato
           $151e = fx_vibrato.restore
           $1523 = fx_vibrato.go_up
           $152e = fx_vibrato.finish_vibrato
           $1534 = fx_arpeggio
           $1540 = fx_arpeggio.greater_than_two
           $1542 = fx_arpeggio.test_greater_than_two
           $1551 = fx_arpeggio.arp_options
           $1557 = fx_arpeggio.reset_arp
           $155a = fx_arpeggio.set_arp2
           $155f = fx_arpeggio.set_arp1
           $1560 = fx_arpeggio.finish_arp
           $1563 = fx_arpeggio.finish_skip_add
           $156c = fx_porta_up
           $157b = fx_porta_up.finish
           $1582 = fx_porta_down
           $1594 = fx_toneporta
           $15a6 = fx_toneporta.return_skip
           $15b0 = fx_toneporta.do_toneporta
           $15c5 = fx_toneporta.high_byte_same
           $15cb = fx_toneporta.add
           $15dd = fx_toneporta.subtract
           $15f3 = fx_toneporta.set_exact
           $15f5 = fx_toneporta.done
           $1608 = _setup_instrument_pointer_ch4
           $1613 = _setup_instrument_pointer
           $161a = _setup_instrument_pointer.finish
           $1623 = _hUGE_dosound_banked
           $1623 = _hUGE_dosound
           $1662 = _hUGE_dosound.write_mask1
           $1665 = _hUGE_dosound.do_setvol1
           $1678 = _hUGE_dosound.after_note1
           $16ad = _hUGE_dosound.write_mask2
           $16b0 = _hUGE_dosound.do_setvol2
           $16c3 = _hUGE_dosound.after_note2
           $174a = _hUGE_dosound.no_wave_copy
           $174b = _hUGE_dosound.write_mask3
           $174e = _hUGE_dosound.do_setvol3
           $1759 = _hUGE_dosound.after_note3
           $17aa = _hUGE_dosound.write_mask4
           $17ad = _hUGE_dosound.do_setvol4
           $17b8 = _hUGE_dosound.after_note4
           $17bb = _hUGE_dosound.process_effects
           $17d7 = _hUGE_dosound.after_effect1
           $17f3 = _hUGE_dosound.after_effect2
           $180f = _hUGE_dosound.after_effect3
           $185a = _hUGE_dosound.done_macro
           $1863 = process_tick
           $1863 = _hUGE_dosound.after_effect4
           $1875 = _newrow
           $188d = _newrow.no_break
           $1898 = _neworder
           $18a5 = _update_current_order
           $18ac = _noreset
           $18b1 = note_table
  SECTION: $1941-$1dc2 ($0482 bytes) ["player"]
           $1941 = InitializePlayer
           $1994 = UpdateBalloonPosition
           $1994 = UpdateBalloonPosition.balloonLeft
           $19a1 = UpdateBalloonPosition.balloonRight
           $19ac = UpdateCactusPosition
           $19ac = UpdateCactusPosition.cactusLeft
           $19b9 = UpdateCactusPosition.cactusRight
           $19c4 = SpawnPlayer
           $19c4 = SpawnPlayer.cactusLeft
           $19d4 = SpawnPlayer.cactusRight
           $19e4 = SpawnPlayer.balloonLeft
           $19f4 = SpawnPlayer.balloonRight
           $1a05 = ClearPlayerCactus
           $1a12 = ClearPlayerBalloon
           $1a1f = RespawnPlayer
           $1a32 = MoveRight
           $1a42 = MoveRight.canCactusDriftLeft
           $1a54 = MoveRight.cactusDriftLeft
           $1a56 = MoveLeft
           $1a6a = MoveLeft.canCactusDriftRight
           $1a7b = MoveLeft.cactusDriftRight
           $1a7d = MoveDown
           $1a8d = MoveDown.canCactusDriftUp
           $1a9f = MoveDown.cactusDriftUp
           $1aa1 = ChargeBoost
           $1aa7 = ChargeBoost.isCharging
           $1aae = ChargeBoost.resetBoost
           $1ab4 = ChargeAttack
           $1aba = ChargeAttack.isCharging
           $1abf = SpawnBullet
           $1ad9 = SpawnBullet.spawnFromLeft
           $1ae1 = SpawnBullet.leftOAM
           $1aef = SpawnBullet.spawnFromRight
           $1af7 = SpawnBullet.rightOAM
           $1b05 = ClearBullet
           $1b11 = BulletUpdate
           $1b17 = BulletUpdate.isAlive
           $1b22 = BulletUpdate.offScreen
           $1b26 = BulletUpdate.onScreen
           $1b2c = BulletUpdate.move
           $1b36 = BulletUpdate.moveLeft
           $1b3a = BulletUpdate.moveRight
           $1b3c = BulletUpdate.endMove
           $1b44 = PlayerControls
           $1b44 = PlayerControls.right
           $1b57 = PlayerControls.moveRight
           $1b5f = PlayerControls.endRight
           $1b5f = PlayerControls.left
           $1b72 = PlayerControls.moveLeft
           $1b79 = PlayerControls.endLeft
           $1b79 = PlayerControls.up
           $1b8c = PlayerControls.moveUp
           $1ba0 = PlayerControls.endUp
           $1ba0 = PlayerControls.down
           $1bb6 = PlayerControls.endDown
           $1bb6 = PlayerControls.canCactusDriftCenterX
           $1bd4 = PlayerControls.driftCenterXRight
           $1bd7 = PlayerControls.driftCenterXLeft
           $1bd8 = PlayerControls.endDriftToCenterX
           $1bd8 = PlayerControls.canCactusDriftCenterY
           $1bf9 = PlayerControls.driftCenterYUp
           $1bfc = PlayerControls.driftCenterYDown
           $1bfd = PlayerControls.endDriftToCenterY
           $1bfd = PlayerControls.start
           $1c08 = PlayerControls.endStart
           $1c08 = PlayerControls.AButton
           $1c15 = PlayerControls.activateAttack
           $1c1d = PlayerControls.endA
           $1c1d = PlayerControls.BButton
           $1c2a = PlayerControls.activateBoost
           $1c34 = PlayerControls.endB
           $1c35 = MovePlayer
           $1c4a = MovePlayerAutoFlyUp
           $1c63 = FallCactusDown
           $1c78 = FallCactusDown.skipAcceleration
           $1c81 = PopBalloonAnimation
           $1c92 = PopBalloonAnimation.canSwitchFrames
           $1c9e = PopBalloonAnimation.frame0
           $1cb0 = PopBalloonAnimation.frame1
           $1cc2 = PopBalloonAnimation.clear
           $1cd2 = PopBalloonAnimation.endFrame
           $1cda = CactusFalling
           $1cf4 = CactusFalling.offScreen
           $1cfc = CactusFalling.end
           $1cfd = NoMoreLives
           $1d07 = PlayerUpdate
           $1d0e = PlayerUpdate.isAlive
           $1d2a = PlayerUpdate.popped
           $1d35 = PlayerUpdate.popping
           $1d3d = PlayerUpdate.falling
           $1d46 = PlayerUpdate.respawning
           $1d4d = PlayerUpdate.noMoreLives
           $1d51 = PlayerUpdate.respawn
           $1d55 = DeathOfPlayer
           $1d79 = InvincibleBlink
           $1d7f = InvincibleBlink.isStillInvincible
           $1d8e = InvincibleBlink.blinkNormal
           $1d95 = InvincibleBlink.blinkFast
           $1d99 = InvincibleBlink.blinkEnd
           $1dae = InvincibleBlink.defaultPalette
  SECTION: $1dc3-$2098 ($02d6 bytes) ["level data"]
           $1dc3 = Level1
           $1e20 = Level2
           $1ed7 = Level3
           $1fc8 = InitializeNewLevel
           $1fe0 = InitializeNewLevel.level1
           $1fe5 = InitializeNewLevel.level2
           $1fea = InitializeNewLevel.level3
           $1fef = InitializeNewLevel.level4
           $1ff0 = InitializeNewLevel.setLevelDataAddress
           $1ff8 = InitializeLevelVars
           $2001 = LevelDataHandler
           $2009 = LevelDataHandler.notEmpty
           $2028 = LevelDataHandler.pointBalloon
           $202c = LevelDataHandler.balloonCactus
           $2030 = LevelDataHandler.bird
           $2034 = LevelDataHandler.bomb
           $2038 = LevelDataHandler.porcupine
           $203c = LevelDataManager
           $2060 = LevelDataManager.spawn
           $206d = LevelDataManager.wait
           $207a = LevelDataManager.waitEnd
           $2088 = LevelDataManager.end
  SECTION: $2099-$229c ($0204 bytes) ["game"]
           $2099 = InitializeGame
           $20a1 = LoadLevel1Graphics
           $20c4 = LoadLevel2Graphics
           $20e6 = TryToUnpause
           $20fd = TryToUnpause.end
           $20fe = SpawnCountdown
           $2129 = SpawnCountdown.end
           $212a = Countdown
           $2131 = Countdown.hasCountedDown
           $2134 = Countdown.countdown
           $2145 = Countdown.balloonPop
           $214d = Countdown.frames
           $2176 = Countdown.frame0
           $2198 = Countdown.frame1
           $21ba = Countdown.frame2
           $21db = Countdown.frame3
           $21fc = Countdown.frame4
           $221d = Countdown.frame5
           $223b = Countdown.remove
           $2250 = Countdown.endFrame
           $2257 = Countdown.end
           $2259 = UpdateSprites
           $226f = UpdateGameCountdown
           $2284 = UpdateGame
  SECTION: $229d-$23f4 ($0158 bytes) ["rom"]
           $229d = Start
           $22da = MenuLoopOpening
           $22da = StartMenu
           $22f2 = MenuLoop
           $22f2 = StartGame
           $232b = OpeningCutsceneLoop
           $233a = SetupNextLevel
           $235b = SetupNextLevel.level1
           $2363 = SetupNextLevel.level2
           $236b = SetupNextLevel.endLevelSetup
           $236b = SetupNextLevel.level6
           $236b = SetupNextLevel.level5
           $236b = SetupNextLevel.level4
           $236b = SetupNextLevel.level3
           $239b = GameCountdownLoop
           $23aa = GameLoop
           $23b9 = StageClear
           $23e6 = StageClearLoop
  SECTION: $23f5-$2515 ($0121 bytes) ["window"]
           $23f5 = RefreshScore
           $242c = RefreshTotal
           $2463 = RefreshLives
           $246c = RefreshBoostBar
           $2476 = RefreshBoostBar.isCharging
           $2482 = RefreshBoostBar.isEmpty
           $2488 = RefreshBoostBar.is25Percent
           $248f = RefreshBoostBar.is50Percent
           $2496 = RefreshBoostBar.is75Percent
           $249d = RefreshBoostBar.isReady
           $24a3 = RefreshAttackBar
           $24ad = RefreshAttackBar.isCharging
           $24b9 = RefreshAttackBar.isEmpty
           $24bf = RefreshAttackBar.is25Percent
           $24c6 = RefreshAttackBar.is50Percent
           $24cd = RefreshAttackBar.is75Percent
           $24d4 = RefreshAttackBar.isReady
           $24da = LoadWindow.loadTiles
           $24da = LoadWindow
           $24e6 = LoadWindow.drawMap
           $2500 = RefreshWindow
  SECTION: $2516-$262f ($011a bytes) ["interrupts"]
           $2516 = InitializeInterrupts
           $252c = VBlankInterrupt
           $253c = LCDInterrupt
           $2546 = LCDInterruptEnd
           $254a = MenuLCDInterrupt
           $255a = MenuLCDInterrupt.reset
           $2563 = MenuLCDInterrupt.far
           $256e = MenuLCDInterrupt.close
           $2577 = MenuLCDInterrupt.end
           $257a = SetMenuInterrupts
           $2588 = SetParkInterrupts
           $258c = Level1LCDInterrupt
           $25a0 = Level1LCDInterrupt.reset
           $25ae = Level1LCDInterrupt.far
           $25b9 = Level1LCDInterrupt.middle
           $25c4 = Level1LCDInterrupt.close2
           $25cd = Level1LCDInterrupt.end
           $25d0 = SetLevel1Interrupts
           $25de = Level2LCDInterrupt
           $25f2 = Level2LCDInterrupt.reset
           $2600 = Level2LCDInterrupt.far
           $260b = Level2LCDInterrupt.middle
           $2616 = Level2LCDInterrupt.close
           $261f = Level2LCDInterrupt.end
           $2622 = SetLevel2Interrupts
  SECTION: $2630-$26b1 ($0082 bytes) ["collision"]
           $2630 = CollisionCheck
           $263b = CollisionCheck.tryOtherY
           $2647 = CollisionCheck.checkX
           $2654 = CollisionCheck.tryOtherX
           $2661 = CollisionCheck.collision
           $2664 = CollisionCheck.noCollision
           $2666 = CollisionWithPlayer
           $2676 = OffScreenXEnemies
           $2687 = OffScreenXEnemies.end
           $2689 = OffScreenYEnemies
           $269a = OffScreenYEnemies.end
           $269c = OffScreenX
           $26a4 = OffScreenX.end
           $26a6 = OffScreenY
           $26b0 = OffScreenY.end
  SECTION: $26b2-$2729 ($0078 bytes) ["controller"]
           $26b2 = InitializeController
           $26b7 = ReadInput
           $26e7 = JOY_RIGHT
           $26ef = JOY_LEFT
           $26f7 = JOY_UP
           $26ff = JOY_DOWN
           $2707 = JOY_A
           $270f = JOY_B
           $2717 = JOY_SELECT
           $271f = JOY_START
           $2727 = JOY_FALSE
  SECTION: $272a-$2783 ($005a bytes) ["scroll"]
           $272a = InitializeParallaxScrolling
           $2735 = IncrementScrollOffset
           $2735 = IncrementScrollOffset.close
           $2743 = IncrementScrollOffset.middle
           $2751 = IncrementScrollOffset.far
           $275f = IncrementScrollOffset.end
           $2760 = HorizontalScroll
           $276d = HorizontalScroll.end
           $276f = VerticalScroll
           $277c = VerticalScroll.end
           $277e = ResetScroll
  SECTION: $2784-$27a1 ($001e bytes) ["OAM DMA routine"]
           $2784 = CopyDMARoutine
           $278b = CopyDMARoutine.copy
           $2792 = DMARoutine
           $2796 = DMARoutine.wait
           $279a = DMARoutineEnd
           $279a = OAMDMA
    SLACK: $187a bytes

ROMX bank #1:
  SECTION: $4000-$551f ($1520 bytes) ["tilesets 2"]
           $4000 = PorcupineTiles
           $40e0 = PorcupineTilesEnd
           $40e0 = OpeningCutsceneTiles
           $4580 = OpeningCutsceneTilesEnd
           $4580 = OpeningCutsceneSpriteTiles
           $45c0 = OpeningCutsceneSpriteTilesEnd
           $45c0 = IntermissionTiles
           $4770 = IntermissionTilesEnd
           $4770 = Level2Tiles
           $4c40 = Level2TilesEnd
           $4c40 = CountdownTiles
           $4c40 = Level3TilesEnd
           $4c40 = Level3Tiles
           $4d40 = CountdownTilesEnd
           $4d40 = WindowTiles
           $4f40 = WindowTilesEnd
           $4f40 = MenuTiles
           $4f60 = MenuTilesEnd
           $4f60 = MenuTitleTiles
           $5520 = MenuTitleTilesEnd
  SECTION: $5520-$605d ($0b3e bytes) ["Song Data2"]
           $5520 = angryTheme
           $5535 = order_cnt
           $5536 = order1
           $5540 = order2
           $554a = order3
           $5554 = order4
           $555e = P0
           $561e = P1
           $56de = P2
           $579e = P3
           $585e = P4
           $591e = P5
           $59de = P6
           $5a9e = P7
           $5b5e = P8
           $5c1e = P9
           $5cde = P10
           $5d9e = P11
           $5e5e = duty_instruments
           $5e5e = itSquareinst1
           $5e62 = itSquareinst2
           $5e66 = itSquareinst3
           $5e6a = itSquareinst4
           $5e6e = itSquareinst5
           $5e72 = itSquareinst6
           $5e76 = itSquareinst7
           $5e7a = itSquareinst8
           $5e7e = itSquareinst9
           $5e82 = itSquareinst10
           $5e86 = itSquareinst11
           $5e8a = itSquareinst12
           $5e8e = itSquareinst13
           $5e92 = itSquareinst14
           $5e96 = itSquareinst15
           $5e9a = wave_instruments
           $5e9a = itWaveinst1
           $5e9e = itWaveinst2
           $5ea2 = itWaveinst3
           $5ea6 = itWaveinst4
           $5eaa = itWaveinst5
           $5eae = itWaveinst6
           $5eb2 = itWaveinst7
           $5eb6 = itWaveinst8
           $5eba = itWaveinst9
           $5ebe = itWaveinst10
           $5ec2 = itWaveinst11
           $5ec6 = itWaveinst12
           $5eca = itWaveinst13
           $5ece = itWaveinst14
           $5ed2 = itWaveinst15
           $5ed6 = noise_instruments
           $5ed6 = itNoiseinst1
           $5ede = itNoiseinst2
           $5ee6 = itNoiseinst3
           $5eee = itNoiseinst4
           $5ef6 = itNoiseinst5
           $5efe = itNoiseinst6
           $5f06 = itNoiseinst7
           $5f0e = itNoiseinst8
           $5f16 = itNoiseinst9
           $5f1e = itNoiseinst10
           $5f26 = itNoiseinst11
           $5f2e = itNoiseinst12
           $5f36 = itNoiseinst13
           $5f3e = itNoiseinst14
           $5f46 = itNoiseinst15
           $5f4e = routines
           $5f4e = __end_hUGE_Routine_0
           $5f4e = __hUGE_Routine_0
           $5f4f = __end_hUGE_Routine_1
           $5f4f = __hUGE_Routine_1
           $5f50 = __end_hUGE_Routine_2
           $5f50 = __hUGE_Routine_2
           $5f51 = __end_hUGE_Routine_3
           $5f51 = __hUGE_Routine_3
           $5f52 = __end_hUGE_Routine_4
           $5f52 = __hUGE_Routine_4
           $5f53 = __end_hUGE_Routine_5
           $5f53 = __hUGE_Routine_5
           $5f54 = __end_hUGE_Routine_6
           $5f54 = __hUGE_Routine_6
           $5f55 = __end_hUGE_Routine_7
           $5f55 = __hUGE_Routine_7
           $5f56 = __hUGE_Routine_8
           $5f56 = __end_hUGE_Routine_8
           $5f57 = __hUGE_Routine_9
           $5f57 = __end_hUGE_Routine_9
           $5f58 = __hUGE_Routine_10
           $5f58 = __end_hUGE_Routine_10
           $5f59 = __hUGE_Routine_11
           $5f59 = __end_hUGE_Routine_11
           $5f5a = __hUGE_Routine_12
           $5f5a = __end_hUGE_Routine_12
           $5f5b = __hUGE_Routine_13
           $5f5b = __end_hUGE_Routine_13
           $5f5c = __end_hUGE_Routine_14
           $5f5c = __hUGE_Routine_14
           $5f5d = __end_hUGE_Routine_15
           $5f5d = __hUGE_Routine_15
           $5f5e = waves
           $5f5e = wave0
           $5f6e = wave1
           $5f7e = wave2
           $5f8e = wave3
           $5f9e = wave4
           $5fae = wave5
           $5fbe = wave6
           $5fce = wave7
           $5fde = wave8
           $5fee = wave9
           $5ffe = wave10
           $600e = wave11
           $601e = wave12
           $602e = wave13
           $603e = wave14
           $604e = wave15
  SECTION: $605e-$657b ($051e bytes) ["Song Data"]
           $605e = menuTheme
           $6073 = order_cnt
           $6074 = order1
           $6076 = order2
           $6078 = order3
           $607a = order4
           $607c = P1
           $613c = P2
           $61fc = P3
           $62bc = P6
           $637c = duty_instruments
           $637c = itSquareinst1
           $6380 = itSquareinst2
           $6384 = itSquareinst3
           $6388 = itSquareinst4
           $638c = itSquareinst5
           $6390 = itSquareinst6
           $6394 = itSquareinst7
           $6398 = itSquareinst8
           $639c = itSquareinst9
           $63a0 = itSquareinst10
           $63a4 = itSquareinst11
           $63a8 = itSquareinst12
           $63ac = itSquareinst13
           $63b0 = itSquareinst14
           $63b4 = itSquareinst15
           $63b8 = wave_instruments
           $63b8 = itWaveinst1
           $63bc = itWaveinst2
           $63c0 = itWaveinst3
           $63c4 = itWaveinst4
           $63c8 = itWaveinst5
           $63cc = itWaveinst6
           $63d0 = itWaveinst7
           $63d4 = itWaveinst8
           $63d8 = itWaveinst9
           $63dc = itWaveinst10
           $63e0 = itWaveinst11
           $63e4 = itWaveinst12
           $63e8 = itWaveinst13
           $63ec = itWaveinst14
           $63f0 = itWaveinst15
           $63f4 = noise_instruments
           $63f4 = itNoiseinst1
           $63fc = itNoiseinst2
           $6404 = itNoiseinst3
           $640c = itNoiseinst4
           $6414 = itNoiseinst5
           $641c = itNoiseinst6
           $6424 = itNoiseinst7
           $642c = itNoiseinst8
           $6434 = itNoiseinst9
           $643c = itNoiseinst10
           $6444 = itNoiseinst11
           $644c = itNoiseinst12
           $6454 = itNoiseinst13
           $645c = itNoiseinst14
           $6464 = itNoiseinst15
           $646c = routines
           $646c = __end_hUGE_Routine_0
           $646c = __hUGE_Routine_0
           $646d = __end_hUGE_Routine_1
           $646d = __hUGE_Routine_1
           $646e = __end_hUGE_Routine_2
           $646e = __hUGE_Routine_2
           $646f = __end_hUGE_Routine_3
           $646f = __hUGE_Routine_3
           $6470 = __end_hUGE_Routine_4
           $6470 = __hUGE_Routine_4
           $6471 = __end_hUGE_Routine_5
           $6471 = __hUGE_Routine_5
           $6472 = __end_hUGE_Routine_6
           $6472 = __hUGE_Routine_6
           $6473 = __end_hUGE_Routine_7
           $6473 = __hUGE_Routine_7
           $6474 = __hUGE_Routine_8
           $6474 = __end_hUGE_Routine_8
           $6475 = __hUGE_Routine_9
           $6475 = __end_hUGE_Routine_9
           $6476 = __hUGE_Routine_10
           $6476 = __end_hUGE_Routine_10
           $6477 = __hUGE_Routine_11
           $6477 = __end_hUGE_Routine_11
           $6478 = __hUGE_Routine_12
           $6478 = __end_hUGE_Routine_12
           $6479 = __hUGE_Routine_13
           $6479 = __end_hUGE_Routine_13
           $647a = __end_hUGE_Routine_14
           $647a = __hUGE_Routine_14
           $647b = __end_hUGE_Routine_15
           $647b = __hUGE_Routine_15
           $647c = waves
           $647c = wave0
           $648c = wave1
           $649c = wave2
           $64ac = wave3
           $64bc = wave4
           $64cc = wave5
           $64dc = wave6
           $64ec = wave7
           $64fc = wave8
           $650c = wave9
           $651c = wave10
           $652c = wave11
           $653c = wave12
           $654c = wave13
           $655c = wave14
           $656c = wave15
  SECTION: $657c-$6978 ($03fd bytes) ["balloon cactus"]
           $657c = InitializeBalloonCactus
           $6585 = InitializeBalloonCactus.loop_u1
           $6590 = SetStruct
           $65cd = SpawnBalloonCactus
           $65e0 = SpawnBalloonCactus.availableSpace
           $65e9 = SpawnBalloonCactus.availableOAMSpace
           $6617 = SpawnBalloonCactus.isLeftside
           $6617 = SpawnBalloonCactus.balloonLeft
           $6630 = SpawnBalloonCactus.balloonRight
           $6640 = SpawnBalloonCactus.cactusLeft
           $664e = SpawnBalloonCactus.cactusRight
           $665e = SpawnBalloonCactus.setStruct
           $6663 = SpawnBalloonCactus.end
           $6668 = ClearCactus
           $667e = ClearBalloon
           $6694 = Clear
           $669e = PopBalloonAnimation
           $66af = PopBalloonAnimation.canSwitchFrames
           $66bd = PopBalloonAnimation.frame0
           $66e1 = PopBalloonAnimation.frame1
           $6705 = PopBalloonAnimation.clear
           $6726 = PopBalloonAnimation.endFrame
           $672d = PopBalloonAnimation.end
           $672e = CactusFallingCollision
           $672f = CactusFallingCollision.checkBird
           $6736 = CactusFallingCollision.birdLoop
           $6747 = CactusFallingCollision.isAlive
           $6777 = CactusFallingCollision.hitBird
           $6785 = CactusFallingCollision.checkBirdLoop
           $6792 = CactusFallingCollision.end
           $6794 = CactusFalling
           $67a6 = CactusFalling.falling
           $67bf = CactusFalling.skipAcceleration
           $67cb = CactusFalling.offScreen
           $67cf = UpdateBalloonPosition
           $67cf = UpdateBalloonPosition.balloonLeft
           $67e5 = UpdateBalloonPosition.balloonRight
           $67f0 = UpdateCactusPosition
           $67f0 = UpdateCactusPosition.cactusLeft
           $6806 = UpdateCactusPosition.cactusRight
           $6811 = Move
           $682c = Move.isLeftside
           $683a = Move.updatePosition
           $6841 = DeathOfBalloonCactus
           $6872 = CollisionBalloonCactus
           $6872 = CollisionBalloonCactus.checkHit
           $688d = CollisionBalloonCactus.checkHitByBullet
           $68ad = CollisionBalloonCactus.checkHitPlayer
           $68c7 = BalloonCactusUpdate
           $68ce = BalloonCactusUpdate.loop
           $6925 = BalloonCactusUpdate.isAlive
           $6942 = BalloonCactusUpdate.offScreen
           $6947 = BalloonCactusUpdate.popped
           $6951 = BalloonCactusUpdate.notPopping
           $695b = BalloonCactusUpdate.checkLoop
           $696a = BalloonCactusUpdate.checkLoopSkipSet
  SECTION: $6979-$6cee ($0376 bytes) ["bird"]
           $6979 = InitializeBird
           $6982 = InitializeBird.loop_u1
           $698d = SetStruct
           $69b2 = SpawnBird
           $69c5 = SpawnBird.availableSpace
           $69cf = SpawnBird.availableOAMSpace
           $69ec = SpawnBird.isRightside
           $69f1 = SpawnBird.birdLeft
           $6a0a = SpawnBird.birdMiddle
           $6a1a = SpawnBird.birdRight
           $6a2c = SpawnBird.isLeftside
           $6a2c = SpawnBird.leftBirdLeft
           $6a45 = SpawnBird.leftBirdMiddle
           $6a55 = SpawnBird.leftBirdRight
           $6a65 = SpawnBird.setStruct
           $6a6a = SpawnBird.end
           $6a6f = BirdRightsideFlap
           $6a76 = BirdRightsideFlap.soaring
           $6a9e = BirdRightsideFlap.flapping
           $6acf = BirdLeftsideFlap
           $6ad6 = BirdLeftsideFlap.soaring
           $6afe = BirdLeftsideFlap.flapping
           $6b2f = Clear
           $6b4c = UpdateBirdPosition
           $6b4c = UpdateBirdPosition.birdLeft
           $6b62 = UpdateBirdPosition.birdMiddle
           $6b6e = UpdateBirdPosition.birdRight
           $6b79 = Move
           $6b80 = Move.isRightside
           $6b8e = Move.isLeftside
           $6b98 = Move.moveDown
           $6ba6 = Move.moveEnd
           $6baa = BirdFall
           $6bb5 = BirdFall.checkOffscreenY
           $6bc7 = BirdFall.end
           $6bc9 = DeathOfBird
           $6be1 = DeathOfBird.facingLeft
           $6c0c = DeathOfBird.facingRight
           $6c37 = CollisionBird
           $6c37 = CollisionBird.checkHitPlayer
           $6c51 = BirdUpdate
           $6c58 = BirdUpdate.loop
           $6c96 = BirdUpdate.isAlive
           $6cbb = BirdUpdate.offScreen
           $6cc0 = BirdUpdate.isDead
           $6cd1 = BirdUpdate.checkLoop
  SECTION: $6cef-$6faf ($02c1 bytes) ["bomb"]
           $6cef = InitializeBomb
           $6cf8 = InitializeBomb.loop_u1
           $6d03 = SetStruct
           $6d24 = SpawnBomb
           $6d36 = SpawnBomb.availableSpace
           $6d3f = SpawnBomb.availableOAMSpace
           $6d55 = SpawnBomb.balloonLeft
           $6d6f = SpawnBomb.balloonRight
           $6d80 = SpawnBomb.bombSpace
           $6d8b = SpawnBomb.setStruct
           $6d90 = SpawnBomb.end
           $6d95 = Clear
           $6db2 = Move
           $6dba = Move.balloonLeft
           $6dd0 = Move.balloonRight
           $6ddc = Move.bombSpace
           $6de7 = DeathOfBomb
           $6df1 = CollisionBomb
           $6df1 = CollisionBomb.checkHit
           $6e0f = CollisionBomb.checkHitByBullet
           $6e2f = CollisionBomb.end
           $6e30 = ExplosionAnimation
           $6e41 = ExplosionAnimation.canSwitchFrames
           $6e59 = ExplosionAnimation.frame0
           $6e7e = ExplosionAnimation.frame1
           $6ec1 = ExplosionAnimation.frame2
           $6eed = ExplosionAnimation.frame3
           $6f19 = ExplosionAnimation.clear
           $6f1d = ExplosionAnimation.endFrame
           $6f24 = ExplosionAnimation.end
           $6f25 = BombUpdate
           $6f2c = BombUpdate.loop
           $6f66 = BombUpdate.isAlive
           $6f83 = BombUpdate.offScreen
           $6f88 = BombUpdate.popped
           $6f92 = BombUpdate.checkLoop
  SECTION: $6fb0-$71d3 ($0224 bytes) ["point balloon"]
           $6fb0 = InitializePointBalloon
           $6fb9 = InitializePointBalloon.loop_u1
           $6fc4 = SetStruct
           $6fe5 = SpawnPointBalloon
           $6ff7 = SpawnPointBalloon.availableSpace
           $7000 = SpawnPointBalloon.availableOAMSpace
           $7016 = SpawnPointBalloon.balloonLeft
           $702f = SpawnPointBalloon.balloonRight
           $703f = SpawnPointBalloon.setStruct
           $7044 = SpawnPointBalloon.end
           $7049 = PopBalloonAnimation
           $705a = PopBalloonAnimation.canSwitchFrames
           $7066 = PopBalloonAnimation.frame0
           $708a = PopBalloonAnimation.frame1
           $70ae = PopBalloonAnimation.clear
           $70b2 = PopBalloonAnimation.endFrame
           $70ba = Clear
           $70d3 = Move
           $70da = Move.balloonLeft
           $70f0 = Move.balloonRight
           $70fb = DeathOfPointBalloon
           $710d = CollisionPointBalloon
           $710d = CollisionPointBalloon.checkHit
           $7128 = CollisionPointBalloon.checkHitByBullet
           $7148 = CollisionPointBalloon.end
           $7149 = PointBalloonUpdate
           $7150 = PointBalloonUpdate.loop
           $718a = PointBalloonUpdate.isAlive
           $71a7 = PointBalloonUpdate.offScreen
           $71ac = PointBalloonUpdate.popped
           $71b6 = PointBalloonUpdate.checkLoop
           $71c5 = PointBalloonUpdate.checkLoopSkipSet
  SECTION: $71d4-$731c ($0149 bytes) ["porcupine"]
           $71d4 = InitializePorcupine
           $71dd = InitializePorcupine.loop_u1
           $71e8 = SetStruct
           $71fd = SpawnPorcupine
           $7210 = SpawnPorcupine.availableSpace
           $721a = SpawnPorcupine.availableOAMSpace
           $7230 = SpawnPorcupine.topLeft
           $7249 = SpawnPorcupine.topMiddle
           $7259 = SpawnPorcupine.topMiddle2
           $7269 = SpawnPorcupine.topRight
           $7279 = SpawnPorcupine.bottomLeft
           $7289 = SpawnPorcupine.bottomMiddle
           $729b = SpawnPorcupine.bottomMiddle2
           $72ad = SpawnPorcupine.bottomRight
           $72bf = SpawnPorcupine.setStruct
           $72c4 = SpawnPorcupine.end
           $72c9 = PorcupineUpdate
           $72d0 = PorcupineUpdate.loop
           $72fe = PorcupineUpdate.offScreen
           $72fe = PorcupineUpdate.isAlive
           $7300 = PorcupineUpdate.isDead
           $7300 = PorcupineUpdate.checkLoop
           $730f = PorcupineUpdate.checkLoopSkipSet
  SECTION: $731d-$745a ($013e bytes) ["menu"]
           $731d = InitializeMenu
           $7329 = LoadMenuOpeningGraphics
           $7341 = LoadMenuGraphics
           $7373 = SpawnMenuCursor
           $737c = SpawnMenuCursor.availableSpace
           $7397 = SpawnMenuCursor.end
           $7398 = BlinkMenuCursor
           $73a0 = BlinkMenuCursor.blink
           $73b1 = BlinkMenuCursor.show
           $73b5 = BlinkMenuCursor.empty
           $73b9 = SelectMode
           $73c2 = MenuInput
           $73cc = MenuInput.moveSelected
           $73d2 = MenuInput.selectMode
           $73db = MenuInput.end
           $73dc = UpdateMenuOpening
           $73f8 = UpdateMenuOpening.startSound
           $73fd = UpdateMenuOpening.scrollUpTitle
           $7409 = UpdateMenuOpening.endSound
           $740e = UpdateMenuOpening.scrollDownTitle
           $741a = UpdateMenuOpening.scrollUpTitle2
           $7426 = UpdateMenuOpening.fadeOut
           $742c = UpdateMenuOpening.next
           $7430 = UpdateMenuOpening.endFrame
           $7437 = UpdateMenuOpening.end
           $7438 = UpdateMenu
           $7438 = UpdateMenu.fadeIn
           $743e = UpdateMenu.hasFadedIn
           $7452 = UpdateMenu.fadeOut
  SECTION: $745b-$7539 ($00df bytes) ["stage clear"]
           $745b = InitializeStageClear
           $7468 = LoadStageClearGraphics
           $7483 = RefreshAddLives
           $7492 = RefreshAddLives.hasLivesToAdd
           $749f = RefreshStageClear
           $74b7 = UpdateStageClear
           $74e7 = UpdateStageClear.pause
           $74f8 = UpdateStageClear.copyFirstDigitToTotal
           $750c = UpdateStageClear.copyPointsToTotal
           $751c = UpdateStageClear.addGainedLives
           $7532 = UpdateStageClear.endFrame
  SECTION: $753a-$7608 ($00cf bytes) ["opening cutscene"]
           $753a = InitializeOpeningCutscene
           $753f = LoadParkGraphics
           $7569 = SpawnHandWave
           $758d = HandWaveAnimation
           $7594 = HandWaveAnimation.frame0
           $75b0 = HandWaveAnimation.frame1
           $75cb = HandWaveAnimation.end
           $75cc = UpdatePark.fadeIn
           $75cc = UpdatePark
           $75d2 = UpdatePark.hasFadedIn
           $75eb = UpdatePark.fadeOut
           $75f3 = UpdatePark.skipFade
           $75f6 = UpdatePark.moveUp
           $75ff = UpdatePark.flyUpNormal
           $7605 = UpdatePark.flyUpFast
  SECTION: $7609-$76d6 ($00ce bytes) ["palettes"]
           $7609 = ResetFading
           $7617 = InitializePalettes
           $7629 = FadeOutPalettes
           $7630 = FadeOutPalettes.hasFadedIn
           $7633 = FadeOutPalettes.fadeOut
           $7653 = FadeOutPalettes.fade1
           $765b = FadeOutPalettes.fade2
           $7663 = FadeOutPalettes.fade3
           $766b = FadeOutPalettes.fade4
           $7671 = FadeOutPalettes.fadePalettes
           $7677 = FadeOutPalettes.increaseFrame
           $767e = FadeOutPalettes.end
           $7680 = FadeInPalettes
           $7687 = FadeInPalettes.hasFadedIn
           $768a = FadeInPalettes.fadeIn
           $76aa = FadeInPalettes.fade1
           $76b2 = FadeInPalettes.fade2
           $76ba = FadeInPalettes.fade3
           $76c2 = FadeInPalettes.fade4
           $76c8 = FadeInPalettes.fadePalettes
           $76ce = FadeInPalettes.increaseFrame
           $76d5 = FadeInPalettes.end
  SECTION: $76d7-$7790 ($00ba bytes) ["sound"]
           $76d7 = AUDIO_OFF
           $76db = AUDIO_ON
           $76e0 = PopSound
           $76f3 = ExplosionSound
           $7700 = WaveSound
           $770d = FallingSound
           $7722 = RisingSound
           $7737 = StopSweepSound
           $773c = CollectSound
           $7751 = WrongAnswerSound
           $7768 = PercussionSound
           $7775 = BassSound
           $7786 = ClearSound
  SECTION: $7791-$7844 ($00b4 bytes) ["memory"]
           $7791 = MEMCPY
           $7791 = MEMCPY.loop
           $7795 = MEMCPY.checkLoop
           $779a = MEMCPY_WITH_OFFSET
           $779b = MEMCPY_WITH_OFFSET.loop
           $77a6 = MEMCPY_WITH_OFFSET.checkLoop
           $77ac = MEMCPY_SINGLE_SCREEN
           $77ae = MEMCPY_SINGLE_SCREEN.loop
           $77c2 = MEMCPY_SINGLE_SCREEN.checkLoop
           $77c8 = ClearOAM
           $77cf = ClearOAM.loop_u2
           $77d8 = ClearRAM
           $77df = ClearRAM.loop_u3
           $77e8 = RequestOAMSpace
           $77f1 = RequestOAMSpace.loop
           $7808 = RequestOAMSpace.availableSpace
           $780d = RequestOAMSpace.sufficientSpace
           $781d = RequestOAMSpace.isNotZero4
           $781e = RequestOAMSpace.isNotZero3
           $781f = RequestOAMSpace.isNotZero2
           $7820 = RequestOAMSpace.isNotZero1
           $7822 = RequestOAMSpace.notEnoughSprites
           $782a = RequestOAMSpace.end
           $782d = RequestRAMSpace
           $782d = RequestRAMSpace.loop
           $7832 = RequestRAMSpace.availableSpace
           $7836 = RequestRAMSpace.checkLoop
           $7843 = RequestRAMSpace.noFreeSpace
           $7844 = RequestRAMSpace.end
  SECTION: $7845-$78c0 ($007c bytes) ["score"]
           $7845 = InitializeScore
           $784d = InitializeTotal
           $7855 = AddPoints
           $785c = AddPoints.carry
           $7865 = DecrementPoints
           $786e = DecrementPoints.carry
           $7875 = DecrementPoints.checkCapAtZero
           $787e = DecrementPoints.noCap
           $7883 = IsScoreZero
           $7892 = AddTotal
           $7895 = AddTotal.saveFourthDigit
           $789d = AddTotal.toBCD
           $78a1 = AddTotal.carry
           $78a5 = AddTotal.checkAddLife
           $78af = AddTotal.addLife
           $78ba = AddTotal.checkLoop
  SECTION: $78c1-$78fa ($003a bytes) ["math"]
           $78c1 = MODULO
           $78c3 = MODULO.loop
           $78c8 = DIVISION
           $78ce = DIVISION.loop
           $78d3 = DIVISION.end
           $78d6 = ToBCD
           $78ec = MULTIPLY
           $78ee = MULTIPLY.loop
           $78f9 = MULTIPLY.end
  SECTION: $78fb-$792c ($0032 bytes) ["lcd"]
           $78fb = LCD_OFF
           $7902 = LCD_ON
           $7909 = LCD_ON_NO_WINDOW
           $7910 = WaitVBlank
           $7917 = WaitVBlank.loop
           $7922 = SetupWindow
  SECTION: $792d-$7941 ($0015 bytes) ["general initialization"]
           $792d = InitializeGeneralVars
  SECTION: $7942-$7949 ($0008 bytes) ["timer"]
           $7942 = UpdateGlobalTimer
    SLACK: $06b6 bytes

WRAM0 bank #0:
  SECTION: $c000-$c007 ($0008 bytes) ["general RAM vars"]
           $c000 = wOAMGeneral1
           $c001 = wOAMGeneral2
           $c002 = wUpdateTilemapAddress
           $c004 = wUpdateTilemapOffset
           $c005 = wUpdateTilemapIndex
           $c006 = wHasUpdatedNextTilemapAddress
           $c007 = wLastUpdatedSCX
  SECTION: $c008-$c04d ($0046 bytes) ["Playback variables"]
           $c008 = _start_vars
           $c008 = order_cnt
           $c009 = order1
           $c009 = _start_song_descriptor_pointers
           $c00b = order2
           $c00d = order3
           $c00f = order4
           $c011 = duty_instruments
           $c013 = wave_instruments
           $c015 = noise_instruments
           $c017 = routines
           $c019 = waves
           $c01b = mute_channels
           $c01b = _end_song_descriptor_pointers
           $c01c = pattern1
           $c01e = pattern2
           $c020 = pattern3
           $c022 = pattern4
           $c024 = ticks_per_row
           $c025 = current_order
           $c026 = next_order
           $c027 = row_break
           $c028 = temp_note_value
           $c02a = row
           $c02b = tick
           $c02c = counter
           $c02d = current_wave
           $c02d = _hUGE_current_wave
           $c02e = channel_period1
           $c02e = channels
           $c02e = channel1
           $c030 = toneporta_target1
           $c032 = channel_note1
           $c033 = vibrato_tremolo_phase1
           $c034 = envelope1
           $c035 = highmask1
           $c036 = channel_period2
           $c036 = channel2
           $c038 = toneporta_target2
           $c03a = channel_note2
           $c03b = vibrato_tremolo_phase2
           $c03c = envelope2
           $c03d = highmask2
           $c03e = channel_period3
           $c03e = channel3
           $c040 = toneporta_target3
           $c042 = channel_note3
           $c043 = vibrato_tremolo_phase3
           $c044 = envelope3
           $c045 = highmask3
           $c046 = channel_period4
           $c046 = channel4
           $c048 = toneporta_target4
           $c04a = channel_note4
           $c04b = vibrato_tremolo_phase4
           $c04c = envelope4
           $c04d = highmask4
           $c04e = _end_vars
  SECTION: $c04e-$c06d ($0020 bytes) ["point balloon vars"]
           $c04e = pointBalloon
  SECTION: $c06e-$c08d ($0020 bytes) ["bomb vars"]
           $c06e = bomb
  SECTION: $c08e-$c0ab ($001e bytes) ["balloon cactus vars"]
           $c08e = balloonCactus
  SECTION: $c0ac-$c0c2 ($0017 bytes) ["player vars"]
           $c0ac = wPlayerY
           $c0ad = wPlayerX
           $c0ae = wPlayerY2
           $c0af = wPlayerX2
           $c0b0 = wPlayerAlive
           $c0b1 = wPlayerPopping
           $c0b2 = wPlayerPoppingFrame
           $c0b3 = wPlayerPoppingTimer
           $c0b4 = wPlayerFalling
           $c0b5 = wPlayerFallSpeed
           $c0b6 = wPlayerFallingTimer
           $c0b7 = wPlayerDelayFallingTimer
           $c0b8 = wPlayerRespawnTimer
           $c0b9 = wPlayerSpeed
           $c0ba = wPlayerLives
           $c0bb = wPlayerRight
           $c0bc = wPlayerBulletY
           $c0bd = wPlayerBulletX
           $c0be = wPlayerBulletAlive
           $c0bf = wPlayerBulletRight
           $c0c0 = wPlayerInvincible
           $c0c1 = wPlayerBoost
           $c0c2 = wPlayerAttack
  SECTION: $c0c3-$c0d4 ($0012 bytes) ["bird vars"]
           $c0c3 = bird
  SECTION: $c0d5-$c0e6 ($0012 bytes) ["enemy struct vars"]
           $c0d5 = wEnemyOffset
           $c0d6 = wEnemyOffset2
           $c0d7 = wEnemyY
           $c0d8 = wEnemyX
           $c0d9 = wEnemyActive
           $c0da = wEnemyOAM
           $c0db = wEnemyAlive
           $c0dc = wEnemyPopping
           $c0dd = wEnemyPoppingFrame
           $c0de = wEnemyPoppingTimer
           $c0df = wEnemyRightside
           $c0e0 = wEnemyY2
           $c0e1 = wEnemyX2
           $c0e2 = wEnemyFalling
           $c0e3 = wEnemyFallingSpeed
           $c0e4 = wEnemyFallingTimer
           $c0e5 = wEnemyDelayFallingTimer
           $c0e6 = wEnemyToDie
  SECTION: $c0e7-$c0ec ($0006 bytes) ["score vars"]
           $c0e7 = wScore
           $c0ea = wTotal
  SECTION: $c0ed-$c0f1 ($0005 bytes) ["porcupine vars"]
           $c0ed = porcupine
  SECTION: $c0f2-$c0f5 ($0004 bytes) ["palettes vars"]
           $c0f2 = wFadeInFrame
           $c0f3 = wFadeOutFrame
           $c0f4 = wTriggerFadeIn
           $c0f5 = wTriggerFadeOut
  SECTION: $c0f6-$c0f9 ($0004 bytes) ["level vars"]
           $c0f6 = wLevel
           $c0f7 = wLevelWaitCounter
           $c0f8 = wLevelDataAddress
  SECTION: $c0fa-$c0fc ($0003 bytes) ["stage clear vars"]
           $c0fa = wStageClearTimer
           $c0fb = wStageClearFrame
           $c0fc = wLivesToAdd
  SECTION: $c0fd-$c0ff ($0003 bytes) ["controller vars"]
           $c0fd = wControllerDown
           $c0fe = wControllerPressed
           $c0ff = wPaused
  SECTION: $c100-$c19f ($00a0 bytes) ["OAM vars"]
           $c100 = wPlayerCactusOAM
           $c108 = wPlayerBalloonOAM
           $c110 = wPlayerBulletOAM
           $c114 = OAMVars
           $c114 = wOAM
           $c1a0 = OAMVarsEnd
  SECTION: $c1a0-$c1a2 ($0003 bytes) ["scroll vars"]
           $c1a0 = wParallaxClose
           $c1a1 = wParallaxMiddle
           $c1a2 = wParallaxFar
  SECTION: $c1a3-$c1a5 ($0003 bytes) ["interrupts vars"]
           $c1a3 = wVBlankFlag
           $c1a4 = wLCDInterrupt
  SECTION: $c1a6-$c1a7 ($0002 bytes) ["menu vars"]
           $c1a6 = wMenuFrame
           $c1a7 = wSelectedMode
  SECTION: $c1a8-$c1a8 ($0001 byte) ["timer vars"]
           $c1a8 = wGlobalTimer
  SECTION: $c1a9-$c1a9 ($0001 byte) ["game vars"]
           $c1a9 = wCountdownFrame
  SECTION: $c1aa-$c1aa ($0001 byte) ["opening cutscene vars"]
           $c1aa = wHandWavingFrame
    SLACK: $0e55 bytes

HRAM bank #0:
  SECTION: $ff80-$ff87 ($0008 bytes) ["OAM DMA"]
           $ff80 = hOAMDMA
    SLACK: $0077 bytes

USED:
    ROM0: $2786 bytes in 1 bank
    ROMX: $394a bytes in 1 bank
    WRAM0: $01ab bytes in 1 bank
    HRAM: $0008 bytes in 1 bank
